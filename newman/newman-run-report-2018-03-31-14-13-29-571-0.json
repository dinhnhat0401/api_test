{
  "collection": {
    "_": {
      "postman_id": "f695cab7-6878-eb55-7943-ad88e1ccfd65"
    },
    "description": {
      "content": "Postman Echo is service you can use to test your REST clients and make sample API calls. It provides endpoints for `GET`, `POST`, `PUT`, various auth mechanisms and other utility endpoints.\n\nThe documentation for the endpoints as well as example responses can be found at [https://postman-echo.com](https://postman-echo.com/?source=echo-collection-app-onboarding)",
      "type": "text/plain"
    },
    "item": [
      {
        "_": {},
        "id": "edff59c3-c6e7-484b-8f13-31d481a238b2",
        "name": "Request Methods",
        "description": {
          "content": "HTTP has multiple request \"verbs\", such as `GET`, `PUT`, `POST`, `DELETE`,\n`PATCH`, `HEAD`, etc. \n\nAn HTTP Method (verb) defines how a request should be interpreted by a server. \nThe endpoints in this section demonstrate various HTTP Verbs. Postman supports \nall the HTTP Verbs, including some rarely used ones, such as `PROPFIND`, `UNLINK`, \netc.\n\nFor details about HTTP Verbs, refer to [RFC 2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html#sec9)\n",
          "type": "text/plain"
        },
        "item": [
          {
            "_": {},
            "id": "a66794d5-a0af-47a0-90aa-c95d2322baf3",
            "name": "GET Request",
            "request": {
              "description": {
                "content": "The HTTP `GET` request method is meant to retrieve data from a server. The data\nis identified by a unique URI (Uniform Resource Identifier). \n\nA `GET` request can pass parameters to the server using \"Query String \nParameters\". For example, in the following request,\n\n> http://example.com/hi/there?hand=wave\n\nThe parameter \"hand\" has the value \"wave\".\n\nThis endpoint echoes the HTTP headers, request parameters and the complete\nURI requested.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "get"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "foo1",
                    "value": "bar1"
                  },
                  {
                    "key": "foo2",
                    "value": "bar2"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": ""
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "cadfe554-8e82-4fa6-9ecb-1a4eab88087f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response body has json with request queries\", function () {",
                    "    pm.response.to.have.jsonBody('args.foo1', 'bar1')",
                    "        .and.have.jsonBody('args.foo2', 'bar2');",
                    "});"
                  ],
                  "_lastExecutionId": "9755e0ea-426d-4dd4-9125-9befd2179cc8"
                }
              }
            ]
          },
          {
            "_": {},
            "id": "c833cc5e-c045-401b-96da-bd70b5dfa780",
            "name": "POST Raw Text",
            "request": {
              "description": {
                "content": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "post"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "This is expected to be sent back as part of response body."
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "6ec5d0c5-226a-4a8e-9ab8-13e5d8821e71",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response body has json with request body\", function () {",
                    "    pm.response.to.have.jsonBody('data', ",
                    "        'This is expected to be sent back as part of response body.');",
                    "});"
                  ],
                  "_lastExecutionId": "ffdc057e-d51f-4bc6-947d-a9d0dfc4e8ca"
                }
              }
            ]
          },
          {
            "_": {},
            "id": "e949b4c9-2cde-4c15-9aa5-b4a26c3c068e",
            "name": "POST Form Data",
            "request": {
              "description": {
                "content": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested when data is sent as a form parameter.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "post"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "POST",
              "body": {
                "mode": "urlencoded",
                "urlencoded": [
                  {
                    "key": "foo1",
                    "value": "bar1"
                  },
                  {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "foo2",
                    "value": "bar2"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "04ee7a8c-57ff-4e74-8286-9fff01ac0764",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response body has json with form data\", function () {",
                    "    pm.response.to.have.jsonBody('form.foo1', 'bar1')",
                    "        .and.have.jsonBody('form.foo2', 'bar2');",
                    "});"
                  ],
                  "_lastExecutionId": "cf39f667-46ff-4508-bb89-233b98dfbdcb"
                }
              }
            ]
          },
          {
            "_": {},
            "id": "2c9e09b6-7450-4609-84e2-a0761cad61db",
            "name": "PUT Request",
            "request": {
              "description": {
                "content": "The HTTP `PUT` request method is similar to HTTP `POST`. It too is meant to \ntransfer data to a server (and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `PUT` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following \nraw HTTP request,\n\n> PUT /hi/there?hand=wave\n>\n> <request-body>\n\n\n",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "put"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "PUT",
              "body": {
                "mode": "raw",
                "raw": "This is expected to be sent back as part of response body."
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "6c4693dc-3ca0-4df5-ad80-7944acb244f7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response body has json with form data\", function () {",
                    "    pm.response.to.have.jsonBody('data', ",
                    "        'This is expected to be sent back as part of response body.');",
                    "});"
                  ],
                  "_lastExecutionId": "66d85521-4eba-4e44-835d-1b5c522b812f"
                }
              }
            ]
          },
          {
            "_": {},
            "id": "b9c27c27-0400-4780-9949-fd9ebdb2406c",
            "name": "PATCH Request",
            "request": {
              "description": {
                "content": "The HTTP `PATCH` method is used to update resources on a server. The exact\nuse of `PATCH` requests depends on the server in question. There are a number\nof server implementations which handle `PATCH` differently. Technically, \n`PATCH` supports both Query String parameters and a Request Body.\n\nThis endpoint accepts an HTTP `PATCH` request and provides debug information\nsuch as the HTTP headers, Query String arguments, and the Request Body.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "patch"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "PATCH",
              "body": {
                "mode": "raw",
                "raw": "This is expected to be sent back as part of response body."
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "7ef88543-450a-4bda-9d9f-ec528f18eee7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response body has json with form data\", function () {",
                    "    pm.response.to.have.jsonBody('data', ",
                    "        'This is expected to be sent back as part of response body.');",
                    "});"
                  ],
                  "_lastExecutionId": "b04601db-6d98-42f5-990f-9f4bdf758bcd"
                }
              }
            ]
          },
          {
            "_": {},
            "id": "b6b055ca-4e43-4e09-b237-e4761bb81d12",
            "name": "DELETE Request",
            "request": {
              "description": {
                "content": "The HTTP `DELETE` method is used to delete resources on a server. The exact\nuse of `DELETE` requests depends on the server implementation. In general, \n`DELETE` requests support both, Query String parameters as well as a Request \nBody.\n\nThis endpoint accepts an HTTP `DELETE` request and provides debug information\nsuch as the HTTP headers, Query String arguments, and the Request Body.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "delete"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "DELETE",
              "body": {
                "mode": "raw",
                "raw": "This is expected to be sent back as part of response body."
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "f98e955f-292c-4c3b-9cf4-bd040388b454",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response body has json with form data\", function () {",
                    "    pm.response.to.have.jsonBody('data', ",
                    "        'This is expected to be sent back as part of response body.');",
                    "});"
                  ],
                  "_lastExecutionId": "c7dfa061-fb8a-4c87-85e7-bb31d17467eb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "_": {},
        "id": "a80bf294-54b4-4579-a81e-e9fab86fce35",
        "name": "Headers",
        "description": {
          "content": "The following set of endpoints allow one to see the headers being sent as part of a request and to get a custom set of headers as part of response.\n\nHTTP header fields provide required information about the request or response, or about the object sent in the message body. Both request headers and response headers can be controlled using these endpoints.",
          "type": "text/plain"
        },
        "item": [
          {
            "_": {},
            "id": "1e7e59b8-2191-4a06-abb2-f35747f69e3a",
            "name": "Request Headers",
            "request": {
              "description": {
                "content": "A `GET` request to this endpoint returns the list of all request headers as part of the response JSON.\nIn Postman, sending your own set of headers through the [Headers tab](https://www.getpostman.com/docs/requests#headers?source=echo-collection-app-onboarding) will reveal the headers as part of the response.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "headers"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "my-sample-header",
                  "value": "Lorem ipsum dolor sit amet"
                }
              ],
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": ""
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "javascript",
                  "postman_previewtype": "html"
                },
                "id": "cc74ac33-8c60-495d-b0aa-e72539b8b038",
                "name": "my-sample-header",
                "originalRequest": {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "url": {
                    "protocol": "https",
                    "path": [
                      "headers"
                    ],
                    "host": [
                      "echo",
                      "getpostman",
                      "com"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "my-sample-header",
                      "value": "Lorem ipsum dolor sit amet"
                    }
                  ],
                  "method": "GET",
                  "body": {
                    "mode": "raw",
                    "raw": ""
                  }
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "342"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Thu, 31 Mar 2016 11:14:00 GMT"
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.6.2"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "X-Powered-By",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "X-Powered-By",
                    "value": "Sails <sailsjs.org>"
                  }
                ],
                "body": "{\"headers\":{\"host\":\"echo.getpostman.com\",\"accept\":\"*/*\",\"accept-encoding\":\"gzip, deflate, sdch\",\"accept-language\":\"en-US,en;q=0.8\",\"cache-control\":\"no-cache\",\"my-sample-header\":\"Lorem ipsum dolor sit amet\",\"postman-token\":\"3c8ea80b-f599-fba6-e0b4-a0910440e7b6\",\"user-agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36\",\"x-forwarded-port\":\"443\",\"x-forwarded-proto\":\"https\"}}",
                "cookie": [
                  {
                    "name": "sails.sid",
                    "expires": null,
                    "domain": "echo.getpostman.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": true,
                    "hostOnly": true,
                    "session": true,
                    "value": "s%3A9stja5zKmIILxq9Jvtha7Lp9LIz1VIdK.Vp8MHC%2BEUJe4ICZPXn2JAoXaV2bTgtoQd%2B3XJLNr51Y"
                  }
                ],
                "responseTime": "460"
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "4b95e7fa-b3ad-4bcf-9a26-b724838300dc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "// we check to ensire that the headers we sent as request is returned as part of",
                    "// the response body. if you change the request headers, make sure to add them",
                    "// to the tests here",
                    "pm.test(\"sample request header should be returned in response body\", function () {",
                    "    pm.response.to.have.jsonBody('headers.my-sample-header', 'Lorem ipsum dolor sit amet');",
                    "});"
                  ],
                  "_lastExecutionId": "05b3a322-40e3-45d3-b3f0-4e9b436bf787"
                }
              }
            ]
          },
          {
            "_": {},
            "id": "cb91e22a-f650-4f93-a7f2-b09a11c94bce",
            "name": "Response Headers",
            "request": {
              "description": {
                "content": "This endpoint causes the server to send custom set of response headers. Providing header values as part of the URL parameters of a `GET` request to this endpoint returns the same as part of response header.\n\nTo send your own set of headers, simply add or replace the the URL parameters with your own set.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "response-headers"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "foo1",
                    "value": "bar1"
                  },
                  {
                    "key": "foo2",
                    "value": "bar2"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": ""
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "html",
                  "postman_previewtype": "html"
                },
                "id": "b97bd117-ef92-424a-aa8f-274ba7d5a7ae",
                "name": "Response headers",
                "originalRequest": {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "url": {
                    "protocol": "https",
                    "path": [
                      "response-headers"
                    ],
                    "host": [
                      "echo",
                      "getpostman",
                      "com"
                    ],
                    "query": [
                      {
                        "key": "Content-Type",
                        "value": "text/html"
                      },
                      {
                        "key": "test",
                        "value": "response_headers"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {
                    "mode": "raw",
                    "raw": ""
                  }
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "71"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "text/html; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Thu, 31 Mar 2016 11:14:18 GMT"
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.6.2"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "X-Powered-By",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "X-Powered-By",
                    "value": "Sails <sailsjs.org>"
                  },
                  {
                    "name": "test",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "test",
                    "value": "response_headers"
                  }
                ],
                "body": "{\"Content-Type\":\"text/html\",\"test\":\"response_headers\"}",
                "cookie": [
                  {
                    "name": "sails.sid",
                    "expires": null,
                    "domain": "echo.getpostman.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": true,
                    "hostOnly": true,
                    "session": true,
                    "value": "s%3A9stja5zKmIILxq9Jvtha7Lp9LIz1VIdK.Vp8MHC%2BEUJe4ICZPXn2JAoXaV2bTgtoQd%2B3XJLNr51Y"
                  }
                ],
                "responseTime": "568"
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "a7f6b4fd-64b7-473a-b12a-fc0a4141db2c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response has the headers sent as part of request query\", function () {",
                    "    pm.response.to.have.header('foo1', 'bar1')",
                    "        .and.have.header('foo2', 'bar2');",
                    "});",
                    "",
                    "pm.test(\"sample request param should be returned in response body\", function () {",
                    "    pm.response.to.have.jsonBody('foo1', 'bar1')",
                    "        .and.have.jsonBody('foo2', 'bar2');",
                    "});"
                  ],
                  "_lastExecutionId": "36b83503-d349-40a5-ae09-af5f62727451"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "_": {},
        "id": "4861f943-ef52-455d-8d87-c3ec260ef316",
        "name": "Authentication Methods",
        "description": {
          "content": "",
          "type": "text/plain"
        },
        "item": [
          {
            "_": {},
            "id": "fc566bc6-e11e-4b69-98e5-1c72431413b8",
            "name": "Basic Auth",
            "request": {
              "description": {
                "content": "This endpoint simulates a **basic-auth** protected endpoint. \nThe endpoint accepts a default username and password and returns a status code of `200 ok` only if the same is provided. \nOtherwise it will return a status code `401 unauthorized`.\n\n> Username: `postman`\n> \n> Password: `password`\n\nTo use this endpoint, send a request with the header `Authorization: Basic cG9zdG1hbjpwYXNzd29yZA==`. \nThe cryptic latter half of the header value is a base64 encoded concatenation of the default username and password. \nUsing Postman, to send this request, you can simply fill in the username and password in the \"Authorization\" tab and Postman will do the rest for you.\n\nTo know more about basic authentication, refer to the [Basic Access Authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) wikipedia article.\nThe article on [authentication helpers](https://www.getpostman.com/docs/helpers#basic-auth?source=echo-collection-app-onboarding) elaborates how to use the same within the Postman app.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "basic-auth"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": ""
              },
              "auth": {
                "type": "basic",
                "basic": [
                  {
                    "type": "string",
                    "value": "postman",
                    "key": "username"
                  },
                  {
                    "type": "string",
                    "value": "password",
                    "key": "password"
                  },
                  {
                    "type": "any",
                    "key": "saveHelperData"
                  },
                  {
                    "type": "boolean",
                    "value": false,
                    "key": "showPassword"
                  }
                ]
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "javascript",
                  "postman_previewtype": "html"
                },
                "id": "4fea3264-de59-442e-b1db-966938ff18d6",
                "name": "200",
                "originalRequest": {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "url": {
                    "query": [],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {
                    "mode": "raw",
                    "raw": ""
                  }
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "42"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Sat, 31 Oct 2015 06:38:25 GMT"
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.6.2"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "X-Powered-By",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "X-Powered-By",
                    "value": "Sails <sailsjs.org>"
                  }
                ],
                "body": "{\"authenticated\":true}",
                "cookie": [],
                "responseTime": "377"
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "24d697f8-659f-491b-acce-23b73d443933",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response body has json saying 'authenticated'\", function () {",
                    "    pm.response.to.have.jsonBody('authenticated', true);",
                    "});"
                  ],
                  "_lastExecutionId": "d8a48fe0-3b39-4c69-b98b-704b7005292f"
                }
              }
            ]
          },
          {
            "_": {},
            "id": "384f5582-e681-4e35-9963-3a68742db11d",
            "name": "DigestAuth Success",
            "request": {
              "description": {
                "content": "This endpoint sends a hashed Digest Authorization header to gain access to a valid `200 Ok` response code. In Postman, it uses the stored [global variables](https://www.getpostman.com/docs/environments#gloval-variables?source=echo-collection-app-onboarding), `echo_digest_realm` and `echo_digest_nonce`, to generate the hashed authorisation header.\n\nWithin Postman, for this request to successfully authenticate, running the previous request \"DigestAuth Request\" stores the relevant information within the global variables.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "digest-auth"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "header": [
                {
                  "key": "Authorization",
                  "value": "Digest username=\"postman\", realm=\"Users\", nonce=\"ni1LiL0O37PRRhofWdCLmwFsnEtH1lew\", uri=\"/digest-auth\", response=\"254679099562cf07df9b6f5d8d15db44\", opaque=\"\""
                }
              ],
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": ""
              },
              "auth": {
                "type": "digest",
                "digest": [
                  {
                    "type": "string",
                    "value": "MD5",
                    "key": "algorithm"
                  },
                  {
                    "type": "string",
                    "value": "postman",
                    "key": "username"
                  },
                  {
                    "type": "string",
                    "value": "{{echo_digest_realm}}",
                    "key": "realm"
                  },
                  {
                    "type": "string",
                    "value": "password",
                    "key": "password"
                  },
                  {
                    "type": "string",
                    "value": "{{echo_digest_nonce}}",
                    "key": "nonce"
                  },
                  {
                    "type": "string",
                    "value": "",
                    "key": "nonceCount"
                  },
                  {
                    "type": "string",
                    "value": "",
                    "key": "clientNonce"
                  },
                  {
                    "type": "string",
                    "value": "",
                    "key": "opaque"
                  },
                  {
                    "type": "string",
                    "value": "",
                    "key": "qop"
                  },
                  {
                    "type": "any",
                    "key": "disableRetryRequest"
                  }
                ]
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "javascript",
                  "postman_previewtype": "html"
                },
                "id": "a0ad657e-231a-478d-a4b4-0d8eaa114ea5",
                "name": "200",
                "originalRequest": {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "url": {
                    "query": [],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {
                    "mode": "raw",
                    "raw": ""
                  }
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "42"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Thu, 29 Oct 2015 06:17:51 GMT"
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.6.2"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "X-Powered-By",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "X-Powered-By",
                    "value": "Sails <sailsjs.org>"
                  }
                ],
                "body": "{\"authenticated\":true}",
                "cookie": [],
                "responseTime": "9843"
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "22c50cc6-ed53-4ea0-811c-ae5839b81491",
                  "type": "text/javascript",
                  "exec": [
                    "tests[\"response code is 200\"] = responseCode.code === 200;",
                    "tests[\"body contains authenticated\"] = responseBody.has(\"authenticated\");"
                  ],
                  "_lastExecutionId": "7e05dbee-93b8-4809-9a1a-88c07ea0b505"
                }
              }
            ]
          },
          {
            "_": {},
            "id": "3a9a1674-1574-4a72-914c-e4c137940dac",
            "name": "Hawk Auth",
            "request": {
              "description": {
                "content": "This endpoint is a Hawk Authentication protected endpoint. [Hawk authentication](https://github.com/hueniverse/hawk) is a widely used protocol for protecting API endpoints. One of Hawk's main goals is to enable HTTP authentication for services that do not use TLS (although it can be used in conjunction with TLS as well).\n\nIn order to use this endpoint, select the \"Hawk Auth\" helper inside Postman, and set the following values:\n\nHawk Auth ID: `dh37fgj492je`\n\nHawk Auth Key: `werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn`\n\nAlgorithm: `sha256`\n\nThe rest of the values are optional, and can be left blank. Hitting send should give you a response with a status code of 200 OK.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "auth",
                  "hawk"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "formdata",
                "formdata": [
                  {
                    "key": "access_token",
                    "value": "xyz1",
                    "type": "text"
                  },
                  {
                    "key": "id",
                    "value": "U1",
                    "type": "text"
                  },
                  {
                    "key": "server_secret",
                    "value": "zeppelin",
                    "type": "text"
                  },
                  {
                    "key": "admin",
                    "value": "true",
                    "type": "text"
                  }
                ]
              },
              "auth": {
                "type": "hawk",
                "hawk": [
                  {
                    "type": "string",
                    "value": "dh37fgj492je",
                    "key": "authId"
                  },
                  {
                    "type": "string",
                    "value": "werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn",
                    "key": "authKey"
                  },
                  {
                    "type": "string",
                    "value": "sha256",
                    "key": "algorithm"
                  },
                  {
                    "type": "string",
                    "value": "",
                    "key": "user"
                  },
                  {
                    "type": "any",
                    "key": "saveHelperData"
                  },
                  {
                    "type": "string",
                    "value": "RZKGNz",
                    "key": "nonce"
                  },
                  {
                    "type": "any",
                    "key": "extraData"
                  },
                  {
                    "type": "any",
                    "key": "appId"
                  },
                  {
                    "type": "any",
                    "key": "delegation"
                  },
                  {
                    "type": "string",
                    "value": "1522505600",
                    "key": "timestamp",
                    "system": true
                  }
                ]
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "javascript",
                  "postman_previewtype": "html"
                },
                "id": "b0eb7710-1fdc-4565-ac68-65e1f57d5437",
                "name": "Success",
                "originalRequest": {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "url": {
                    "protocol": "https",
                    "path": [
                      "auth",
                      "hawk"
                    ],
                    "host": [
                      "echo",
                      "getpostman",
                      "com"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "name": "Authorization",
                      "key": "Authorization",
                      "value": "Hawk id=\"dh37fgj492je\", ts=\"1459422734\", nonce=\"XiwiCU\", mac=\"KzMHk67BYCC9zZqRy5hRdWFEFLHX5bNlRWGdmOAWKp0=\""
                    }
                  ],
                  "method": "GET",
                  "body": {
                    "mode": "formdata",
                    "formdata": [
                      {
                        "key": "access_token",
                        "value": "xyz1",
                        "type": "text"
                      },
                      {
                        "key": "id",
                        "value": "U1",
                        "type": "text"
                      },
                      {
                        "key": "server_secret",
                        "value": "zeppelin",
                        "type": "text"
                      },
                      {
                        "key": "admin",
                        "value": "true",
                        "type": "text"
                      }
                    ]
                  }
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Thu, 31 Mar 2016 11:12:16 GMT"
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.6.2"
                  },
                  {
                    "name": "Server-Authorization",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server-Authorization",
                    "value": "Hawk mac=\"vRrUzDdcHu2NaNts/r4zg2xmXMdX8wPiTGTM398BDRg=\", hash=\"qmtflETMybaZiOQ2dLT17yiRunFT5OCIxZRZ0boQaiE=\""
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "X-Powered-By",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "X-Powered-By",
                    "value": "Sails <sailsjs.org>"
                  },
                  {
                    "name": "transfer-encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "transfer-encoding",
                    "value": "chunked"
                  }
                ],
                "body": "{\"status\":\"pass\",\"message\":\"Hawk Authentication successful\"}",
                "cookie": [
                  {
                    "name": "getpostmanlogin",
                    "expires": null,
                    "domain": ".getpostman.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": false,
                    "hostOnly": false,
                    "session": false,
                    "value": "yes"
                  },
                  {
                    "name": "postman.sid",
                    "expires": null,
                    "domain": ".getpostman.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": false,
                    "hostOnly": false,
                    "session": false,
                    "value": "9f887f3b7f14b8c29ac4dc4109381b0b89a76e785c7b34251d6c8025b41b24013d2aa49f40e2deac19cbf0594dd984169455534d91ff98d4d1868d67ac857017629f137926e3a04a616bb83a2fb5ab9e6cbea9579ed5d5c1155d47545d72aad5be99f4abd0a7130805b3807d70cd507171dbe9d950d8e35a853f9ec075f5a767c95df4d57f7d521b66605b3bda3801700e26e651d1129c798b729ee3b91702d43ae64ab226c3f426893753def772c15442a7552dc84a3c773d6099a50b0a6af940b64c8176fedfcecd5fc31ccfc3bbc0124bfdaa0d62e4252d4aafb46a3c10963d12391e1fa97a1c0f19a636f57a3ac8cc35567d1cb6cb53b77f8adde3f6754a765596d7d00bdeb9acb5cc8d115e7c3f50ec3228e34d3e6c7464e9039b01868e03d10e9f87772397602453e9e91205de7b86021fad06eb26e69298e99ff1597a670faeb310f8c092041d544851de84f2bee89a92123da6eea286210524035c85361e2af42166a6"
                  },
                  {
                    "name": "sails.sid",
                    "expires": null,
                    "domain": "echo.getpostman.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": true,
                    "hostOnly": true,
                    "session": true,
                    "value": "s%3AryJV7v-PE4PuTjBK6nH5XOynQ4atuATV.n17KcaLhVmV8TBHNLwdwXgGR7lmqs3i478WPlTbRgZ4"
                  }
                ],
                "responseTime": "1855"
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "b556a26e-ac34-4995-a65f-ca20a7db850e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response body has json saying passed 'status'\", function () {",
                    "    pm.response.to.have.jsonBody('status', 'pass');",
                    "});"
                  ],
                  "_lastExecutionId": "1729e7ee-9080-4e4d-a208-8d1d23df9231"
                }
              }
            ]
          },
          {
            "_": {},
            "id": "8baf8505-3767-4ee3-94a2-cee70cb981bc",
            "name": "OAuth1.0 (verify signature)",
            "request": {
              "description": {
                "content": "OAuth1.0a is a specification that defines a protocol that can be used by one\nservice to access \"protected\" resources (endpoints) on another service. A\nmajor part of OAuth1.0 is HTTP Request Signing. This endpoint allows you to \ncheck whether the request calculation works properly in the client. \n\nThe endpoint supports the HTTP ``Authorization`` header. In case the signature\nverification fails, the endpoint provides the four debug values,\n\n* ``base_uri``\n* ``normalized_param_string``\n* ``base_string``\n* ``signing_key``\n\nFor more details about these parameters, check the [OAuth1.0a Specification](http://oauth.net/core/1.0a/)\n\nIn order to use this endpoint, you can set the following values:\n\n> Consumer Key: ``RKCGzna7bv9YD57c``\n>\n> Consumer Secret: ``D+EdQ-gs$-%@2Nu7``\n\nIf you are using Postman, also check the \"Add params to header\" and \n\"Auto add parameters\" boxes.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "oauth1"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "formdata",
                "formdata": [
                  {
                    "key": "code",
                    "value": "xWnkliVQJURqB2x1",
                    "type": "text"
                  },
                  {
                    "key": "grant_type",
                    "value": "authorization_code",
                    "type": "text"
                  },
                  {
                    "key": "redirect_uri",
                    "value": "https://www.getpostman.com/oauth2/callback",
                    "type": "text"
                  },
                  {
                    "key": "client_id",
                    "value": "abc123",
                    "type": "text"
                  },
                  {
                    "key": "client_secret",
                    "value": "ssh-secret",
                    "type": "text"
                  }
                ]
              },
              "auth": {
                "type": "oauth1",
                "oauth1": [
                  {
                    "type": "string",
                    "value": "RKCGzna7bv9YD57c",
                    "key": "consumerKey"
                  },
                  {
                    "type": "string",
                    "value": "D+EdQ-gs$-%@2Nu7",
                    "key": "consumerSecret"
                  },
                  {
                    "type": "string",
                    "value": "",
                    "key": "token"
                  },
                  {
                    "type": "string",
                    "value": "",
                    "key": "tokenSecret"
                  },
                  {
                    "type": "string",
                    "value": "HMAC-SHA1",
                    "key": "signatureMethod"
                  },
                  {
                    "type": "string",
                    "value": "",
                    "key": "timestamp"
                  },
                  {
                    "type": "string",
                    "value": "",
                    "key": "nonce"
                  },
                  {
                    "type": "string",
                    "value": "",
                    "key": "version"
                  },
                  {
                    "type": "string",
                    "value": "",
                    "key": "realm"
                  },
                  {
                    "type": "boolean",
                    "value": true,
                    "key": "addParamsToHeader"
                  },
                  {
                    "type": "any",
                    "key": "autoAddParam"
                  },
                  {
                    "type": "boolean",
                    "value": false,
                    "key": "addEmptyParamsToSign"
                  }
                ]
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "javascript",
                  "postman_previewtype": "html"
                },
                "id": "b2b6f08a-beb7-4f7d-978b-2ca809008591",
                "name": "200",
                "originalRequest": {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "url": {
                    "protocol": "https",
                    "path": [
                      "oauth1"
                    ],
                    "host": [
                      "echo",
                      "getpostman",
                      "com"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "name": "Authorization",
                      "key": "Authorization",
                      "value": "OAuth oauth_consumer_key=\"RKCGzna7bv9YD57c\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1472121261\",oauth_nonce=\"ki0RQW\",oauth_version=\"1.0\",oauth_signature=\"s0rK92Myxx7ceUBVzlMaxiiXU00%3D\""
                    }
                  ],
                  "method": "GET",
                  "body": {
                    "mode": "formdata",
                    "formdata": [
                      {
                        "key": "code",
                        "value": "xWnkliVQJURqB2x1",
                        "type": "text"
                      },
                      {
                        "key": "grant_type",
                        "value": "authorization_code",
                        "type": "text"
                      },
                      {
                        "key": "redirect_uri",
                        "value": "https://www.getpostman.com/oauth2/callback",
                        "type": "text"
                      },
                      {
                        "key": "client_id",
                        "value": "abc123",
                        "type": "text"
                      },
                      {
                        "key": "client_secret",
                        "value": "ssh-secret",
                        "type": "text"
                      }
                    ]
                  }
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Expose-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Expose-Headers",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "95"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Thu, 25 Aug 2016 10:34:23 GMT"
                  },
                  {
                    "name": "ETag",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "ETag",
                    "value": "W/\"4e-Cq3UhvpVSyl6R6204lPVIA\""
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.8.1"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  }
                ],
                "body": "{\"status\":\"pass\",\"message\":\"OAuth-1.0a signature verification was successful\"}",
                "cookie": [],
                "responseTime": "2057"
              },
              {
                "_": {
                  "postman_previewlanguage": "javascript",
                  "postman_previewtype": "html"
                },
                "id": "57815c2b-4d00-4a7f-aff0-7037a162774a",
                "name": "401",
                "originalRequest": {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "url": {
                    "protocol": "https",
                    "path": [
                      "oauth1"
                    ],
                    "host": [
                      "echo",
                      "getpostman",
                      "com"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "name": "Authorization",
                      "key": "Authorization",
                      "value": "OAuth oauth_consumer_key=\"RKCGzna7bv9YD57c_wrong\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1472121295\",oauth_nonce=\"8LTsU2\",oauth_version=\"1.0\",oauth_signature=\"tSUexpY%2B7EhSY7cFXiFN5EMx2zw%3D\""
                    }
                  ],
                  "method": "GET",
                  "body": {
                    "mode": "formdata",
                    "formdata": [
                      {
                        "key": "code",
                        "value": "xWnkliVQJURqB2x1",
                        "type": "text"
                      },
                      {
                        "key": "grant_type",
                        "value": "authorization_code",
                        "type": "text"
                      },
                      {
                        "key": "redirect_uri",
                        "value": "https://www.getpostman.com/oauth2/callback",
                        "type": "text"
                      },
                      {
                        "key": "client_id",
                        "value": "abc123",
                        "type": "text"
                      },
                      {
                        "key": "client_secret",
                        "value": "ssh-secret",
                        "type": "text"
                      }
                    ]
                  }
                },
                "status": "Unauthorized",
                "code": 401,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Expose-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Expose-Headers",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "536"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Thu, 25 Aug 2016 10:34:55 GMT"
                  },
                  {
                    "name": "ETag",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "ETag",
                    "value": "W/\"218-SGnurnTsu5qV5cCYWxsJlg\""
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.8.1"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  }
                ],
                "body": "{\"status\":\"fail\",\"message\":\"HMAC-SHA1 verification failed\",\"base_uri\":\"https://echo.getpostman.com/oauth1\",\"normalized_param_string\":\"oauth_consumer_key=RKCGzna7bv9YD57c_wrong&oauth_nonce=8LTsU2&oauth_signature_method=HMAC-SHA1&oauth_timestamp=1472121295&oauth_version=1.0\",\"base_string\":\"GET&https%3A%2F%2Fecho.getpostman.com%2Foauth1&oauth_consumer_key%3DRKCGzna7bv9YD57c_wrong%26oauth_nonce%3D8LTsU2%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1472121295%26oauth_version%3D1.0\",\"signing_key\":\"D%2BEdQ-gs%24-%25%402Nu7&\"}",
                "cookie": [],
                "responseTime": "322"
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "9c51ca8f-8d56-480e-a3aa-7de1f06f9f82",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response body has json saying passed 'status'\", function () {",
                    "    pm.response.to.have.jsonBody('status', 'pass');",
                    "});"
                  ],
                  "_lastExecutionId": "69cd2ab1-d920-4b04-8d86-a455d11cafd3"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "_": {},
        "id": "93c0a006-5398-48bc-867b-5e0ed60e823f",
        "name": "Cookie Manipulation",
        "description": {
          "content": "The cookie related endpoints allow one to get, set and delete simple cookies.\n\nCookies are small snippets of information that is stored in the browser and sent back to the server with every subsequent requests in order to store useful information between requests.\nIf you want to know more about cookies, read the [HTTP Cookie](https://en.wikipedia.org/wiki/HTTP_cookie) article on wikipedia.",
          "type": "text/plain"
        },
        "item": [
          {
            "_": {},
            "id": "ff9784cf-b2d2-4c14-b656-61d7eb800c71",
            "name": "Set Cookies",
            "request": {
              "description": {
                "content": "The cookie setter endpoint accepts a list of cookies and their values as part of URL parameters of a `GET` request. These cookies are saved and can be subsequently retrieved or deleted. The response of this request returns a JSON with all cookies listed.\n\nTo set your own set of cookies, simply replace the URL parameters \"foo1=bar1&foo2=bar2\" with your own set of key-value pairs.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "cookies",
                  "set"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "foo1",
                    "value": "bar1"
                  },
                  {
                    "key": "foo2",
                    "value": "bar2"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": ""
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "javascript",
                  "postman_previewtype": "html"
                },
                "id": "a20b1e05-2ea7-4cf7-aee5-9ac552a4b966",
                "name": "Cookies",
                "originalRequest": {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "url": {
                    "query": [],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {
                    "mode": "raw",
                    "raw": ""
                  }
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "51"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Thu, 29 Oct 2015 06:15:28 GMT"
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.6.2"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "X-Powered-By",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "X-Powered-By",
                    "value": "Sails <sailsjs.org>"
                  }
                ],
                "body": "{\"cookies\":{\"foo1\":\"bar\",\"foo2\":\"bar\"}}",
                "cookie": [],
                "responseTime": "3063"
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "c6b37a9d-4890-4e91-8082-99974dca633b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('response should be 200 or 302', function () {",
                    "    pm.expect(pm.response.code).to.be.oneOf([200, 302]);",
                    "});",
                    "",
                    "pm.test('the \"foo1\" cookie has correct value', function () {",
                    "    pm.expect(pm.cookies.toObject()).to.have.property('foo1', 'bar1');",
                    "});",
                    "",
                    "pm.test('the \"foo2\" cookie has correct value', function () {",
                    "    pm.expect(pm.cookies.toObject()).to.have.property('foo2', 'bar2');",
                    "});",
                    "",
                    "// response code could be either a 200 or a redirection based on the settings of ",
                    "// the http client. hence we need to handle both cases",
                    "pm.test('response body should be valid', function () {",
                    "    if (pm.response.code === 200) {",
                    "        pm.response.to.have.jsonBody('cookies.foo1', 'bar1')",
                    "            .and.have.jsonBody('cookies.foo2', 'bar2');",
                    "    }",
                    "    else {",
                    "        pm.response.to.have.body('Found. Redirecting to /cookies');",
                    "    }",
                    "});"
                  ],
                  "_lastExecutionId": "b3779d4e-81fe-4fe5-8b75-3e81b1c87325"
                }
              }
            ]
          },
          {
            "_": {},
            "id": "4ac3a32f-490e-43e8-bd32-83d41438fbf0",
            "name": "Get Cookies",
            "request": {
              "description": {
                "content": "Use this endpoint to get a list of all cookies that are stored with respect to this domain. Whatever key-value pairs that has been previously set by calling the \"Set Cookies\" endpoint, will be returned as response JSON.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "cookies"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": ""
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "javascript",
                  "postman_previewtype": "html"
                },
                "id": "96de4ea9-b6f4-4e83-bc68-1e22d382fcfa",
                "name": "Cookies",
                "originalRequest": {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "url": {
                    "query": [],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {
                    "mode": "raw",
                    "raw": ""
                  }
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "46"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Thu, 29 Oct 2015 06:16:29 GMT"
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.6.2"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "X-Powered-By",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "X-Powered-By",
                    "value": "Sails <sailsjs.org>"
                  }
                ],
                "body": "{\"cookies\":{\"foo2\":\"bar\"}}",
                "cookie": [],
                "responseTime": "462"
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "8d0f3eb7-14c3-48c4-b721-0ca655d394c1",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test('the \"foo1\" cookie has correct value', function () {",
                    "    pm.expect(pm.cookies.toObject()).to.have.property('foo1', 'bar1');",
                    "});",
                    "",
                    "pm.test('the \"foo2\" cookie has correct value', function () {",
                    "    pm.expect(pm.cookies.toObject()).to.have.property('foo2', 'bar2');",
                    "});",
                    "",
                    "pm.test('response body should be valid', function () {",
                    "    pm.response.to.have.jsonBody('cookies.foo1', 'bar1');",
                    "    pm.response.to.have.jsonBody('cookies.foo2', 'bar2');",
                    "});"
                  ],
                  "_lastExecutionId": "8d2e115b-971e-4f6f-8403-3c0ca6a97f34"
                }
              }
            ]
          },
          {
            "_": {},
            "id": "5e399d49-f6e6-422a-b63a-e35499f93f62",
            "name": "Delete Cookies",
            "request": {
              "description": {
                "content": "One or more cookies that has been set for this domain can be deleted by providing the cookie names as part of the URL parameter. The response of this request is a JSON containing the list of currently set cookies.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "cookies",
                  "delete"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "foo1",
                    "value": ""
                  },
                  {
                    "key": "foo2",
                    "value": ""
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": ""
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "javascript",
                  "postman_previewtype": "html"
                },
                "id": "c6070d15-1428-4057-9262-2de0d779eb5e",
                "name": "Cookies Response",
                "originalRequest": {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "url": {
                    "query": [],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {
                    "mode": "raw",
                    "raw": ""
                  }
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "46"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Thu, 29 Oct 2015 06:16:00 GMT"
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.6.2"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "X-Powered-By",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "X-Powered-By",
                    "value": "Sails <sailsjs.org>"
                  }
                ],
                "body": "{\"cookies\":{\"foo2\":\"bar\"}}",
                "cookie": [],
                "responseTime": "1417"
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "ebcbc96b-619b-47ef-a2f3-a4b26781fcba",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test('response should be 200 or 302', function () {",
                    "    pm.expect(pm.response.code).to.be.oneOf([200, 302]);",
                    "});",
                    "",
                    "pm.test('the \"foo1\" cookie should not be present', function () {",
                    "    pm.expect(pm.cookies.toObject()).to.not.have.property('foo1');",
                    "});",
                    "",
                    "pm.test('the \"foo2\" cookie should not be present', function () {",
                    "    pm.expect(pm.cookies.toObject()).to.not.have.property('foo2');",
                    "});",
                    "",
                    "// response code could be either a 200 or a redirection based on the settings of ",
                    "// the http client. hence we need to handle both cases",
                    "pm.test('response body should be valid', function () {",
                    "    if (pm.response.code === 200) {",
                    "        pm.response.to.not.have.jsonBody('cookies.foo1');",
                    "        pm.response.to.not.have.jsonBody('cookies.foo2');",
                    "    }",
                    "    else {",
                    "        pm.response.to.have.body('Found. Redirecting to /cookies');",
                    "    }",
                    "});"
                  ],
                  "_lastExecutionId": "94143fe6-1837-4ce4-b240-e787d227b097"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "_": {},
        "id": "0a165663-ada3-4b77-b5a9-0ebdfdd2795e",
        "name": "Utilities",
        "description": {
          "content": "",
          "type": "text/plain"
        },
        "item": [
          {
            "_": {},
            "id": "aa90e720-eaff-4bfa-be84-c1d547356972",
            "name": "Response Status Code",
            "request": {
              "description": {
                "content": "This endpoint allows one to instruct the server which status code to respond with.\n\nEvery response is accompanied by a status code. The status code provides a summary of the nature of response sent by the server. For example, a status code of `200` means everything is okay with the response and a code of `404` implies that the requested URL does not exist on server. \nA list of all valid HTTP status code can be found at the [List of Status Codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) wikipedia article. When using Postman, the response status code is described for easy reference.\n\nNote that if an invalid status code is requested to be sent, the server returns a status code of `400 Bad Request`.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "status",
                  "200"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": ""
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "javascript",
                  "postman_previewtype": "html"
                },
                "id": "8b48d69c-e3fc-4252-83d6-e5ffc95540dc",
                "name": "200",
                "originalRequest": {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "url": {
                    "protocol": "https",
                    "path": [
                      "status",
                      "200"
                    ],
                    "host": [
                      "echo",
                      "getpostman",
                      "com"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {
                    "mode": "raw",
                    "raw": ""
                  }
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "14"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Thu, 31 Mar 2016 11:58:47 GMT"
                  },
                  {
                    "name": "ETag",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "ETag",
                    "value": "W/\"e-1056260003\""
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.6.2"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "X-Powered-By",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "X-Powered-By",
                    "value": "Sails <sailsjs.org>"
                  }
                ],
                "body": "{\"status\":200}",
                "cookie": [
                  {
                    "name": "getpostmanlogin",
                    "expires": null,
                    "domain": ".getpostman.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": false,
                    "hostOnly": false,
                    "session": false,
                    "value": "yes"
                  },
                  {
                    "name": "postman.sid",
                    "expires": null,
                    "domain": ".getpostman.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": false,
                    "hostOnly": false,
                    "session": false,
                    "value": "df0c0256028d7ec4d641f766104a9571a8e249685bbc667d7cee030bbf44d3209495c70c03248e31e678a93812591d5e12187a8e99bf6bc5e80c40903f6ff6226938f24e413c0ffa613a7372064ec44a8594e8d3ede6945e34394f369573feeebc4a73a3e24b8c9ac18a53704addb5fd3f71f1ede488ff551feb059e9c1fb208164814e45e0312c4df8ea6e83c26702f42ae634c6afbe82d57c857bbf5598b5527961c1c28688dc2580070a4389f0cf4ec0a179b5b9c11b2ecbaa5460d374065bf5c7a3add9505df0fa89acb9f227f05ed2d4c6b58c39d6d728bd49f6f323ae67d4a75882aa7682f5d6fc5b981ba411d94aa93970bfaefa1953a73e440d50d012b5f288975c888e2345ee7777e746fb5aed3a7b2dbc087c6456621aa78c24a3c17c5f96cf59844933249a352f631e2008cffac6faf06d0e253dcc01cf0067bf56c1fbc5ed61fec1861b60c5accf35ffc2e56154a113004fa1db9d7171c3af8fc063918554092f5"
                  },
                  {
                    "name": "_ga",
                    "expires": null,
                    "domain": ".echo.getpostman.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": false,
                    "hostOnly": false,
                    "session": false,
                    "value": "GA1.3.1703443399.1459422978"
                  },
                  {
                    "name": "sails.sid",
                    "expires": null,
                    "domain": "echo.getpostman.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": true,
                    "hostOnly": true,
                    "session": true,
                    "value": "s%3AvuHU0EKeDbyNjVrEc7U30dMPzVu8CRaD.GOV1H9olcVzXqrwqP%2BC%2B6MVj2UczXivcN00jgPoDYfs"
                  }
                ],
                "responseTime": "251"
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "4841543d-f0c1-4104-b7a3-84c3d16f1423",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response has valid json body\", function () {",
                    "    pm.response.to.have.jsonBody('status');",
                    "});",
                    "",
                    "// additional sanity tests",
                    "pm.test(\"status in response body must match the one in request\", function () {",
                    "    pm.response.to.have.jsonBody('status', Number(_.get(pm.request, 'url.path[1]')));",
                    "});"
                  ],
                  "_lastExecutionId": "ad313147-393a-4238-a267-6c4bbc9106b2"
                }
              }
            ]
          },
          {
            "_": {},
            "id": "e5d21805-d14b-4a19-b240-f314f876b367",
            "name": "Streamed Response",
            "request": {
              "description": {
                "content": "This endpoint allows one to recieve streaming http response using [chunked transfer encoding](https://en.wikipedia.org/wiki/Chunked_transfer_encoding) of a configurable length.\n\nA streaming response does not wait for the entire response to be generated on server before flushing it out. This implies that for a fairly large response, parts of it can be streamed to the requestee as and when it is generated on server. The client can then take actions of processing this partially received data.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "stream",
                  "5"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": ""
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "d5f1e591-fc7d-4d64-a9b8-a77d03dfb27a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response has chunked transfer encoding header\", function () {",
                    "    pm.response.to.have.header('transfer-encoding', 'chunked');",
                    "});"
                  ],
                  "_lastExecutionId": "fab81f0b-839a-46e6-8f79-c8e72581b937"
                }
              }
            ]
          },
          {
            "_": {},
            "id": "c2083a0a-4556-4837-aa59-0edc636d0312",
            "name": "Delay Response",
            "request": {
              "description": {
                "content": "Using this endpoint one can configure how long it takes for the server to come back with a response. Appending a number to the URL defines the time (in seconds) the server will wait before responding.\n\nNote that a maximum delay of 10 seconds is accepted by the server.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "delay",
                  "2"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": ""
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json",
                  "postman_previewtype": "html"
                },
                "id": "3672e77f-014c-48ed-bd66-561c5758d0c0",
                "name": "success-response",
                "originalRequest": {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "url": {
                    "protocol": "https",
                    "path": [
                      "delay",
                      "3"
                    ],
                    "host": [
                      "echo",
                      "getpostman",
                      "com"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {
                    "mode": "raw",
                    "raw": ""
                  }
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Expose-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Expose-Headers",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "13"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Mon, 02 Jan 2017 09:19:03 GMT"
                  },
                  {
                    "name": "ETag",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "ETag",
                    "value": "W/\"d-t/L/D5c0SDl+MoXtKdSVOg\""
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.10.1"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  }
                ],
                "body": "{\"delay\":\"3\"}",
                "cookie": [
                  {
                    "name": "sails.sid",
                    "expires": null,
                    "domain": "echo.getpostman.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": true,
                    "hostOnly": false,
                    "session": false,
                    "value": "s%3AYjUiFBtGiJVL2a-qzZQZ1DFlAMhgXN9O.WaAjRUV0OteZxwmhbNibuB7VKse068JJIh6PwLQUKmQ"
                  }
                ],
                "responseTime": "4769"
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "1be4b50f-3c69-4fe8-a569-c001dbcc3bb0",
                  "type": "text/javascript",
                  "exec": [
                    "var _ = require('lodash');",
                    "",
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response has valid json body\", function () {",
                    "    pm.response.to.have.jsonBody('delay');",
                    "});",
                    "",
                    "// additional sanity tests",
                    "pm.test(\"request must have a valid delay\", function () {",
                    "    pm.expect(Number(_.get(pm.request, 'url.path[1]'))).to.be.above(0).and.below(10);",
                    "});",
                    "pm.test(\"response should take more time than the delay specified\", function () {",
                    "    pm.expect(pm.response.responseTime).to.be.above(Number(_.get(pm.request, 'url.path[1]')));",
                    "});"
                  ],
                  "_lastExecutionId": "7d08abee-df90-4f84-9a2a-e11ea8e9c3b4"
                }
              }
            ]
          },
          {
            "_": {},
            "id": "29d29021-46cb-4798-a8ab-38814993f9b7",
            "name": "Get UTF8 Encoded Response",
            "request": {
              "description": {
                "content": "If a response of an endpoint requires to send data beyond the basic English / ASCII character set, the `charset` parameter in the `Content-Type` response header defines the character encoding policy.\n\nThis endpoint returns an `UTF8` character encoded response body with text in various languages such as Greek, Latin, East Asian, etc. Postman can interpret the character encoding and use appropriate methods to display the character set in responses.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "encoding",
                  "utf8"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": ""
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "e94a5265-9413-43dd-b583-14bc50c77aaa",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response has charset in content-type header\", function () {",
                    "    pm.response.to.have.header('content-type', 'text/html; charset=utf-8');",
                    "});",
                    "",
                    "pm.test(\"response has chunked transfer encoding header\", function () {",
                    "    pm.response.to.have.header('transfer-encoding', 'chunked');",
                    "});"
                  ],
                  "_lastExecutionId": "1a0cb35e-73d8-4445-a99b-aa3ced321138"
                }
              }
            ]
          },
          {
            "_": {},
            "id": "e3d3aae6-6e77-4781-9a3f-d3d87f7ecbd0",
            "name": "GZip Compressed Response",
            "request": {
              "description": {
                "content": "This endpoint returns the response using [gzip compression algoritm](https://en.wikipedia.org/wiki/Gzip).\nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `gzip` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "gzip"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": ""
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "de2a52b5-db42-42b2-ad93-0dc0e1c5a6b5",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response has valid json body\", function () {",
                    "    pm.response.to.have.jsonBody('gzipped', true);",
                    "});",
                    "",
                    "pm.test('response headers should indicate valid content encoding', function  () {",
                    "    pm.response.to.have.header('content-encoding', 'gzip')",
                    "        .and.have.header('content-type', 'application/json');",
                    "});",
                    "",
                    "pm.test('requesting http client should accept compressed response', function () {",
                    "    pm.expect(pm.response.json()).to.have.nested.property('headers.accept-encoding')",
                    "        .and.to.match(/.*gzip.*/);",
                    "});"
                  ],
                  "_lastExecutionId": "b61ed17a-2536-4a14-ae83-28b935232556"
                }
              }
            ]
          },
          {
            "_": {},
            "id": "d1358fb9-3dd7-47e1-8568-ea8a39f7bd4f",
            "name": "Deflate Compressed Response",
            "request": {
              "description": {
                "content": "This endpoint returns the response using [deflate compression algoritm](https://en.wikipedia.org/wiki/DEFLATE). \nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `deflate` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "deflate"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": ""
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "7cbafd17-5af9-4f92-a63a-f8f47a55a538",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response has valid json body\", function () {",
                    "    pm.response.to.have.jsonBody('deflated', true);",
                    "});",
                    "",
                    "pm.test('response headers should indicate valid content encoding', function  () {",
                    "    pm.response.to.have.header('content-encoding', 'deflate')",
                    "        .and.have.header('content-type', 'application/json');",
                    "});",
                    "",
                    "pm.test('requesting http client should accept compressed response', function () {",
                    "    pm.expect(pm.response.json()).to.have.nested.property('headers.accept-encoding')",
                    "        .and.to.match(/.*deflate.*/);",
                    "});"
                  ],
                  "_lastExecutionId": "f427ec03-6166-49eb-b72d-293a92cdf473"
                }
              }
            ]
          },
          {
            "_": {},
            "id": "ad44d10d-15b5-4f61-b5ab-129295580178",
            "name": "IP address in JSON format",
            "request": {
              "description": {
                "content": "A simple `GET` request to return the IP address of the source request in the following `JSON` format:\n\n```json\n{\n  ip: \"request-ip-address\"\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "ip"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": ""
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "632f05ef-b98b-4b4f-be9f-84bd87cb8da2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response has valid json body\", function () {",
                    "    pm.response.to.have.jsonBody('ip');",
                    "});",
                    "",
                    "pm.test(\"response must return a valid ip address\", function () {",
                    "    pm.expect(pm.response.json().ip).to",
                    "        // a really gnarly regular expression to ensure that ip address is in correct format",
                    "        .match(/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/);",
                    "});"
                  ],
                  "_lastExecutionId": "dd8936cc-ca77-423c-9b89-2890a7f17abd"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "_": {},
        "id": "f1636eba-ab03-4ea9-8875-b0ed38e0d8c3",
        "name": "Utilities / Date and Time",
        "description": {
          "content": "A set of `/time/*` mounted requests to perform date-time manipulations, among other operations.\n",
          "type": "text/plain"
        },
        "item": [
          {
            "_": {},
            "id": "2e4ebc06-1325-4f35-8488-61c7c7f41690",
            "name": "Current UTC time",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/now` to return the current timestamp as a UTC string.\n\n```\nFri, 04 Nov 2016 09:00:46 GMT\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "now"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": ""
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "html",
                  "postman_previewtype": "html"
                },
                "id": "e58e73dc-52d2-4f0a-b1c6-8b644c90113d",
                "name": "time as text",
                "originalRequest": {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "url": {
                    "protocol": "https",
                    "path": [
                      "time",
                      "now"
                    ],
                    "host": [
                      "postman-echo",
                      "com"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {
                    "mode": "raw",
                    "raw": ""
                  }
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Expose-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Expose-Headers",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "49"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "text/html; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Wed, 11 Jan 2017 10:27:12 GMT"
                  },
                  {
                    "name": "ETag",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "ETag",
                    "value": "W/\"1d-2jJhkzratfVX9VZ0+raHbw\""
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.10.1"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "set-cookie",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "set-cookie",
                    "value": "sails.sid=s%3A2lT3TO7qS1tadeSAp4axl-NcXG9CV6Rf.HGqLY%2FlKEKY4fgCLePaAZs3tCHp%2Bglf7ZOJYlonGeig; Path=/; HttpOnly"
                  }
                ],
                "body": "Wed, 11 Jan 2017 10:27:12 GMT",
                "cookie": [
                  {
                    "name": "sails.sid",
                    "expires": null,
                    "domain": "postman-echo.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": true,
                    "hostOnly": false,
                    "session": false,
                    "value": "s%3A2lT3TO7qS1tadeSAp4axl-NcXG9CV6Rf.HGqLY%2FlKEKY4fgCLePaAZs3tCHp%2Bglf7ZOJYlonGeig"
                  }
                ],
                "responseTime": "749"
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "05154cf3-4a39-4bb7-87a6-6c4c7ec58677",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response time matches server response 'date' header\", function () {",
                    "    pm.expect(pm.response.text()).to.eql(pm.response.headers.get('date'))",
                    "});"
                  ],
                  "_lastExecutionId": "6f8731e0-df4e-4b24-9257-910804c98c83"
                }
              }
            ]
          },
          {
            "_": {},
            "id": "d1a431dd-9cc1-4715-9fd9-4d11b17d6267",
            "name": "Timestamp validity",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/valid` to determine the validity of the timestamp, (current by default).\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a valid key to indicate the result. The response code is `200`.\n\n```\n{\n  valid: true/false\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "valid"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": ""
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json",
                  "postman_previewtype": "html"
                },
                "id": "35ad49c5-fedf-4036-89ce-746b98ae6899",
                "name": "Valid Timestamp",
                "originalRequest": {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "url": {
                    "protocol": "https",
                    "path": [
                      "time",
                      "valid"
                    ],
                    "host": [
                      "postman-echo",
                      "com"
                    ],
                    "query": [
                      {
                        "key": "timestamp",
                        "value": "2016-10-10"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {
                    "mode": "raw",
                    "raw": ""
                  }
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Expose-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Expose-Headers",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "14"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Wed, 11 Jan 2017 10:27:33 GMT"
                  },
                  {
                    "name": "ETag",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "ETag",
                    "value": "W/\"e-OYN7L87J1Ba9oy5mJE2kcA\""
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.10.1"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "set-cookie",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "set-cookie",
                    "value": "sails.sid=s%3AdDGZPe1CZw4mAxGVCHr6RfCADCAwquXa.F5MEm5LJad30JHrSwGGoyWLn2OAAGdvUM7kDtzNfdFI; Path=/; HttpOnly"
                  }
                ],
                "body": "{\"valid\":true}",
                "cookie": [
                  {
                    "name": "sails.sid",
                    "expires": null,
                    "domain": "postman-echo.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": true,
                    "hostOnly": false,
                    "session": false,
                    "value": "s%3AdDGZPe1CZw4mAxGVCHr6RfCADCAwquXa.F5MEm5LJad30JHrSwGGoyWLn2OAAGdvUM7kDtzNfdFI"
                  }
                ],
                "responseTime": "493"
              },
              {
                "_": {
                  "postman_previewlanguage": "json",
                  "postman_previewtype": "html"
                },
                "id": "dd98ab03-0de1-407a-8c19-f794f109b7f2",
                "name": "Invalid Timestamp",
                "originalRequest": {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "url": {
                    "protocol": "https",
                    "path": [
                      "time",
                      "valid"
                    ],
                    "host": [
                      "postman-echo",
                      "com"
                    ],
                    "query": [
                      {
                        "key": "timestamp",
                        "value": "2016-10-10"
                      }
                    ],
                    "variable": []
                  },
                  "method": "GET",
                  "body": {
                    "mode": "raw",
                    "raw": ""
                  }
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Expose-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Expose-Headers",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Length",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Length",
                    "value": "15"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Wed, 11 Jan 2017 10:27:53 GMT"
                  },
                  {
                    "name": "ETag",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "ETag",
                    "value": "W/\"f-/i9mO/upK91ZtL0BkKFGtw\""
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.10.1"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "Accept-Encoding"
                  },
                  {
                    "name": "set-cookie",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "set-cookie",
                    "value": "sails.sid=s%3ATNJaNxi2QCv4RPBb64sIZxQGN1h6IP3g.9sQVAijlsLsh0r7LgffxXa9k2we6UumPEVv%2Bsk4woLI; Path=/; HttpOnly"
                  }
                ],
                "body": "{\"valid\":false}",
                "cookie": [
                  {
                    "name": "sails.sid",
                    "expires": null,
                    "domain": "postman-echo.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": true,
                    "hostOnly": false,
                    "session": false,
                    "value": "s%3ATNJaNxi2QCv4RPBb64sIZxQGN1h6IP3g.9sQVAijlsLsh0r7LgffxXa9k2we6UumPEVv%2Bsk4woLI"
                  }
                ],
                "responseTime": "264"
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "ec6a2755-6d18-4c7d-8920-6f8e36aa9bd6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should say whether request query time is valid\", function () {",
                    "    pm.response.to.have.jsonBody('valid', true);",
                    "});"
                  ],
                  "_lastExecutionId": "5401b78e-0024-4b44-b870-6f91cafcfebe"
                }
              }
            ]
          },
          {
            "_": {},
            "id": "4173b670-84c4-4f00-8067-8ef4d28b6e1a",
            "name": "Format timestamp",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/format` to convert the timestamp to any desired valid format.\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `format` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  format: \"formatted-timestamp\"\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "format"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  },
                  {
                    "key": "format",
                    "value": "mm"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": ""
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "79b21dc8-f122-4991-8802-8d169df86616",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should say whether request query time is valid\", function () {",
                    "    pm.response.to.have.jsonBody('format', '20');",
                    "});"
                  ],
                  "_lastExecutionId": "2f641dd1-e942-4bcf-adc4-3d139ae07a6a"
                }
              }
            ]
          },
          {
            "_": {},
            "id": "60657c72-8eab-4441-9e18-779d8776598f",
            "name": "Extract timestamp unit",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/unit` to extract the specified timestamp unit (as provided in the `unit` query parameter). The default unit returned is the `year`.\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `unit` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  unit: \"extracted-timestamp-unit\"\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "unit"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  },
                  {
                    "key": "unit",
                    "value": "day"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": ""
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "da4a3a2d-ca27-41af-845a-a7a1c801c73f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should say whether request query unit is valid\", function () {",
                    "    pm.response.to.have.jsonBody('unit', 1);",
                    "});"
                  ],
                  "_lastExecutionId": "374285cf-f61b-4e97-8d27-295c596b3624"
                }
              }
            ]
          },
          {
            "_": {},
            "id": "c3275b4d-060c-4861-965b-24b3cced477a",
            "name": "Time addition",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/add` to add units of time to the specified / current timestamp (as provided in the `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds` query parameters).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `sum` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  sum: \"sum of (provided / current) and provided timestamps\"\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "add"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  },
                  {
                    "key": "years",
                    "value": "100"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": ""
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "f9dbdc5d-fd4a-499e-8a6e-f267b86037b7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should return the added years\", function () {",
                    "    pm.response.to.have.jsonBody('sum', 'Sat Oct 10 2116 00:00:00 GMT+0000');",
                    "});"
                  ],
                  "_lastExecutionId": "5f283370-f6e7-41b5-a29e-8fc82cff541c"
                }
              }
            ]
          },
          {
            "_": {},
            "id": "676cd5d9-9c00-4dd3-984a-aef190f41153",
            "name": "Time subtraction",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/subtract` to subtract units of time from the specified / current timestamp (as provided in the `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds` query parameters).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `difference` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  difference: \"difference between (provided / current) and provided timestamps\"\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "subtract"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  },
                  {
                    "key": "years",
                    "value": "50"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": ""
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "b4221f15-c784-4850-8a23-3d25aa07bc54",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should return the subtracted years\", function () {",
                    "    pm.response.to.have.jsonBody('difference', 'Mon Oct 10 1966 00:00:00 GMT+0000');",
                    "});"
                  ],
                  "_lastExecutionId": "10728d7d-3584-4600-a50e-5467a164893b"
                }
              }
            ]
          },
          {
            "_": {},
            "id": "214704a6-f6b5-4fa9-ad22-5a70ce8a2e8e",
            "name": "Start of time",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/start` to return a relative timstamp in the past from the specified / current timestamp (as provided in the `unit` query parameter).\n\nFor instance, if the `unit` has been specified as `month`, the returned timestamp would indicate the beginning of the current month. Similar results are returned for other units of time, like: `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds`\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `start` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  start: \"A timestamp from the past, depending on the `unit` specified\"\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "start"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  },
                  {
                    "key": "unit",
                    "value": "month"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": ""
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "413eeac1-7795-478e-96dd-734dc6422564",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should return the beginning of month\", function () {",
                    "    pm.response.to.have.jsonBody('start', 'Sat Oct 01 2016 00:00:00 GMT+0000');",
                    "});"
                  ],
                  "_lastExecutionId": "4093eca8-e85a-4f7f-93c0-e984bab52ee2"
                }
              }
            ]
          },
          {
            "_": {},
            "id": "022981ca-c06f-4c3e-9e74-b21a0c5fce40",
            "name": "Object representation",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/object` to return the current / provided timestamp as a JSON object.\n\nFor instance, if the `unit` has been specified as `month`, the returned timestamp would indicate the beginning of the current month. Similar results are returned for other units of time, like: `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds`\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  years: 2016,\n  months: 10,\n  days: 10,\n  hours: 23,\n  minutes: 34,\n  seconds: 20,\n  milliseconds: 980\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "object"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": ""
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "141679e3-259b-42e8-a7fd-9f372920e515",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should return the date components\", function () {",
                    "    pm.expect(pm.response.json()).to.eql({",
                    "        \"years\": 2016,",
                    "        \"months\": 9,",
                    "        \"date\": 10,",
                    "        ",
                    "        \"hours\": 0,",
                    "        \"minutes\": 0,",
                    "        \"seconds\": 0,",
                    "        \"milliseconds\": 0",
                    "    });",
                    "});"
                  ],
                  "_lastExecutionId": "f1e82ec7-2360-4abf-9ca8-ffa53bc0a740"
                }
              }
            ]
          },
          {
            "_": {},
            "id": "945644e7-e0c0-4def-8ccd-19381d70fa56",
            "name": "Before comparisons",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/before` to check if the provided timestamps is before a comparison `target` (query parameter).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `before` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  before: true/false\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "before"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  },
                  {
                    "key": "target",
                    "value": "2017-10-10"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": ""
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "e8a4b849-3d0d-4db3-96b4-f61a24b950d4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should say timestamp is before target\", function () {",
                    "    pm.response.to.have.jsonBody('before', true);",
                    "});"
                  ],
                  "_lastExecutionId": "a71a5448-71d7-4f52-b039-116a6695b47c"
                }
              }
            ]
          },
          {
            "_": {},
            "id": "f0eb0ddc-2878-43d0-aa92-65a49f3fbcd7",
            "name": "After comparisons",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/after` to check if the provided timestamps is after a comparison `target` (query parameter).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `after` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  after: true/false\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "after"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  },
                  {
                    "key": "target",
                    "value": "2017-10-10"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": ""
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "744f2fd4-1c87-4645-ac59-4ba31825bb6e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should say timestamp is not after target\", function () {",
                    "    pm.response.to.have.jsonBody('after', false);",
                    "});"
                  ],
                  "_lastExecutionId": "55bbc8b6-abc8-4dd2-b5cd-8db197a9d1c5"
                }
              }
            ]
          },
          {
            "_": {},
            "id": "a09078c9-47e2-4739-829c-361289865c0c",
            "name": "Between timestamps",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/between` to check if the provided timestamp is between a range specified by the `start` and `end` query parameters. A resolution limit can also be specified by the `unit` query parameter.\n\nFor instance, for a resolution `unit` of `month`,\n`2016-10-05` does lie between `2016-11-02` and `2016-09-01`.\n\nThis endpoint also accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `between` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  between: true/false\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "between"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  },
                  {
                    "key": "start",
                    "value": "2017-10-10"
                  },
                  {
                    "key": "end",
                    "value": "2019-10-10"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": ""
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "7308265c-515f-47ac-b54e-22c250857969",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should say timestamp is not between start and end\", function () {",
                    "    pm.response.to.have.jsonBody('between', false);",
                    "});"
                  ],
                  "_lastExecutionId": "883d9029-bfe9-49f0-ba59-6b24cacf954d"
                }
              }
            ]
          },
          {
            "_": {},
            "id": "c6cb4c34-68ce-45be-ae5e-d08027386bcd",
            "name": "Leap year check",
            "request": {
              "description": {
                "content": "A simple `GET` request to `/time/leap` to check if the provided/current timestamp belongs to a leap year.\n\nThis endpoint also accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `leap` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  leap: true/false\n}\n```",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "time",
                  "leap"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "timestamp",
                    "value": "2016-10-10"
                  }
                ],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "raw",
                "raw": ""
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "b39e6293-02e6-43e6-8d9c-88626a1d262e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response json should say timestamp is within leap year\", function () {",
                    "    pm.response.to.have.jsonBody('leap', true);",
                    "});"
                  ],
                  "_lastExecutionId": "5b48e35b-0fb1-44b8-b8c4-4d402d386522"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "_": {},
        "id": "320e2b1d-0f58-4983-bd20-e038f758c28a",
        "name": "Utilities / Postman Collection",
        "description": {
          "content": "",
          "type": "text/plain"
        },
        "item": [
          {
            "_": {},
            "id": "e3bd8adc-f13d-4e2b-91f2-4a07f7a9c52f",
            "name": "Transform collection from format v1 to v2",
            "request": {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "transform",
                  "collection"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "from",
                    "value": "1"
                  },
                  {
                    "key": "to",
                    "value": "2"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"id\": \"7875be4b-917d-4aff-8cc4-5606c36bf418\",\n  \"name\": \"Sample Postman Collection\",\n  \"description\": \"A sample collection to demonstrate collections as a set of related requests\",\n  \"order\": [\n    \"4d9134be-e8bf-4693-9cd7-1c0fc66ae739\",\n    \"141ba274-cc50-4377-a59c-e080066f375e\"\n  ],\n  \"folders\": [],\n  \"requests\": [\n    {\n      \"id\": \"4d9134be-e8bf-4693-9cd7-1c0fc66ae739\",\n      \"name\": \"A simple GET request\",\n      \"collectionId\": \"877b9dae-a50e-4152-9b89-870c37216f78\",\n      \"method\": \"GET\",\n      \"headers\": \"\",\n      \"data\": [],\n      \"rawModeData\": \"\",\n      \"tests\": \"tests['response code is 200'] = (responseCode.code === 200);\",\n      \"preRequestScript\": \"\",\n      \"url\": \"https://postman-echo.com/get?source=newman-sample-github-collection\"\n    },\n    {\n      \"id\": \"141ba274-cc50-4377-a59c-e080066f375e\",\n      \"name\": \"A simple POST request\",\n      \"collectionId\": \"877b9dae-a50e-4152-9b89-870c37216f78\",\n      \"method\": \"POST\",\n      \"headers\": \"Content-Type: text/plain\",\n      \"dataMode\": \"raw\",\n      \"data\": [],\n      \"rawModeData\": \"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\",\n      \"url\": \"https://postman-echo.com/post\"\n    }\n  ]\n}"
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json",
                  "postman_previewtype": "html"
                },
                "id": "d3feaf9b-818c-4b14-9693-e894a39c961f",
                "name": "Sample v2 Response",
                "originalRequest": {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "url": {
                    "protocol": "https",
                    "path": [
                      "transform",
                      "collection"
                    ],
                    "host": [
                      "postman-echo",
                      "com"
                    ],
                    "query": [
                      {
                        "key": "from",
                        "value": "1"
                      },
                      {
                        "key": "to",
                        "value": "2"
                      }
                    ],
                    "variable": []
                  },
                  "header": [
                    {
                      "description": {
                        "content": "The mime type of this content",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"id\": \"7875be4b-917d-4aff-8cc4-5606c36bf418\",\n  \"name\": \"Sample Postman Collection\",\n  \"description\": \"A sample collection to demonstrate collections as a set of related requests\",\n  \"order\": [\n    \"4d9134be-e8bf-4693-9cd7-1c0fc66ae739\",\n    \"141ba274-cc50-4377-a59c-e080066f375e\",\n    \"4511ca8b-0bc7-430f-b894-a7ec1036f322\"\n  ],\n  \"folders\": [],\n  \"requests\": [\n    {\n      \"id\": \"4d9134be-e8bf-4693-9cd7-1c0fc66ae739\",\n      \"name\": \"A simple GET request\",\n      \"collectionId\": \"877b9dae-a50e-4152-9b89-870c37216f78\",\n      \"method\": \"GET\",\n      \"headers\": \"\",\n      \"data\": [],\n      \"rawModeData\": \"\",\n      \"tests\": \"tests['response code is 200'] = (responseCode.code === 200);\",\n      \"preRequestScript\": \"\",\n      \"url\": \"https://postman-echo.com/get?source=newman-sample-github-collection\"\n    },\n    {\n      \"id\": \"141ba274-cc50-4377-a59c-e080066f375e\",\n      \"name\": \"A simple POST request\",\n      \"collectionId\": \"877b9dae-a50e-4152-9b89-870c37216f78\",\n      \"method\": \"POST\",\n      \"headers\": \"Content-Type: text/plain\",\n      \"dataMode\": \"raw\",\n      \"data\": [],\n      \"rawModeData\": \"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\",\n      \"url\": \"https://postman-echo.com/post\"\n    },\n    {\n      \"id\": \"4511ca8b-0bc7-430f-b894-a7ec1036f322\",\n      \"name\": \"A simple POST request with JSON body\",\n      \"collectionId\": \"877b9dae-a50e-4152-9b89-870c37216f78\",\n      \"method\": \"POST\",\n      \"headers\": \"Content-Type: application/json\",\n      \"dataMode\": \"raw\",\n      \"data\": [],\n      \"rawModeData\": \"{\\\"text\\\":\\\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\\\"}\",\n      \"url\": \"https://postman-echo.com/post\"\n    }\n  ]\n}"
                  }
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Expose-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Expose-Headers",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Wed, 11 Jan 2017 10:41:32 GMT"
                  },
                  {
                    "name": "ETag",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "ETag",
                    "value": "W/\"4cc-7P727Clhlrl9+b1/vneniw\""
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.10.1"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "X-HTTP-Method-Override, Accept-Encoding"
                  },
                  {
                    "name": "set-cookie",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "set-cookie",
                    "value": "sails.sid=s%3AHtnQ1hlPxoj7wZahoNkcjN-aw9nQL0fc.KSyfLbEKhv1Lt3LvH13Ogjv9ENZgsBBSM6V8Y7TqVOU; Path=/; HttpOnly"
                  },
                  {
                    "name": "transfer-encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "transfer-encoding",
                    "value": "chunked"
                  }
                ],
                "body": "{\"variables\":[],\"info\":{\"name\":\"Sample Postman Collection\",\"_postman_id\":\"7875be4b-917d-4aff-8cc4-5606c36bf418\",\"description\":\"A sample collection to demonstrate collections as a set of related requests\",\"schema\":\"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"},\"item\":[{\"name\":\"A simple GET request\",\"event\":[{\"listen\":\"test\",\"script\":{\"type\":\"text/javascript\",\"exec\":[\"tests['response code is 200'] = (responseCode.code === 200);\"]}}],\"request\":{\"url\":\"https://postman-echo.com/get?source=newman-sample-github-collection\",\"method\":\"GET\",\"header\":[],\"body\":{\"mode\":\"raw\",\"raw\":\"\"}},\"response\":[]},{\"name\":\"A simple POST request\",\"request\":{\"url\":\"https://postman-echo.com/post\",\"method\":\"POST\",\"header\":[{\"key\":\"Content-Type\",\"value\":\"text/plain\",\"description\":\"\"}],\"body\":{\"mode\":\"raw\",\"raw\":\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\"}},\"response\":[]},{\"name\":\"A simple POST request with JSON body\",\"request\":{\"url\":\"https://postman-echo.com/post\",\"method\":\"POST\",\"header\":[{\"key\":\"Content-Type\",\"value\":\"application/json\",\"description\":\"\"}],\"body\":{\"mode\":\"raw\",\"raw\":\"{\\\"text\\\":\\\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\\\"}\"}},\"response\":[]}]}",
                "cookie": [
                  {
                    "name": "sails.sid",
                    "expires": null,
                    "domain": "postman-echo.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": true,
                    "hostOnly": false,
                    "session": false,
                    "value": "s%3AHtnQ1hlPxoj7wZahoNkcjN-aw9nQL0fc.KSyfLbEKhv1Lt3LvH13Ogjv9ENZgsBBSM6V8Y7TqVOU"
                  }
                ],
                "responseTime": "920"
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "e0e90eb5-a17f-4bdb-aab7-7aa8919ef646",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response has almost valid items\", function () {",
                    "    pm.response.to.have.jsonBody('info.schema', 'https://schema.getpostman.com/json/collection/v2.0.0/collection.json')",
                    "        .and.to.have.jsonBody('item[0].name', 'A simple GET request')",
                    "        .and.to.have.jsonBody('item[1].name', 'A simple POST request');",
                    "});"
                  ],
                  "_lastExecutionId": "fb3ecdb5-4517-4fcf-aeb3-eb875069a508"
                }
              }
            ]
          },
          {
            "_": {},
            "id": "a7d19fd9-70d0-4c8d-b192-f2c057001ebb",
            "name": "Transform collection from format v2 to v1",
            "request": {
              "description": {
                "content": "",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "transform",
                  "collection"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [
                  {
                    "key": "from",
                    "value": "2"
                  },
                  {
                    "key": "to",
                    "value": "1"
                  }
                ],
                "variable": []
              },
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "method": "POST",
              "body": {
                "mode": "raw",
                "raw": "{\n  \"info\": {\n    \"name\": \"Sample Postman Collection\",\n    \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\",\n    \"description\": \"A sample collection to demonstrate collections as a set of related requests\"\n  },\n\n  \"item\": [{\n    \"name\": \"A simple GET request\",\n    \"request\": {\n      \"url\": \"https://postman-echo.com/get?source=newman-sample-github-collection\",\n      \"method\": \"GET\"\n    }\n  }, {\n    \"name\": \"A simple POST request\",\n    \"request\": {\n      \"url\": \"https://postman-echo.com/post\",\n      \"method\": \"POST\",\n      \"header\": [{\n        \"key\": \"Content-Type\",\n        \"value\": \"text/plain\"\n      }],\n      \"body\": {\n        \"mode\": \"raw\",\n        \"raw\": \"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\"\n      }\n    }\n  }]\n}"
              }
            },
            "response": [
              {
                "_": {
                  "postman_previewlanguage": "json",
                  "postman_previewtype": "html"
                },
                "id": "3d93b66f-920d-424a-93b5-2f2cb77ca0a5",
                "name": "Sample v1 Response",
                "originalRequest": {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "url": {
                    "protocol": "https",
                    "path": [
                      "transform",
                      "collection"
                    ],
                    "host": [
                      "postman-echo",
                      "com"
                    ],
                    "query": [
                      {
                        "key": "from",
                        "value": "2"
                      },
                      {
                        "key": "to",
                        "value": "1"
                      }
                    ],
                    "variable": []
                  },
                  "header": [
                    {
                      "description": {
                        "content": "The mime type of this content",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n  \"info\": {\n    \"name\": \"Sample Postman Collection\",\n    \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\",\n    \"description\": \"A sample collection to demonstrate collections as a set of related requests\"\n  },\n\n  \"item\": [{\n    \"name\": \"A simple GET request\",\n    \"event\": [{\n      \"listen\": \"test\",\n      \"script\": {\n        \"type\": \"text/javascript\",\n        \"exec\": [\"tests['response code is 200'] = (responseCode.code === 200);\"]\n      }\n    }],\n    \"request\": {\n      \"url\": \"https://postman-echo.com/get?source=newman-sample-github-collection\",\n      \"method\": \"GET\"\n    }\n  }, {\n    \"name\": \"A simple POST request\",\n    \"request\": {\n      \"url\": \"https://postman-echo.com/post\",\n      \"method\": \"POST\",\n      \"header\": [{\n        \"key\": \"Content-Type\",\n        \"value\": \"text/plain\"\n      }],\n      \"body\": {\n        \"mode\": \"raw\",\n        \"raw\": \"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\"\n      }\n    }\n  }, {\n    \"name\": \"A simple POST request with JSON body\",\n    \"request\": {\n      \"url\": \"https://postman-echo.com/post\",\n      \"method\": \"POST\",\n      \"header\": [{\n        \"key\": \"Content-Type\",\n        \"value\": \"application/json\"\n      }],\n      \"body\": {\n        \"mode\": \"raw\",\n        \"raw\": \"{\\\"text\\\":\\\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\\\"}\"\n      }\n    }\n  }]\n}"
                  }
                },
                "status": "OK",
                "code": 200,
                "header": [
                  {
                    "name": "Access-Control-Allow-Credentials",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Credentials",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Headers",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Methods",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Methods",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Allow-Origin",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Allow-Origin",
                    "value": ""
                  },
                  {
                    "name": "Access-Control-Expose-Headers",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Access-Control-Expose-Headers",
                    "value": ""
                  },
                  {
                    "name": "Connection",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Connection",
                    "value": "keep-alive"
                  },
                  {
                    "name": "Content-Encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Encoding",
                    "value": "gzip"
                  },
                  {
                    "name": "Content-Type",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json; charset=utf-8"
                  },
                  {
                    "name": "Date",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Date",
                    "value": "Wed, 11 Jan 2017 10:38:42 GMT"
                  },
                  {
                    "name": "ETag",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "ETag",
                    "value": "W/\"569-P9uLZEIyoPfMmQ+U0mTO1A\""
                  },
                  {
                    "name": "Server",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Server",
                    "value": "nginx/1.10.1"
                  },
                  {
                    "name": "Vary",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "Vary",
                    "value": "X-HTTP-Method-Override, Accept-Encoding"
                  },
                  {
                    "name": "set-cookie",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "set-cookie",
                    "value": "sails.sid=s%3A55y5Ll7HpTzt_hKuw6N54k4N04ilmMdn.uCPCHttP5DmI%2BdBw2I9NZL55lFFOzz4XxS4qAHv47gI; Path=/; HttpOnly"
                  },
                  {
                    "name": "transfer-encoding",
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "key": "transfer-encoding",
                    "value": "chunked"
                  }
                ],
                "body": "{\"id\":\"0c42230c-c8e4-4ca0-a4aa-d393971de8b8\",\"name\":\"Sample Postman Collection\",\"description\":\"A sample collection to demonstrate collections as a set of related requests\",\"order\":[\"3d04ed83-dc1e-40ec-923c-16aa92509e50\",\"e02f8160-fb41-4633-be80-cc7d701e85b4\",\"77bd6d4d-1060-4927-aa5c-dcdba7f750cf\"],\"folders\":[],\"requests\":[{\"id\":\"3d04ed83-dc1e-40ec-923c-16aa92509e50\",\"name\":\"A simple GET request\",\"collectionId\":\"1dd68aff-a3fa-4f52-904f-5b75053bc9d9\",\"method\":\"GET\",\"headers\":\"\",\"data\":[],\"rawModeData\":\"\",\"tests\":\"tests['response code is 200'] = (responseCode.code === 200);\",\"preRequestScript\":\"\",\"url\":\"https://postman-echo.com/get?source=newman-sample-github-collection\"},{\"id\":\"e02f8160-fb41-4633-be80-cc7d701e85b4\",\"name\":\"A simple POST request\",\"collectionId\":\"1dd68aff-a3fa-4f52-904f-5b75053bc9d9\",\"method\":\"POST\",\"headers\":\"Content-Type: text/plain\",\"dataMode\":\"raw\",\"data\":[],\"rawModeData\":\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\",\"url\":\"https://postman-echo.com/post\"},{\"id\":\"77bd6d4d-1060-4927-aa5c-dcdba7f750cf\",\"name\":\"A simple POST request with JSON body\",\"collectionId\":\"1dd68aff-a3fa-4f52-904f-5b75053bc9d9\",\"method\":\"POST\",\"headers\":\"Content-Type: application/json\",\"dataMode\":\"raw\",\"data\":[],\"rawModeData\":\"{\\\"text\\\":\\\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\\\"}\",\"url\":\"https://postman-echo.com/post\"}]}",
                "cookie": [
                  {
                    "name": "sails.sid",
                    "expires": null,
                    "domain": "postman-echo.com",
                    "path": "/",
                    "secure": false,
                    "httpOnly": true,
                    "hostOnly": false,
                    "session": false,
                    "value": "s%3A55y5Ll7HpTzt_hKuw6N54k4N04ilmMdn.uCPCHttP5DmI%2BdBw2I9NZL55lFFOzz4XxS4qAHv47gI"
                  }
                ],
                "responseTime": "276"
              }
            ],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "b13f9116-f4b6-493c-986c-4ca3fff3dc50",
                  "type": "text/javascript",
                  "exec": [
                    "pm.test(\"response is ok\", function () {",
                    "    pm.response.to.have.status(200);",
                    "});",
                    "",
                    "pm.test(\"response has almost valid items\", function () {",
                    "    pm.response.to.have.jsonBody('folders', [])",
                    "        .and.to.have.jsonBody('order')",
                    "        .and.to.have.jsonBody('requests[0].name', 'A simple GET request')",
                    "        .and.to.have.jsonBody('requests[1].name', 'A simple POST request');",
                    "});"
                  ],
                  "_lastExecutionId": "22c66bad-a3f8-4fa8-bc58-1a0f6e82f7c7"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "_": {},
        "id": "7a3c98eb-5f32-45ed-add7-455b76189e2a",
        "name": "Auth: Digest",
        "description": {
          "content": "Digest authentication protects an endpoint with a username and password without actually transmitting the password over network.\nOne has to apply a hash function (like MD5, etc) to the username and password before sending them over the network.\n\n> Username: `postman`\n>\n> Password: `password`\n\nUnlike Basic-Auth, authentication happens using two consecutive requests where the first request returns `401 Unauthorised` along with `WWW-Authenticate` header containing information that needs to be used to authenticate subsequent calls.\n\nTo know more about digest authentication, refer to the [Digest Access Authentication](https://en.wikipedia.org/wiki/Digest_access_authentication) wikipedia article.\nThe article on [authentication helpers](https://www.getpostman.com/docs/helpers#digest-auth) elaborates how to use the same within the Postman app.",
          "type": "text/plain"
        },
        "item": [
          {
            "_": {},
            "id": "4611a861-728b-4d89-af1c-6b6e75753109",
            "name": "DigestAuth Request",
            "request": {
              "description": {
                "content": "Performing a simple `GET` request to this endpoint returns status code `401 Unauthorized` with `WWW-Authenticate` header containing information to successfully authenticate subsequent requests.\nThe `WWW-Authenticate` header must be processed to extract `realm` and `nonce` values to hash subsequent requests.\n\nWhen this request is executed within Postman, the script attached with this request does the hard work of extracting realm and nonce from the header and set it as [global variables](https://www.getpostman.com/docs/environments#global-variables?source=echo-collection-app-onboarding) named `echo_digest_nonce` and `echo_digest_realm`.\nThese variables are re-used in subsequent request for seamless integration of the two requests.",
                "type": "text/plain"
              },
              "url": {
                "protocol": "https",
                "path": [
                  "digest-auth"
                ],
                "host": [
                  "postman-echo",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "GET",
              "body": {
                "mode": "formdata",
                "formdata": [
                  {
                    "key": "code",
                    "value": "xWnkliVQJURqB2x1",
                    "type": "text"
                  },
                  {
                    "key": "grant_type",
                    "value": "authorization_code",
                    "type": "text"
                  },
                  {
                    "key": "redirect_uri",
                    "value": "https://www.getpostman.com/oauth2/callback",
                    "type": "text"
                  },
                  {
                    "key": "client_id",
                    "value": "abc123",
                    "type": "text"
                  },
                  {
                    "key": "client_secret",
                    "value": "ssh-secret",
                    "type": "text"
                  }
                ]
              }
            },
            "response": [],
            "event": [
              {
                "listen": "test",
                "script": {
                  "id": "d87978b4-87ec-4efe-97a5-25a4247f5db7",
                  "type": "text/javascript",
                  "exec": [
                    "tests[\"response code is 401\"] = responseCode.code === 401;",
                    "tests[\"response has WWW-Authenticate header\"] = (postman.getResponseHeader('WWW-Authenticate'));",
                    "",
                    "var authenticateHeader = postman.getResponseHeader('WWW-Authenticate'),",
                    "    realmStart = authenticateHeader.indexOf('\"',authenticateHeader.indexOf(\"realm\")) + 1 ,",
                    "    realmEnd = authenticateHeader.indexOf('\"',realmStart),",
                    "    realm = authenticateHeader.slice(realmStart,realmEnd),",
                    "    nonceStart = authenticateHeader.indexOf('\"',authenticateHeader.indexOf(\"nonce\")) + 1,",
                    "    nonceEnd = authenticateHeader.indexOf('\"',nonceStart),",
                    "    nonce = authenticateHeader.slice(nonceStart,nonceEnd);",
                    "    ",
                    "postman.setGlobalVariable('echo_digest_realm', realm);",
                    "postman.setGlobalVariable('echo_digest_nonce', nonce);"
                  ],
                  "_lastExecutionId": "af06ace1-0159-41ff-823e-9c1f8b36fb9c"
                }
              }
            ]
          }
        ],
        "event": []
      }
    ],
    "event": [],
    "variable": [],
    "info": {
      "id": "f695cab7-6878-eb55-7943-ad88e1ccfd65",
      "name": "Postman Echo",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    }
  },
  "environment": {
    "id": "b1c8b2b0-4548-4c5c-9b32-e9f8c64c5c86",
    "values": []
  },
  "globals": {
    "id": "e5e4ae0b-8b06-433a-a598-8702eeb5dbe0",
    "values": [
      {
        "type": "any",
        "value": "Users",
        "key": "echo_digest_realm"
      },
      {
        "type": "any",
        "value": "oFPY6D8AeQxs5M3LJKSGk6A2qnNu8CKj",
        "key": "echo_digest_nonce"
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 37,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 37,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 37,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 37,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 37,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 90,
        "pending": 0,
        "failed": 1
      },
      "testScripts": {
        "total": 37,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 0,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 279.7837837837837,
      "started": 1522505597715,
      "completed": 1522505609425
    },
    "executions": [
      {
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 37,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2d896757-ed01-423e-9ffe-7633a0a9cf7b",
          "httpRequestId": "94b95365-8175-4a12-9293-a9ee9a23a113"
        },
        "item": {
          "_": {},
          "id": "a66794d5-a0af-47a0-90aa-c95d2322baf3",
          "name": "GET Request",
          "request": {
            "description": {
              "content": "The HTTP `GET` request method is meant to retrieve data from a server. The data\nis identified by a unique URI (Uniform Resource Identifier). \n\nA `GET` request can pass parameters to the server using \"Query String \nParameters\". For example, in the following request,\n\n> http://example.com/hi/there?hand=wave\n\nThe parameter \"hand\" has the value \"wave\".\n\nThis endpoint echoes the HTTP headers, request parameters and the complete\nURI requested.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "get"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "foo1",
                  "value": "bar1"
                },
                {
                  "key": "foo2",
                  "value": "bar2"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "cadfe554-8e82-4fa6-9ecb-1a4eab88087f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json with request queries\", function () {",
                  "    pm.response.to.have.jsonBody('args.foo1', 'bar1')",
                  "        .and.have.jsonBody('args.foo2', 'bar2');",
                  "});"
                ],
                "_lastExecutionId": "9755e0ea-426d-4dd4-9125-9befd2179cc8"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "The HTTP `GET` request method is meant to retrieve data from a server. The data\nis identified by a unique URI (Uniform Resource Identifier). \n\nA `GET` request can pass parameters to the server using \"Query String \nParameters\". For example, in the following request,\n\n> http://example.com/hi/there?hand=wave\n\nThe parameter \"hand\" has the value \"wave\".\n\nThis endpoint echoes the HTTP headers, request parameters and the complete\nURI requested.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "get"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "foo1",
                "value": "bar1"
              },
              {
                "key": "foo2",
                "value": "bar2"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "response": {
          "id": "fdb83f23-95f4-4ff2-aa3a-49aaa73b23f7",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:18 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"10f-2KCY+d9MhjrTfHhr5W43dw\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AbhrcHxaOs00Y1CaA1Xuy1qKm-SCYZhTI.cdxrcNmKURzTLolqAgShZh%2BWCFaTNzBLf3XmqR7dyHM; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "193"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              123,
              34,
              102,
              111,
              111,
              49,
              34,
              58,
              34,
              98,
              97,
              114,
              49,
              34,
              44,
              34,
              102,
              111,
              111,
              50,
              34,
              58,
              34,
              98,
              97,
              114,
              50,
              34,
              125,
              44,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              49,
              46,
              51,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              52,
              51,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              125,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              103,
              101,
              116,
              63,
              102,
              111,
              111,
              49,
              61,
              98,
              97,
              114,
              49,
              38,
              102,
              111,
              111,
              50,
              61,
              98,
              97,
              114,
              50,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 939,
          "responseSize": 271
        },
        "id": "a66794d5-a0af-47a0-90aa-c95d2322baf3",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "response body has json with request queries"
          }
        ]
      },
      {
        "cursor": {
          "ref": "ff12a3bc-de52-4db4-a865-32f0c9c1b798",
          "length": 37,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a0473cb3-395d-40af-8b40-4d3ee19c4385"
        },
        "item": {
          "_": {},
          "id": "c833cc5e-c045-401b-96da-bd70b5dfa780",
          "name": "POST Raw Text",
          "request": {
            "description": {
              "content": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "post"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "This is expected to be sent back as part of response body."
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6ec5d0c5-226a-4a8e-9ab8-13e5d8821e71",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json with request body\", function () {",
                  "    pm.response.to.have.jsonBody('data', ",
                  "        'This is expected to be sent back as part of response body.');",
                  "});"
                ],
                "_lastExecutionId": "ffdc057e-d51f-4bc6-947d-a9d0dfc4e8ca"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "post"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3AbhrcHxaOs00Y1CaA1Xuy1qKm-SCYZhTI.cdxrcNmKURzTLolqAgShZh%2BWCFaTNzBLf3XmqR7dyHM"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            },
            {
              "key": "content-length",
              "value": 58
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "This is expected to be sent back as part of response body."
          }
        },
        "response": {
          "id": "9fe59f9e-fa2e-4c86-bc45-360806412840",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:18 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"1e0-A4eGIG0M1bwpbf3xixp0Eg\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AuJgtrvLaoRvHF-NjUazp6ja0Gku1KWki.xnKYG8kRfOP%2Bt5ahmdxucHPss1LGytrywJZVU42%2BuU4; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "X-HTTP-Method-Override, Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "351"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              34,
              84,
              104,
              105,
              115,
              32,
              105,
              115,
              32,
              101,
              120,
              112,
              101,
              99,
              116,
              101,
              100,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              115,
              101,
              110,
              116,
              32,
              98,
              97,
              99,
              107,
              32,
              97,
              115,
              32,
              112,
              97,
              114,
              116,
              32,
              111,
              102,
              32,
              114,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              32,
              98,
              111,
              100,
              121,
              46,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              102,
              111,
              114,
              109,
              34,
              58,
              123,
              125,
              44,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              108,
              101,
              110,
              103,
              116,
              104,
              34,
              58,
              34,
              53,
              56,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              116,
              101,
              120,
              116,
              47,
              112,
              108,
              97,
              105,
              110,
              34,
              44,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              98,
              104,
              114,
              99,
              72,
              120,
              97,
              79,
              115,
              48,
              48,
              89,
              49,
              67,
              97,
              65,
              49,
              88,
              117,
              121,
              49,
              113,
              75,
              109,
              45,
              83,
              67,
              89,
              90,
              104,
              84,
              73,
              46,
              99,
              100,
              120,
              114,
              99,
              78,
              109,
              75,
              85,
              82,
              122,
              84,
              76,
              111,
              108,
              113,
              65,
              103,
              83,
              104,
              90,
              104,
              37,
              50,
              66,
              87,
              67,
              70,
              97,
              84,
              78,
              122,
              66,
              76,
              102,
              51,
              88,
              109,
              113,
              82,
              55,
              100,
              121,
              72,
              77,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              49,
              46,
              51,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              52,
              51,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              125,
              44,
              34,
              106,
              115,
              111,
              110,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              112,
              111,
              115,
              116,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 194,
          "responseSize": 480
        },
        "id": "c833cc5e-c045-401b-96da-bd70b5dfa780",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "response body has json with request body"
          }
        ]
      },
      {
        "cursor": {
          "ref": "1eeaff62-4180-4c9f-ae14-006cedb36668",
          "length": 37,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6de4665f-f9c0-42d4-ab4f-863ae2116c6d"
        },
        "item": {
          "_": {},
          "id": "e949b4c9-2cde-4c15-9aa5-b4a26c3c068e",
          "name": "POST Form Data",
          "request": {
            "description": {
              "content": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested when data is sent as a form parameter.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "post"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "POST",
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "foo1",
                  "value": "bar1"
                },
                {
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "foo2",
                  "value": "bar2"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "04ee7a8c-57ff-4e74-8286-9fff01ac0764",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json with form data\", function () {",
                  "    pm.response.to.have.jsonBody('form.foo1', 'bar1')",
                  "        .and.have.jsonBody('form.foo2', 'bar2');",
                  "});"
                ],
                "_lastExecutionId": "cf39f667-46ff-4508-bb89-233b98dfbdcb"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "The HTTP `POST` request method is meant to transfer data to a server \n(and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `POST` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following request,\n\n> POST /hi/there?hand=wave\n>\n> <request-body>\n\nThe parameter \"hand\" has the value \"wave\". The request body can be in multiple\nformats. These formats are defined by the MIME type of the request. The MIME \nType can be set using the ``Content-Type`` HTTP header. The most commonly used \nMIME types are:\n\n* `multipart/form-data`\n* `application/x-www-form-urlencoded`\n* `application/json`\n\nThis endpoint echoes the HTTP headers, request parameters, the contents of\nthe request body and the complete URI requested when data is sent as a form parameter.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "post"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3AuJgtrvLaoRvHF-NjUazp6ja0Gku1KWki.xnKYG8kRfOP%2Bt5ahmdxucHPss1LGytrywJZVU42%2BuU4"
            },
            {
              "key": "content-type",
              "value": "application/x-www-form-urlencoded"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            },
            {
              "key": "content-length",
              "value": 19
            }
          ],
          "method": "POST",
          "body": {
            "mode": "urlencoded",
            "urlencoded": [
              {
                "key": "foo1",
                "value": "bar1"
              },
              {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "key": "foo2",
                "value": "bar2"
              }
            ]
          }
        },
        "response": {
          "id": "252b588d-e2e7-43dc-930d-f88c549fcf3b",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:19 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"1f3-ZjCn43JX3o/gPmLtbMcprw\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AUHYPKeUyxsY2kyXpNSj76h-VGWrFBTw8.f3hEt41mTUx%2FOwPdO%2FlBaE2cUqcfPiajGeA7B%2BkhrFw; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "X-HTTP-Method-Override, Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "337"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              34,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              102,
              111,
              114,
              109,
              34,
              58,
              123,
              34,
              102,
              111,
              111,
              49,
              34,
              58,
              34,
              98,
              97,
              114,
              49,
              34,
              44,
              34,
              102,
              111,
              111,
              50,
              34,
              58,
              34,
              98,
              97,
              114,
              50,
              34,
              125,
              44,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              108,
              101,
              110,
              103,
              116,
              104,
              34,
              58,
              34,
              49,
              57,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              97,
              112,
              112,
              108,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              47,
              120,
              45,
              119,
              119,
              119,
              45,
              102,
              111,
              114,
              109,
              45,
              117,
              114,
              108,
              101,
              110,
              99,
              111,
              100,
              101,
              100,
              34,
              44,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              117,
              74,
              103,
              116,
              114,
              118,
              76,
              97,
              111,
              82,
              118,
              72,
              70,
              45,
              78,
              106,
              85,
              97,
              122,
              112,
              54,
              106,
              97,
              48,
              71,
              107,
              117,
              49,
              75,
              87,
              107,
              105,
              46,
              120,
              110,
              75,
              89,
              71,
              56,
              107,
              82,
              102,
              79,
              80,
              37,
              50,
              66,
              116,
              53,
              97,
              104,
              109,
              100,
              120,
              117,
              99,
              72,
              80,
              115,
              115,
              49,
              76,
              71,
              121,
              116,
              114,
              121,
              119,
              74,
              90,
              86,
              85,
              52,
              50,
              37,
              50,
              66,
              117,
              85,
              52,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              49,
              46,
              51,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              52,
              51,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              125,
              44,
              34,
              106,
              115,
              111,
              110,
              34,
              58,
              123,
              34,
              102,
              111,
              111,
              49,
              34,
              58,
              34,
              98,
              97,
              114,
              49,
              34,
              44,
              34,
              102,
              111,
              111,
              50,
              34,
              58,
              34,
              98,
              97,
              114,
              50,
              34,
              125,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              112,
              111,
              115,
              116,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 190,
          "responseSize": 499
        },
        "id": "e949b4c9-2cde-4c15-9aa5-b4a26c3c068e",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "response body has json with form data"
          }
        ]
      },
      {
        "cursor": {
          "ref": "465fe0e8-6591-4af9-9b00-0d0848859c64",
          "length": 37,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "685dd7ff-3bfd-4079-9ca9-7f3363982cba"
        },
        "item": {
          "_": {},
          "id": "2c9e09b6-7450-4609-84e2-a0761cad61db",
          "name": "PUT Request",
          "request": {
            "description": {
              "content": "The HTTP `PUT` request method is similar to HTTP `POST`. It too is meant to \ntransfer data to a server (and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `PUT` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following \nraw HTTP request,\n\n> PUT /hi/there?hand=wave\n>\n> <request-body>\n\n\n",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "put"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "PUT",
            "body": {
              "mode": "raw",
              "raw": "This is expected to be sent back as part of response body."
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "6c4693dc-3ca0-4df5-ad80-7944acb244f7",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json with form data\", function () {",
                  "    pm.response.to.have.jsonBody('data', ",
                  "        'This is expected to be sent back as part of response body.');",
                  "});"
                ],
                "_lastExecutionId": "66d85521-4eba-4e44-835d-1b5c522b812f"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "The HTTP `PUT` request method is similar to HTTP `POST`. It too is meant to \ntransfer data to a server (and elicit a response). What data is returned depends on the implementation\nof the server.\n\nA `PUT` request can pass parameters to the server using \"Query String \nParameters\", as well as the Request Body. For example, in the following \nraw HTTP request,\n\n> PUT /hi/there?hand=wave\n>\n> <request-body>\n\n\n",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "put"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3AUHYPKeUyxsY2kyXpNSj76h-VGWrFBTw8.f3hEt41mTUx%2FOwPdO%2FlBaE2cUqcfPiajGeA7B%2BkhrFw"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            },
            {
              "key": "content-length",
              "value": 58
            }
          ],
          "method": "PUT",
          "body": {
            "mode": "raw",
            "raw": "This is expected to be sent back as part of response body."
          }
        },
        "response": {
          "id": "0c8b7b39-f709-4ad5-a323-54d76efe1ee6",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:19 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"1e3-NCvKgbwT+f7Lp2ZMUPB/5w\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AyPNHpDLo3NDgVhkc00DwCmi4l6uqtbHS.svWHhTeGqbGcHJsArSuUCjdHPlkXzWaMBXeF19zwGDE; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "352"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              34,
              84,
              104,
              105,
              115,
              32,
              105,
              115,
              32,
              101,
              120,
              112,
              101,
              99,
              116,
              101,
              100,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              115,
              101,
              110,
              116,
              32,
              98,
              97,
              99,
              107,
              32,
              97,
              115,
              32,
              112,
              97,
              114,
              116,
              32,
              111,
              102,
              32,
              114,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              32,
              98,
              111,
              100,
              121,
              46,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              102,
              111,
              114,
              109,
              34,
              58,
              123,
              125,
              44,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              108,
              101,
              110,
              103,
              116,
              104,
              34,
              58,
              34,
              53,
              56,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              116,
              101,
              120,
              116,
              47,
              112,
              108,
              97,
              105,
              110,
              34,
              44,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              85,
              72,
              89,
              80,
              75,
              101,
              85,
              121,
              120,
              115,
              89,
              50,
              107,
              121,
              88,
              112,
              78,
              83,
              106,
              55,
              54,
              104,
              45,
              86,
              71,
              87,
              114,
              70,
              66,
              84,
              119,
              56,
              46,
              102,
              51,
              104,
              69,
              116,
              52,
              49,
              109,
              84,
              85,
              120,
              37,
              50,
              70,
              79,
              119,
              80,
              100,
              79,
              37,
              50,
              70,
              108,
              66,
              97,
              69,
              50,
              99,
              85,
              113,
              99,
              102,
              80,
              105,
              97,
              106,
              71,
              101,
              65,
              55,
              66,
              37,
              50,
              66,
              107,
              104,
              114,
              70,
              119,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              49,
              46,
              51,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              52,
              51,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              125,
              44,
              34,
              106,
              115,
              111,
              110,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              112,
              117,
              116,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 192,
          "responseSize": 483
        },
        "id": "2c9e09b6-7450-4609-84e2-a0761cad61db",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "response body has json with form data"
          }
        ]
      },
      {
        "cursor": {
          "ref": "0891257e-b85f-488c-b5ed-7dbc51a10bed",
          "length": 37,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b3bdd1a2-c1ce-4ecc-b874-dc0bd2f2e237"
        },
        "item": {
          "_": {},
          "id": "b9c27c27-0400-4780-9949-fd9ebdb2406c",
          "name": "PATCH Request",
          "request": {
            "description": {
              "content": "The HTTP `PATCH` method is used to update resources on a server. The exact\nuse of `PATCH` requests depends on the server in question. There are a number\nof server implementations which handle `PATCH` differently. Technically, \n`PATCH` supports both Query String parameters and a Request Body.\n\nThis endpoint accepts an HTTP `PATCH` request and provides debug information\nsuch as the HTTP headers, Query String arguments, and the Request Body.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "patch"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "PATCH",
            "body": {
              "mode": "raw",
              "raw": "This is expected to be sent back as part of response body."
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7ef88543-450a-4bda-9d9f-ec528f18eee7",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json with form data\", function () {",
                  "    pm.response.to.have.jsonBody('data', ",
                  "        'This is expected to be sent back as part of response body.');",
                  "});"
                ],
                "_lastExecutionId": "b04601db-6d98-42f5-990f-9f4bdf758bcd"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "The HTTP `PATCH` method is used to update resources on a server. The exact\nuse of `PATCH` requests depends on the server in question. There are a number\nof server implementations which handle `PATCH` differently. Technically, \n`PATCH` supports both Query String parameters and a Request Body.\n\nThis endpoint accepts an HTTP `PATCH` request and provides debug information\nsuch as the HTTP headers, Query String arguments, and the Request Body.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "patch"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3AyPNHpDLo3NDgVhkc00DwCmi4l6uqtbHS.svWHhTeGqbGcHJsArSuUCjdHPlkXzWaMBXeF19zwGDE"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            },
            {
              "key": "content-length",
              "value": 58
            }
          ],
          "method": "PATCH",
          "body": {
            "mode": "raw",
            "raw": "This is expected to be sent back as part of response body."
          }
        },
        "response": {
          "id": "6581e6bf-1d51-4af2-9656-0c3bcb72b481",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:19 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"1df-WJyMfJwvI4/fCnzaAaDXag\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3Arz8vR_SQMHb8Wa3k_ShwfGycFaP6O1GK.hxdoGytn91vssmgPPdxsQICJO8RvLv6bCV33HVfeSKs; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "350"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              34,
              84,
              104,
              105,
              115,
              32,
              105,
              115,
              32,
              101,
              120,
              112,
              101,
              99,
              116,
              101,
              100,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              115,
              101,
              110,
              116,
              32,
              98,
              97,
              99,
              107,
              32,
              97,
              115,
              32,
              112,
              97,
              114,
              116,
              32,
              111,
              102,
              32,
              114,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              32,
              98,
              111,
              100,
              121,
              46,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              102,
              111,
              114,
              109,
              34,
              58,
              123,
              125,
              44,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              108,
              101,
              110,
              103,
              116,
              104,
              34,
              58,
              34,
              53,
              56,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              116,
              101,
              120,
              116,
              47,
              112,
              108,
              97,
              105,
              110,
              34,
              44,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              121,
              80,
              78,
              72,
              112,
              68,
              76,
              111,
              51,
              78,
              68,
              103,
              86,
              104,
              107,
              99,
              48,
              48,
              68,
              119,
              67,
              109,
              105,
              52,
              108,
              54,
              117,
              113,
              116,
              98,
              72,
              83,
              46,
              115,
              118,
              87,
              72,
              104,
              84,
              101,
              71,
              113,
              98,
              71,
              99,
              72,
              74,
              115,
              65,
              114,
              83,
              117,
              85,
              67,
              106,
              100,
              72,
              80,
              108,
              107,
              88,
              122,
              87,
              97,
              77,
              66,
              88,
              101,
              70,
              49,
              57,
              122,
              119,
              71,
              68,
              69,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              49,
              46,
              51,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              52,
              51,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              125,
              44,
              34,
              106,
              115,
              111,
              110,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              112,
              97,
              116,
              99,
              104,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 193,
          "responseSize": 479
        },
        "id": "b9c27c27-0400-4780-9949-fd9ebdb2406c",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "response body has json with form data"
          }
        ]
      },
      {
        "cursor": {
          "ref": "6d698daf-0071-4796-827a-a0ac21b651ad",
          "length": 37,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "2d6374c5-7f34-4563-83c8-d0eb48761108"
        },
        "item": {
          "_": {},
          "id": "b6b055ca-4e43-4e09-b237-e4761bb81d12",
          "name": "DELETE Request",
          "request": {
            "description": {
              "content": "The HTTP `DELETE` method is used to delete resources on a server. The exact\nuse of `DELETE` requests depends on the server implementation. In general, \n`DELETE` requests support both, Query String parameters as well as a Request \nBody.\n\nThis endpoint accepts an HTTP `DELETE` request and provides debug information\nsuch as the HTTP headers, Query String arguments, and the Request Body.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "delete"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "DELETE",
            "body": {
              "mode": "raw",
              "raw": "This is expected to be sent back as part of response body."
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f98e955f-292c-4c3b-9cf4-bd040388b454",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json with form data\", function () {",
                  "    pm.response.to.have.jsonBody('data', ",
                  "        'This is expected to be sent back as part of response body.');",
                  "});"
                ],
                "_lastExecutionId": "c7dfa061-fb8a-4c87-85e7-bb31d17467eb"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "The HTTP `DELETE` method is used to delete resources on a server. The exact\nuse of `DELETE` requests depends on the server implementation. In general, \n`DELETE` requests support both, Query String parameters as well as a Request \nBody.\n\nThis endpoint accepts an HTTP `DELETE` request and provides debug information\nsuch as the HTTP headers, Query String arguments, and the Request Body.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "delete"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "text/plain"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3Arz8vR_SQMHb8Wa3k_ShwfGycFaP6O1GK.hxdoGytn91vssmgPPdxsQICJO8RvLv6bCV33HVfeSKs"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            },
            {
              "key": "content-length",
              "value": 58
            }
          ],
          "method": "DELETE",
          "body": {
            "mode": "raw",
            "raw": "This is expected to be sent back as part of response body."
          }
        },
        "response": {
          "id": "c36c76c5-6a27-4140-bb74-40e5f28ebda7",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:19 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"1e0-kGQ8UmpGKn6ykneDpwXoDA\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "350"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              34,
              84,
              104,
              105,
              115,
              32,
              105,
              115,
              32,
              101,
              120,
              112,
              101,
              99,
              116,
              101,
              100,
              32,
              116,
              111,
              32,
              98,
              101,
              32,
              115,
              101,
              110,
              116,
              32,
              98,
              97,
              99,
              107,
              32,
              97,
              115,
              32,
              112,
              97,
              114,
              116,
              32,
              111,
              102,
              32,
              114,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              32,
              98,
              111,
              100,
              121,
              46,
              34,
              44,
              34,
              102,
              105,
              108,
              101,
              115,
              34,
              58,
              123,
              125,
              44,
              34,
              102,
              111,
              114,
              109,
              34,
              58,
              123,
              125,
              44,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              108,
              101,
              110,
              103,
              116,
              104,
              34,
              58,
              34,
              53,
              56,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              34,
              44,
              34,
              99,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              116,
              101,
              120,
              116,
              47,
              112,
              108,
              97,
              105,
              110,
              34,
              44,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              114,
              122,
              56,
              118,
              82,
              95,
              83,
              81,
              77,
              72,
              98,
              56,
              87,
              97,
              51,
              107,
              95,
              83,
              104,
              119,
              102,
              71,
              121,
              99,
              70,
              97,
              80,
              54,
              79,
              49,
              71,
              75,
              46,
              104,
              120,
              100,
              111,
              71,
              121,
              116,
              110,
              57,
              49,
              118,
              115,
              115,
              109,
              103,
              80,
              80,
              100,
              120,
              115,
              81,
              73,
              67,
              74,
              79,
              56,
              82,
              118,
              76,
              118,
              54,
              98,
              67,
              86,
              51,
              51,
              72,
              86,
              102,
              101,
              83,
              75,
              115,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              49,
              46,
              51,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              52,
              51,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              125,
              44,
              34,
              106,
              115,
              111,
              110,
              34,
              58,
              110,
              117,
              108,
              108,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              100,
              101,
              108,
              101,
              116,
              101,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 199,
          "responseSize": 480
        },
        "id": "b6b055ca-4e43-4e09-b237-e4761bb81d12",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "response body has json with form data"
          }
        ]
      },
      {
        "cursor": {
          "ref": "37a860a2-28f7-4ac6-ac5d-fcfa931498b7",
          "length": 37,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b644d486-6cce-4b1d-b8e0-3cdf661fc8a7"
        },
        "item": {
          "_": {},
          "id": "1e7e59b8-2191-4a06-abb2-f35747f69e3a",
          "name": "Request Headers",
          "request": {
            "description": {
              "content": "A `GET` request to this endpoint returns the list of all request headers as part of the response JSON.\nIn Postman, sending your own set of headers through the [Headers tab](https://www.getpostman.com/docs/requests#headers?source=echo-collection-app-onboarding) will reveal the headers as part of the response.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "headers"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "my-sample-header",
                "value": "Lorem ipsum dolor sit amet"
              }
            ],
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript",
                "postman_previewtype": "html"
              },
              "id": "cc74ac33-8c60-495d-b0aa-e72539b8b038",
              "name": "my-sample-header",
              "originalRequest": {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "headers"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "my-sample-header",
                    "value": "Lorem ipsum dolor sit amet"
                  }
                ],
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "342"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 31 Mar 2016 11:14:00 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                }
              ],
              "body": "{\"headers\":{\"host\":\"echo.getpostman.com\",\"accept\":\"*/*\",\"accept-encoding\":\"gzip, deflate, sdch\",\"accept-language\":\"en-US,en;q=0.8\",\"cache-control\":\"no-cache\",\"my-sample-header\":\"Lorem ipsum dolor sit amet\",\"postman-token\":\"3c8ea80b-f599-fba6-e0b4-a0910440e7b6\",\"user-agent\":\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.110 Safari/537.36\",\"x-forwarded-port\":\"443\",\"x-forwarded-proto\":\"https\"}}",
              "cookie": [
                {
                  "name": "sails.sid",
                  "expires": null,
                  "domain": "echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "hostOnly": true,
                  "session": true,
                  "value": "s%3A9stja5zKmIILxq9Jvtha7Lp9LIz1VIdK.Vp8MHC%2BEUJe4ICZPXn2JAoXaV2bTgtoQd%2B3XJLNr51Y"
                }
              ],
              "responseTime": "460"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4b95e7fa-b3ad-4bcf-9a26-b724838300dc",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "// we check to ensire that the headers we sent as request is returned as part of",
                  "// the response body. if you change the request headers, make sure to add them",
                  "// to the tests here",
                  "pm.test(\"sample request header should be returned in response body\", function () {",
                  "    pm.response.to.have.jsonBody('headers.my-sample-header', 'Lorem ipsum dolor sit amet');",
                  "});"
                ],
                "_lastExecutionId": "05b3a322-40e3-45d3-b3f0-4e9b436bf787"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A `GET` request to this endpoint returns the list of all request headers as part of the response JSON.\nIn Postman, sending your own set of headers through the [Headers tab](https://www.getpostman.com/docs/requests#headers?source=echo-collection-app-onboarding) will reveal the headers as part of the response.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "headers"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "my-sample-header",
              "value": "Lorem ipsum dolor sit amet"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3Arz8vR_SQMHb8Wa3k_ShwfGycFaP6O1GK.hxdoGytn91vssmgPPdxsQICJO8RvLv6bCV33HVfeSKs"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "response": {
          "id": "3bf4cce7-7e02-4933-a72d-f4d9731db63a",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:20 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"147-yGkUNEeUGzE6A2b36JvWQg\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AyH09BAKJv1WD4uorUdUg-W5oHrbv5GpW.WF0reb%2FrGLsYJHwUqlRey9DGPDgLJo0MnBKFcrJJpio; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "269"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              123,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              34,
              42,
              47,
              42,
              34,
              44,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              34,
              44,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              114,
              122,
              56,
              118,
              82,
              95,
              83,
              81,
              77,
              72,
              98,
              56,
              87,
              97,
              51,
              107,
              95,
              83,
              104,
              119,
              102,
              71,
              121,
              99,
              70,
              97,
              80,
              54,
              79,
              49,
              71,
              75,
              46,
              104,
              120,
              100,
              111,
              71,
              121,
              116,
              110,
              57,
              49,
              118,
              115,
              115,
              109,
              103,
              80,
              80,
              100,
              120,
              115,
              81,
              73,
              67,
              74,
              79,
              56,
              82,
              118,
              76,
              118,
              54,
              98,
              67,
              86,
              51,
              51,
              72,
              86,
              102,
              101,
              83,
              75,
              115,
              34,
              44,
              34,
              109,
              121,
              45,
              115,
              97,
              109,
              112,
              108,
              101,
              45,
              104,
              101,
              97,
              100,
              101,
              114,
              34,
              58,
              34,
              76,
              111,
              114,
              101,
              109,
              32,
              105,
              112,
              115,
              117,
              109,
              32,
              100,
              111,
              108,
              111,
              114,
              32,
              115,
              105,
              116,
              32,
              97,
              109,
              101,
              116,
              34,
              44,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              49,
              46,
              51,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              34,
              52,
              52,
              51,
              34,
              44,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 189,
          "responseSize": 327
        },
        "id": "1e7e59b8-2191-4a06-abb2-f35747f69e3a",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "sample request header should be returned in response body"
          }
        ]
      },
      {
        "cursor": {
          "ref": "c97f2143-bf45-407f-a6cd-d2ca2ccb27bf",
          "length": 37,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3335a3c1-fbad-430b-8563-1a913916f9c2"
        },
        "item": {
          "_": {},
          "id": "cb91e22a-f650-4f93-a7f2-b09a11c94bce",
          "name": "Response Headers",
          "request": {
            "description": {
              "content": "This endpoint causes the server to send custom set of response headers. Providing header values as part of the URL parameters of a `GET` request to this endpoint returns the same as part of response header.\n\nTo send your own set of headers, simply add or replace the the URL parameters with your own set.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "response-headers"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "foo1",
                  "value": "bar1"
                },
                {
                  "key": "foo2",
                  "value": "bar2"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "html",
                "postman_previewtype": "html"
              },
              "id": "b97bd117-ef92-424a-aa8f-274ba7d5a7ae",
              "name": "Response headers",
              "originalRequest": {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "response-headers"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "Content-Type",
                      "value": "text/html"
                    },
                    {
                      "key": "test",
                      "value": "response_headers"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "71"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "text/html; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 31 Mar 2016 11:14:18 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                },
                {
                  "name": "test",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "test",
                  "value": "response_headers"
                }
              ],
              "body": "{\"Content-Type\":\"text/html\",\"test\":\"response_headers\"}",
              "cookie": [
                {
                  "name": "sails.sid",
                  "expires": null,
                  "domain": "echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "hostOnly": true,
                  "session": true,
                  "value": "s%3A9stja5zKmIILxq9Jvtha7Lp9LIz1VIdK.Vp8MHC%2BEUJe4ICZPXn2JAoXaV2bTgtoQd%2B3XJLNr51Y"
                }
              ],
              "responseTime": "568"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "a7f6b4fd-64b7-473a-b12a-fc0a4141db2c",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has the headers sent as part of request query\", function () {",
                  "    pm.response.to.have.header('foo1', 'bar1')",
                  "        .and.have.header('foo2', 'bar2');",
                  "});",
                  "",
                  "pm.test(\"sample request param should be returned in response body\", function () {",
                  "    pm.response.to.have.jsonBody('foo1', 'bar1')",
                  "        .and.have.jsonBody('foo2', 'bar2');",
                  "});"
                ],
                "_lastExecutionId": "36b83503-d349-40a5-ae09-af5f62727451"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint causes the server to send custom set of response headers. Providing header values as part of the URL parameters of a `GET` request to this endpoint returns the same as part of response header.\n\nTo send your own set of headers, simply add or replace the the URL parameters with your own set.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "response-headers"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "foo1",
                "value": "bar1"
              },
              {
                "key": "foo2",
                "value": "bar2"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3AyH09BAKJv1WD4uorUdUg-W5oHrbv5GpW.WF0reb%2FrGLsYJHwUqlRey9DGPDgLJo0MnBKFcrJJpio"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "response": {
          "id": "59614daf-5537-454c-aa25-0476a4db269f",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:20 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"1d-klBQDzRJuMoKU1ZtFiUzIQ\""
            },
            {
              "key": "foo1",
              "value": "bar1"
            },
            {
              "key": "foo2",
              "value": "bar2"
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3A0057CGmnRf2nCzEeLaLGBhy0GqRrZDWk.Yz5EjwE%2FN7hmvdFF%2BJcz3pEKmYcDt9jVupc2w69iVCc; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "42"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              102,
              111,
              111,
              49,
              34,
              58,
              34,
              98,
              97,
              114,
              49,
              34,
              44,
              34,
              102,
              111,
              111,
              50,
              34,
              58,
              34,
              98,
              97,
              114,
              50,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 246,
          "responseSize": 29
        },
        "id": "cb91e22a-f650-4f93-a7f2-b09a11c94bce",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "response has the headers sent as part of request query"
          },
          {
            "assertion": "sample request param should be returned in response body"
          }
        ]
      },
      {
        "cursor": {
          "ref": "af6a99cd-51d2-4e03-9251-f61555a80e5e",
          "length": 37,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c8029a36-70fe-4b9f-accd-539e4826852f"
        },
        "item": {
          "_": {},
          "id": "fc566bc6-e11e-4b69-98e5-1c72431413b8",
          "name": "Basic Auth",
          "request": {
            "description": {
              "content": "This endpoint simulates a **basic-auth** protected endpoint. \nThe endpoint accepts a default username and password and returns a status code of `200 ok` only if the same is provided. \nOtherwise it will return a status code `401 unauthorized`.\n\n> Username: `postman`\n> \n> Password: `password`\n\nTo use this endpoint, send a request with the header `Authorization: Basic cG9zdG1hbjpwYXNzd29yZA==`. \nThe cryptic latter half of the header value is a base64 encoded concatenation of the default username and password. \nUsing Postman, to send this request, you can simply fill in the username and password in the \"Authorization\" tab and Postman will do the rest for you.\n\nTo know more about basic authentication, refer to the [Basic Access Authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) wikipedia article.\nThe article on [authentication helpers](https://www.getpostman.com/docs/helpers#basic-auth?source=echo-collection-app-onboarding) elaborates how to use the same within the Postman app.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "basic-auth"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "auth": {
              "type": "basic",
              "basic": [
                {
                  "type": "string",
                  "value": "postman",
                  "key": "username"
                },
                {
                  "type": "string",
                  "value": "password",
                  "key": "password"
                },
                {
                  "type": "any",
                  "key": "saveHelperData"
                },
                {
                  "type": "boolean",
                  "value": false,
                  "key": "showPassword"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript",
                "postman_previewtype": "html"
              },
              "id": "4fea3264-de59-442e-b1db-966938ff18d6",
              "name": "200",
              "originalRequest": {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "url": {
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "42"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Sat, 31 Oct 2015 06:38:25 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                }
              ],
              "body": "{\"authenticated\":true}",
              "cookie": [],
              "responseTime": "377"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "24d697f8-659f-491b-acce-23b73d443933",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json saying 'authenticated'\", function () {",
                  "    pm.response.to.have.jsonBody('authenticated', true);",
                  "});"
                ],
                "_lastExecutionId": "d8a48fe0-3b39-4c69-b98b-704b7005292f"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint simulates a **basic-auth** protected endpoint. \nThe endpoint accepts a default username and password and returns a status code of `200 ok` only if the same is provided. \nOtherwise it will return a status code `401 unauthorized`.\n\n> Username: `postman`\n> \n> Password: `password`\n\nTo use this endpoint, send a request with the header `Authorization: Basic cG9zdG1hbjpwYXNzd29yZA==`. \nThe cryptic latter half of the header value is a base64 encoded concatenation of the default username and password. \nUsing Postman, to send this request, you can simply fill in the username and password in the \"Authorization\" tab and Postman will do the rest for you.\n\nTo know more about basic authentication, refer to the [Basic Access Authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) wikipedia article.\nThe article on [authentication helpers](https://www.getpostman.com/docs/helpers#basic-auth?source=echo-collection-app-onboarding) elaborates how to use the same within the Postman app.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "basic-auth"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Basic cG9zdG1hbjpwYXNzd29yZA==",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3A0057CGmnRf2nCzEeLaLGBhy0GqRrZDWk.Yz5EjwE%2FN7hmvdFF%2BJcz3pEKmYcDt9jVupc2w69iVCc"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          },
          "auth": {
            "type": "basic",
            "basic": [
              {
                "type": "string",
                "value": "postman",
                "key": "username"
              },
              {
                "type": "string",
                "value": "password",
                "key": "password"
              },
              {
                "type": "any",
                "key": "saveHelperData"
              },
              {
                "type": "boolean",
                "value": false,
                "key": "showPassword"
              }
            ]
          }
        },
        "response": {
          "id": "925d1f9b-1008-4e12-9dcd-d974d992f257",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:20 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"16-KaMyucVpMb6LZlxxx2Fk+A\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AmKwmFioST3I8yDpEwJ_7STwdAt8kGQui.FNgLyzWJiowiylZd1KOMMBz%2F1zhWMAwKdG89W4FoD7s; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "42"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              101,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 189,
          "responseSize": 22
        },
        "id": "fc566bc6-e11e-4b69-98e5-1c72431413b8",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "response body has json saying 'authenticated'"
          }
        ]
      },
      {
        "cursor": {
          "ref": "e1af7d71-d073-4875-97d7-da4a03b7b76f",
          "length": 37,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "36373edf-7bf8-484d-ac61-26010807e5b6"
        },
        "item": {
          "_": {},
          "id": "384f5582-e681-4e35-9963-3a68742db11d",
          "name": "DigestAuth Success",
          "request": {
            "description": {
              "content": "This endpoint sends a hashed Digest Authorization header to gain access to a valid `200 Ok` response code. In Postman, it uses the stored [global variables](https://www.getpostman.com/docs/environments#gloval-variables?source=echo-collection-app-onboarding), `echo_digest_realm` and `echo_digest_nonce`, to generate the hashed authorisation header.\n\nWithin Postman, for this request to successfully authenticate, running the previous request \"DigestAuth Request\" stores the relevant information within the global variables.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "digest-auth"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "header": [
              {
                "key": "Authorization",
                "value": "Digest username=\"postman\", realm=\"Users\", nonce=\"ni1LiL0O37PRRhofWdCLmwFsnEtH1lew\", uri=\"/digest-auth\", response=\"254679099562cf07df9b6f5d8d15db44\", opaque=\"\""
              }
            ],
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            },
            "auth": {
              "type": "digest",
              "digest": [
                {
                  "type": "string",
                  "value": "MD5",
                  "key": "algorithm"
                },
                {
                  "type": "string",
                  "value": "postman",
                  "key": "username"
                },
                {
                  "type": "string",
                  "value": "{{echo_digest_realm}}",
                  "key": "realm"
                },
                {
                  "type": "string",
                  "value": "password",
                  "key": "password"
                },
                {
                  "type": "string",
                  "value": "{{echo_digest_nonce}}",
                  "key": "nonce"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "nonceCount"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "clientNonce"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "opaque"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "qop"
                },
                {
                  "type": "any",
                  "key": "disableRetryRequest"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript",
                "postman_previewtype": "html"
              },
              "id": "a0ad657e-231a-478d-a4b4-0d8eaa114ea5",
              "name": "200",
              "originalRequest": {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "url": {
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "42"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 29 Oct 2015 06:17:51 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                }
              ],
              "body": "{\"authenticated\":true}",
              "cookie": [],
              "responseTime": "9843"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "22c50cc6-ed53-4ea0-811c-ae5839b81491",
                "type": "text/javascript",
                "exec": [
                  "tests[\"response code is 200\"] = responseCode.code === 200;",
                  "tests[\"body contains authenticated\"] = responseBody.has(\"authenticated\");"
                ],
                "_lastExecutionId": "7e05dbee-93b8-4809-9a1a-88c07ea0b505"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint sends a hashed Digest Authorization header to gain access to a valid `200 Ok` response code. In Postman, it uses the stored [global variables](https://www.getpostman.com/docs/environments#gloval-variables?source=echo-collection-app-onboarding), `echo_digest_realm` and `echo_digest_nonce`, to generate the hashed authorisation header.\n\nWithin Postman, for this request to successfully authenticate, running the previous request \"DigestAuth Request\" stores the relevant information within the global variables.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "digest-auth"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Digest username=\"postman\", realm=\"{{echo_digest_realm}}\", nonce=\"{{echo_digest_nonce}}\", uri=\"/digest-auth\", algorithm=\"MD5\", response=\"c70c5ea59136d041c00e30ebc2e37133\"",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3AmKwmFioST3I8yDpEwJ_7STwdAt8kGQui.FNgLyzWJiowiylZd1KOMMBz%2F1zhWMAwKdG89W4FoD7s"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          },
          "auth": {
            "type": "digest",
            "digest": [
              {
                "type": "string",
                "value": "MD5",
                "key": "algorithm"
              },
              {
                "type": "string",
                "value": "postman",
                "key": "username"
              },
              {
                "type": "string",
                "value": "{{echo_digest_realm}}",
                "key": "realm"
              },
              {
                "type": "string",
                "value": "password",
                "key": "password"
              },
              {
                "type": "string",
                "value": "{{echo_digest_nonce}}",
                "key": "nonce"
              },
              {
                "type": "string",
                "value": "",
                "key": "nonceCount"
              },
              {
                "type": "string",
                "value": "",
                "key": "clientNonce"
              },
              {
                "type": "string",
                "value": "",
                "key": "opaque"
              },
              {
                "type": "string",
                "value": "",
                "key": "qop"
              },
              {
                "type": "any",
                "key": "disableRetryRequest"
              }
            ]
          }
        },
        "response": {
          "id": "d217662e-1540-45d7-a3dd-d44c58d54a78",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:20 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"16-KaMyucVpMb6LZlxxx2Fk+A\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AYdX_4vUS7YEx2vxUGe5q2MJEmuz3mymj.tFh1aWt4B0%2B7J7f8TOfQwyMbnPVf9RqKlxxAQMME5rY; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "42"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              101,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 189,
          "responseSize": 22
        },
        "id": "384f5582-e681-4e35-9963-3a68742db11d",
        "assertions": [
          {
            "assertion": "response code is 200"
          },
          {
            "assertion": "body contains authenticated"
          }
        ]
      },
      {
        "cursor": {
          "ref": "05f55531-c7c0-420f-8e2c-edd2a2145cce",
          "length": 37,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6d91527b-a3cf-4fd2-8c42-e6c410a05001"
        },
        "item": {
          "_": {},
          "id": "3a9a1674-1574-4a72-914c-e4c137940dac",
          "name": "Hawk Auth",
          "request": {
            "description": {
              "content": "This endpoint is a Hawk Authentication protected endpoint. [Hawk authentication](https://github.com/hueniverse/hawk) is a widely used protocol for protecting API endpoints. One of Hawk's main goals is to enable HTTP authentication for services that do not use TLS (although it can be used in conjunction with TLS as well).\n\nIn order to use this endpoint, select the \"Hawk Auth\" helper inside Postman, and set the following values:\n\nHawk Auth ID: `dh37fgj492je`\n\nHawk Auth Key: `werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn`\n\nAlgorithm: `sha256`\n\nThe rest of the values are optional, and can be left blank. Hitting send should give you a response with a status code of 200 OK.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "auth",
                "hawk"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "access_token",
                  "value": "xyz1",
                  "type": "text"
                },
                {
                  "key": "id",
                  "value": "U1",
                  "type": "text"
                },
                {
                  "key": "server_secret",
                  "value": "zeppelin",
                  "type": "text"
                },
                {
                  "key": "admin",
                  "value": "true",
                  "type": "text"
                }
              ]
            },
            "auth": {
              "type": "hawk",
              "hawk": [
                {
                  "type": "string",
                  "value": "dh37fgj492je",
                  "key": "authId"
                },
                {
                  "type": "string",
                  "value": "werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn",
                  "key": "authKey"
                },
                {
                  "type": "string",
                  "value": "sha256",
                  "key": "algorithm"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "user"
                },
                {
                  "type": "any",
                  "key": "saveHelperData"
                },
                {
                  "type": "string",
                  "value": "RZKGNz",
                  "key": "nonce"
                },
                {
                  "type": "any",
                  "key": "extraData"
                },
                {
                  "type": "any",
                  "key": "appId"
                },
                {
                  "type": "any",
                  "key": "delegation"
                },
                {
                  "type": "string",
                  "value": "1522505600",
                  "key": "timestamp",
                  "system": true
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript",
                "postman_previewtype": "html"
              },
              "id": "b0eb7710-1fdc-4565-ac68-65e1f57d5437",
              "name": "Success",
              "originalRequest": {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth",
                    "hawk"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Authorization",
                    "key": "Authorization",
                    "value": "Hawk id=\"dh37fgj492je\", ts=\"1459422734\", nonce=\"XiwiCU\", mac=\"KzMHk67BYCC9zZqRy5hRdWFEFLHX5bNlRWGdmOAWKp0=\""
                  }
                ],
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "access_token",
                      "value": "xyz1",
                      "type": "text"
                    },
                    {
                      "key": "id",
                      "value": "U1",
                      "type": "text"
                    },
                    {
                      "key": "server_secret",
                      "value": "zeppelin",
                      "type": "text"
                    },
                    {
                      "key": "admin",
                      "value": "true",
                      "type": "text"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 31 Mar 2016 11:12:16 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Server-Authorization",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server-Authorization",
                  "value": "Hawk mac=\"vRrUzDdcHu2NaNts/r4zg2xmXMdX8wPiTGTM398BDRg=\", hash=\"qmtflETMybaZiOQ2dLT17yiRunFT5OCIxZRZ0boQaiE=\""
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                },
                {
                  "name": "transfer-encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "transfer-encoding",
                  "value": "chunked"
                }
              ],
              "body": "{\"status\":\"pass\",\"message\":\"Hawk Authentication successful\"}",
              "cookie": [
                {
                  "name": "getpostmanlogin",
                  "expires": null,
                  "domain": ".getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": false,
                  "hostOnly": false,
                  "session": false,
                  "value": "yes"
                },
                {
                  "name": "postman.sid",
                  "expires": null,
                  "domain": ".getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": false,
                  "hostOnly": false,
                  "session": false,
                  "value": "9f887f3b7f14b8c29ac4dc4109381b0b89a76e785c7b34251d6c8025b41b24013d2aa49f40e2deac19cbf0594dd984169455534d91ff98d4d1868d67ac857017629f137926e3a04a616bb83a2fb5ab9e6cbea9579ed5d5c1155d47545d72aad5be99f4abd0a7130805b3807d70cd507171dbe9d950d8e35a853f9ec075f5a767c95df4d57f7d521b66605b3bda3801700e26e651d1129c798b729ee3b91702d43ae64ab226c3f426893753def772c15442a7552dc84a3c773d6099a50b0a6af940b64c8176fedfcecd5fc31ccfc3bbc0124bfdaa0d62e4252d4aafb46a3c10963d12391e1fa97a1c0f19a636f57a3ac8cc35567d1cb6cb53b77f8adde3f6754a765596d7d00bdeb9acb5cc8d115e7c3f50ec3228e34d3e6c7464e9039b01868e03d10e9f87772397602453e9e91205de7b86021fad06eb26e69298e99ff1597a670faeb310f8c092041d544851de84f2bee89a92123da6eea286210524035c85361e2af42166a6"
                },
                {
                  "name": "sails.sid",
                  "expires": null,
                  "domain": "echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "hostOnly": true,
                  "session": true,
                  "value": "s%3AryJV7v-PE4PuTjBK6nH5XOynQ4atuATV.n17KcaLhVmV8TBHNLwdwXgGR7lmqs3i478WPlTbRgZ4"
                }
              ],
              "responseTime": "1855"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b556a26e-ac34-4995-a65f-ca20a7db850e",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json saying passed 'status'\", function () {",
                  "    pm.response.to.have.jsonBody('status', 'pass');",
                  "});"
                ],
                "_lastExecutionId": "1729e7ee-9080-4e4d-a208-8d1d23df9231"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint is a Hawk Authentication protected endpoint. [Hawk authentication](https://github.com/hueniverse/hawk) is a widely used protocol for protecting API endpoints. One of Hawk's main goals is to enable HTTP authentication for services that do not use TLS (although it can be used in conjunction with TLS as well).\n\nIn order to use this endpoint, select the \"Hawk Auth\" helper inside Postman, and set the following values:\n\nHawk Auth ID: `dh37fgj492je`\n\nHawk Auth Key: `werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn`\n\nAlgorithm: `sha256`\n\nThe rest of the values are optional, and can be left blank. Hitting send should give you a response with a status code of 200 OK.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "auth",
              "hawk"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "Hawk id=\"dh37fgj492je\", ts=\"1522505600\", nonce=\"RZKGNz\", mac=\"NdFYuu+5gxDdovRGRjibLx9KgUhr3ZVUW/VEv3QzlJo=\"",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3AYdX_4vUS7YEx2vxUGe5q2MJEmuz3mymj.tFh1aWt4B0%2B7J7f8TOfQwyMbnPVf9RqKlxxAQMME5rY"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "method": "GET",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "key": "access_token",
                "value": "xyz1",
                "type": "text"
              },
              {
                "key": "id",
                "value": "U1",
                "type": "text"
              },
              {
                "key": "server_secret",
                "value": "zeppelin",
                "type": "text"
              },
              {
                "key": "admin",
                "value": "true",
                "type": "text"
              }
            ]
          },
          "auth": {
            "type": "hawk",
            "hawk": [
              {
                "type": "string",
                "value": "dh37fgj492je",
                "key": "authId"
              },
              {
                "type": "string",
                "value": "werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn",
                "key": "authKey"
              },
              {
                "type": "string",
                "value": "sha256",
                "key": "algorithm"
              },
              {
                "type": "string",
                "value": "",
                "key": "user"
              },
              {
                "type": "any",
                "key": "saveHelperData"
              },
              {
                "type": "string",
                "value": "RZKGNz",
                "key": "nonce"
              },
              {
                "type": "any",
                "key": "extraData"
              },
              {
                "type": "any",
                "key": "appId"
              },
              {
                "type": "any",
                "key": "delegation"
              },
              {
                "type": "string",
                "value": "1522505600",
                "key": "timestamp",
                "system": true
              }
            ]
          }
        },
        "response": {
          "id": "ffb54b0b-8b0f-4a9a-8466-08e9a4df7076",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:21 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"2c-KNskfNOekR62YGaFtMnZMw\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AeoGTYZ2DnEIBQ_sCehuNMCEMzCbRVNMk.m6LppnoNfcoXv4qnPGTF7ysVkTEdh4k66wt8x55S5Ew; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "63"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              72,
              97,
              119,
              107,
              32,
              65,
              117,
              116,
              104,
              101,
              110,
              116,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              83,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 190,
          "responseSize": 44
        },
        "id": "3a9a1674-1574-4a72-914c-e4c137940dac",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "response body has json saying passed 'status'",
            "error": {
              "name": "AssertionError",
              "index": 1,
              "message": "expected { Object (message) } in response to contain property 'status'",
              "stack": "AssertionError: expected { Object (message) } in response to contain property 'status'\n   at Object.eval sandbox-script.js:2:11)"
            }
          }
        ]
      },
      {
        "cursor": {
          "ref": "85af9e1b-2cad-47b2-a3ad-7374cd9da6ac",
          "length": 37,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "95b93635-47d5-471f-ac1a-8f483c07a48e"
        },
        "item": {
          "_": {},
          "id": "8baf8505-3767-4ee3-94a2-cee70cb981bc",
          "name": "OAuth1.0 (verify signature)",
          "request": {
            "description": {
              "content": "OAuth1.0a is a specification that defines a protocol that can be used by one\nservice to access \"protected\" resources (endpoints) on another service. A\nmajor part of OAuth1.0 is HTTP Request Signing. This endpoint allows you to \ncheck whether the request calculation works properly in the client. \n\nThe endpoint supports the HTTP ``Authorization`` header. In case the signature\nverification fails, the endpoint provides the four debug values,\n\n* ``base_uri``\n* ``normalized_param_string``\n* ``base_string``\n* ``signing_key``\n\nFor more details about these parameters, check the [OAuth1.0a Specification](http://oauth.net/core/1.0a/)\n\nIn order to use this endpoint, you can set the following values:\n\n> Consumer Key: ``RKCGzna7bv9YD57c``\n>\n> Consumer Secret: ``D+EdQ-gs$-%@2Nu7``\n\nIf you are using Postman, also check the \"Add params to header\" and \n\"Auto add parameters\" boxes.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "oauth1"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "code",
                  "value": "xWnkliVQJURqB2x1",
                  "type": "text"
                },
                {
                  "key": "grant_type",
                  "value": "authorization_code",
                  "type": "text"
                },
                {
                  "key": "redirect_uri",
                  "value": "https://www.getpostman.com/oauth2/callback",
                  "type": "text"
                },
                {
                  "key": "client_id",
                  "value": "abc123",
                  "type": "text"
                },
                {
                  "key": "client_secret",
                  "value": "ssh-secret",
                  "type": "text"
                }
              ]
            },
            "auth": {
              "type": "oauth1",
              "oauth1": [
                {
                  "type": "string",
                  "value": "RKCGzna7bv9YD57c",
                  "key": "consumerKey"
                },
                {
                  "type": "string",
                  "value": "D+EdQ-gs$-%@2Nu7",
                  "key": "consumerSecret"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "token"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "tokenSecret"
                },
                {
                  "type": "string",
                  "value": "HMAC-SHA1",
                  "key": "signatureMethod"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "timestamp"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "nonce"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "version"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "realm"
                },
                {
                  "type": "boolean",
                  "value": true,
                  "key": "addParamsToHeader"
                },
                {
                  "type": "any",
                  "key": "autoAddParam"
                },
                {
                  "type": "boolean",
                  "value": false,
                  "key": "addEmptyParamsToSign"
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript",
                "postman_previewtype": "html"
              },
              "id": "b2b6f08a-beb7-4f7d-978b-2ca809008591",
              "name": "200",
              "originalRequest": {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "oauth1"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Authorization",
                    "key": "Authorization",
                    "value": "OAuth oauth_consumer_key=\"RKCGzna7bv9YD57c\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1472121261\",oauth_nonce=\"ki0RQW\",oauth_version=\"1.0\",oauth_signature=\"s0rK92Myxx7ceUBVzlMaxiiXU00%3D\""
                  }
                ],
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "code",
                      "value": "xWnkliVQJURqB2x1",
                      "type": "text"
                    },
                    {
                      "key": "grant_type",
                      "value": "authorization_code",
                      "type": "text"
                    },
                    {
                      "key": "redirect_uri",
                      "value": "https://www.getpostman.com/oauth2/callback",
                      "type": "text"
                    },
                    {
                      "key": "client_id",
                      "value": "abc123",
                      "type": "text"
                    },
                    {
                      "key": "client_secret",
                      "value": "ssh-secret",
                      "type": "text"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Access-Control-Expose-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Expose-Headers",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "95"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 25 Aug 2016 10:34:23 GMT"
                },
                {
                  "name": "ETag",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "ETag",
                  "value": "W/\"4e-Cq3UhvpVSyl6R6204lPVIA\""
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.8.1"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                }
              ],
              "body": "{\"status\":\"pass\",\"message\":\"OAuth-1.0a signature verification was successful\"}",
              "cookie": [],
              "responseTime": "2057"
            },
            {
              "_": {
                "postman_previewlanguage": "javascript",
                "postman_previewtype": "html"
              },
              "id": "57815c2b-4d00-4a7f-aff0-7037a162774a",
              "name": "401",
              "originalRequest": {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "oauth1"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Authorization",
                    "key": "Authorization",
                    "value": "OAuth oauth_consumer_key=\"RKCGzna7bv9YD57c_wrong\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1472121295\",oauth_nonce=\"8LTsU2\",oauth_version=\"1.0\",oauth_signature=\"tSUexpY%2B7EhSY7cFXiFN5EMx2zw%3D\""
                  }
                ],
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "code",
                      "value": "xWnkliVQJURqB2x1",
                      "type": "text"
                    },
                    {
                      "key": "grant_type",
                      "value": "authorization_code",
                      "type": "text"
                    },
                    {
                      "key": "redirect_uri",
                      "value": "https://www.getpostman.com/oauth2/callback",
                      "type": "text"
                    },
                    {
                      "key": "client_id",
                      "value": "abc123",
                      "type": "text"
                    },
                    {
                      "key": "client_secret",
                      "value": "ssh-secret",
                      "type": "text"
                    }
                  ]
                }
              },
              "status": "Unauthorized",
              "code": 401,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Access-Control-Expose-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Expose-Headers",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "536"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 25 Aug 2016 10:34:55 GMT"
                },
                {
                  "name": "ETag",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "ETag",
                  "value": "W/\"218-SGnurnTsu5qV5cCYWxsJlg\""
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.8.1"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                }
              ],
              "body": "{\"status\":\"fail\",\"message\":\"HMAC-SHA1 verification failed\",\"base_uri\":\"https://echo.getpostman.com/oauth1\",\"normalized_param_string\":\"oauth_consumer_key=RKCGzna7bv9YD57c_wrong&oauth_nonce=8LTsU2&oauth_signature_method=HMAC-SHA1&oauth_timestamp=1472121295&oauth_version=1.0\",\"base_string\":\"GET&https%3A%2F%2Fecho.getpostman.com%2Foauth1&oauth_consumer_key%3DRKCGzna7bv9YD57c_wrong%26oauth_nonce%3D8LTsU2%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1472121295%26oauth_version%3D1.0\",\"signing_key\":\"D%2BEdQ-gs%24-%25%402Nu7&\"}",
              "cookie": [],
              "responseTime": "322"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "9c51ca8f-8d56-480e-a3aa-7de1f06f9f82",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json saying passed 'status'\", function () {",
                  "    pm.response.to.have.jsonBody('status', 'pass');",
                  "});"
                ],
                "_lastExecutionId": "69cd2ab1-d920-4b04-8d86-a455d11cafd3"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "OAuth1.0a is a specification that defines a protocol that can be used by one\nservice to access \"protected\" resources (endpoints) on another service. A\nmajor part of OAuth1.0 is HTTP Request Signing. This endpoint allows you to \ncheck whether the request calculation works properly in the client. \n\nThe endpoint supports the HTTP ``Authorization`` header. In case the signature\nverification fails, the endpoint provides the four debug values,\n\n* ``base_uri``\n* ``normalized_param_string``\n* ``base_string``\n* ``signing_key``\n\nFor more details about these parameters, check the [OAuth1.0a Specification](http://oauth.net/core/1.0a/)\n\nIn order to use this endpoint, you can set the following values:\n\n> Consumer Key: ``RKCGzna7bv9YD57c``\n>\n> Consumer Secret: ``D+EdQ-gs$-%@2Nu7``\n\nIf you are using Postman, also check the \"Add params to header\" and \n\"Auto add parameters\" boxes.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "oauth1"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "Authorization",
              "value": "OAuth oauth_consumer_key=\"RKCGzna7bv9YD57c\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1522505601\",oauth_nonce=\"vRTUa9sPETu\",oauth_signature=\"uGkBpPpwCDG5%2BDXHNUyR%2FLF4RCA%3D\"",
              "system": true
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3AeoGTYZ2DnEIBQ_sCehuNMCEMzCbRVNMk.m6LppnoNfcoXv4qnPGTF7ysVkTEdh4k66wt8x55S5Ew"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "method": "GET",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "key": "code",
                "value": "xWnkliVQJURqB2x1",
                "type": "text"
              },
              {
                "key": "grant_type",
                "value": "authorization_code",
                "type": "text"
              },
              {
                "key": "redirect_uri",
                "value": "https://www.getpostman.com/oauth2/callback",
                "type": "text"
              },
              {
                "key": "client_id",
                "value": "abc123",
                "type": "text"
              },
              {
                "key": "client_secret",
                "value": "ssh-secret",
                "type": "text"
              }
            ]
          },
          "auth": {
            "type": "oauth1",
            "oauth1": [
              {
                "type": "string",
                "value": "RKCGzna7bv9YD57c",
                "key": "consumerKey"
              },
              {
                "type": "string",
                "value": "D+EdQ-gs$-%@2Nu7",
                "key": "consumerSecret"
              },
              {
                "type": "string",
                "value": "",
                "key": "token"
              },
              {
                "type": "string",
                "value": "",
                "key": "tokenSecret"
              },
              {
                "type": "string",
                "value": "HMAC-SHA1",
                "key": "signatureMethod"
              },
              {
                "type": "string",
                "value": "",
                "key": "timestamp"
              },
              {
                "type": "string",
                "value": "",
                "key": "nonce"
              },
              {
                "type": "string",
                "value": "",
                "key": "version"
              },
              {
                "type": "string",
                "value": "",
                "key": "realm"
              },
              {
                "type": "boolean",
                "value": true,
                "key": "addParamsToHeader"
              },
              {
                "type": "any",
                "key": "autoAddParam"
              },
              {
                "type": "boolean",
                "value": false,
                "key": "addEmptyParamsToSign"
              }
            ]
          }
        },
        "response": {
          "id": "1ec6021c-1a36-4621-9f7b-4321ab7491d0",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:21 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"4e-Cq3UhvpVSyl6R6204lPVIA\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "95"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              34,
              112,
              97,
              115,
              115,
              34,
              44,
              34,
              109,
              101,
              115,
              115,
              97,
              103,
              101,
              34,
              58,
              34,
              79,
              65,
              117,
              116,
              104,
              45,
              49,
              46,
              48,
              97,
              32,
              115,
              105,
              103,
              110,
              97,
              116,
              117,
              114,
              101,
              32,
              118,
              101,
              114,
              105,
              102,
              105,
              99,
              97,
              116,
              105,
              111,
              110,
              32,
              119,
              97,
              115,
              32,
              115,
              117,
              99,
              99,
              101,
              115,
              115,
              102,
              117,
              108,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 282,
          "responseSize": 78
        },
        "id": "8baf8505-3767-4ee3-94a2-cee70cb981bc",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "response body has json saying passed 'status'"
          }
        ]
      },
      {
        "cursor": {
          "ref": "ed63f933-dd49-40d5-8c7f-c0ada6e23bdc",
          "length": 37,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "3f5e30d6-82c1-4e9a-89f0-2f1e445184c9"
        },
        "item": {
          "_": {},
          "id": "ff9784cf-b2d2-4c14-b656-61d7eb800c71",
          "name": "Set Cookies",
          "request": {
            "description": {
              "content": "The cookie setter endpoint accepts a list of cookies and their values as part of URL parameters of a `GET` request. These cookies are saved and can be subsequently retrieved or deleted. The response of this request returns a JSON with all cookies listed.\n\nTo set your own set of cookies, simply replace the URL parameters \"foo1=bar1&foo2=bar2\" with your own set of key-value pairs.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "cookies",
                "set"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "foo1",
                  "value": "bar1"
                },
                {
                  "key": "foo2",
                  "value": "bar2"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript",
                "postman_previewtype": "html"
              },
              "id": "a20b1e05-2ea7-4cf7-aee5-9ac552a4b966",
              "name": "Cookies",
              "originalRequest": {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "url": {
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "51"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 29 Oct 2015 06:15:28 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                }
              ],
              "body": "{\"cookies\":{\"foo1\":\"bar\",\"foo2\":\"bar\"}}",
              "cookie": [],
              "responseTime": "3063"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "c6b37a9d-4890-4e91-8082-99974dca633b",
                "type": "text/javascript",
                "exec": [
                  "pm.test('response should be 200 or 302', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 302]);",
                  "});",
                  "",
                  "pm.test('the \"foo1\" cookie has correct value', function () {",
                  "    pm.expect(pm.cookies.toObject()).to.have.property('foo1', 'bar1');",
                  "});",
                  "",
                  "pm.test('the \"foo2\" cookie has correct value', function () {",
                  "    pm.expect(pm.cookies.toObject()).to.have.property('foo2', 'bar2');",
                  "});",
                  "",
                  "// response code could be either a 200 or a redirection based on the settings of ",
                  "// the http client. hence we need to handle both cases",
                  "pm.test('response body should be valid', function () {",
                  "    if (pm.response.code === 200) {",
                  "        pm.response.to.have.jsonBody('cookies.foo1', 'bar1')",
                  "            .and.have.jsonBody('cookies.foo2', 'bar2');",
                  "    }",
                  "    else {",
                  "        pm.response.to.have.body('Found. Redirecting to /cookies');",
                  "    }",
                  "});"
                ],
                "_lastExecutionId": "b3779d4e-81fe-4fe5-8b75-3e81b1c87325"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "The cookie setter endpoint accepts a list of cookies and their values as part of URL parameters of a `GET` request. These cookies are saved and can be subsequently retrieved or deleted. The response of this request returns a JSON with all cookies listed.\n\nTo set your own set of cookies, simply replace the URL parameters \"foo1=bar1&foo2=bar2\" with your own set of key-value pairs.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "cookies",
              "set"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "foo1",
                "value": "bar1"
              },
              {
                "key": "foo2",
                "value": "bar2"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3AMHYphqQUB4EK79GHHYm3FdN-LDcNCgD6.eD35tIkZo2x8nx8jYvF3QjaaMujxpBVGkt9epcOcdzo; foo1=bar1; foo2=bar2"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            },
            {
              "key": "referer",
              "value": "https://postman-echo.com/cookies/set?foo1=bar1&foo2=bar2"
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "response": {
          "id": "89013c3e-07cf-4398-939b-584b2c7feef1",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:21 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"29-Srl/lFmnisvD2AeeNQX5Bg\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AVlygwQ5d3RHjCnfTtt2_p_mSt2Vx_552.uNp0MG0%2B5lFOqy35A%2BEbeWCpkk0SAib7HGUAheDhNPs; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "54"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              102,
              111,
              111,
              49,
              34,
              58,
              34,
              98,
              97,
              114,
              49,
              34,
              44,
              34,
              102,
              111,
              111,
              50,
              34,
              58,
              34,
              98,
              97,
              114,
              50,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 385,
          "responseSize": 41
        },
        "id": "ff9784cf-b2d2-4c14-b656-61d7eb800c71",
        "assertions": [
          {
            "assertion": "response should be 200 or 302"
          },
          {
            "assertion": "the \"foo1\" cookie has correct value"
          },
          {
            "assertion": "the \"foo2\" cookie has correct value"
          },
          {
            "assertion": "response body should be valid"
          }
        ]
      },
      {
        "cursor": {
          "ref": "79e4164e-926d-4115-b0fc-e996cf2eb6d8",
          "length": 37,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "e6137ed1-f400-4355-b892-7170c57b10f7"
        },
        "item": {
          "_": {},
          "id": "4ac3a32f-490e-43e8-bd32-83d41438fbf0",
          "name": "Get Cookies",
          "request": {
            "description": {
              "content": "Use this endpoint to get a list of all cookies that are stored with respect to this domain. Whatever key-value pairs that has been previously set by calling the \"Set Cookies\" endpoint, will be returned as response JSON.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "cookies"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript",
                "postman_previewtype": "html"
              },
              "id": "96de4ea9-b6f4-4e83-bc68-1e22d382fcfa",
              "name": "Cookies",
              "originalRequest": {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "url": {
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "46"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 29 Oct 2015 06:16:29 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                }
              ],
              "body": "{\"cookies\":{\"foo2\":\"bar\"}}",
              "cookie": [],
              "responseTime": "462"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "8d0f3eb7-14c3-48c4-b721-0ca655d394c1",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('the \"foo1\" cookie has correct value', function () {",
                  "    pm.expect(pm.cookies.toObject()).to.have.property('foo1', 'bar1');",
                  "});",
                  "",
                  "pm.test('the \"foo2\" cookie has correct value', function () {",
                  "    pm.expect(pm.cookies.toObject()).to.have.property('foo2', 'bar2');",
                  "});",
                  "",
                  "pm.test('response body should be valid', function () {",
                  "    pm.response.to.have.jsonBody('cookies.foo1', 'bar1');",
                  "    pm.response.to.have.jsonBody('cookies.foo2', 'bar2');",
                  "});"
                ],
                "_lastExecutionId": "8d2e115b-971e-4f6f-8403-3c0ca6a97f34"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "Use this endpoint to get a list of all cookies that are stored with respect to this domain. Whatever key-value pairs that has been previously set by calling the \"Set Cookies\" endpoint, will be returned as response JSON.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "cookies"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3AVlygwQ5d3RHjCnfTtt2_p_mSt2Vx_552.uNp0MG0%2B5lFOqy35A%2BEbeWCpkk0SAib7HGUAheDhNPs; foo1=bar1; foo2=bar2"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "response": {
          "id": "c98bd207-8671-471a-a916-02fd3c4a9498",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:22 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"29-Srl/lFmnisvD2AeeNQX5Bg\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AQATOtMSgtWcI7GWqp8Gg7TtjNQribJSP.ych0eA1TE9rgCZZG%2FzFUNdZQKgNY5A7zN0fy5QrWgmo; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "54"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              115,
              34,
              58,
              123,
              34,
              102,
              111,
              111,
              49,
              34,
              58,
              34,
              98,
              97,
              114,
              49,
              34,
              44,
              34,
              102,
              111,
              111,
              50,
              34,
              58,
              34,
              98,
              97,
              114,
              50,
              34,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 196,
          "responseSize": 41
        },
        "id": "4ac3a32f-490e-43e8-bd32-83d41438fbf0",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "the \"foo1\" cookie has correct value"
          },
          {
            "assertion": "the \"foo2\" cookie has correct value"
          },
          {
            "assertion": "response body should be valid"
          }
        ]
      },
      {
        "cursor": {
          "ref": "1e4fb450-250e-4deb-b07c-c9c28dbdbeb1",
          "length": 37,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "7378fcd0-7632-4aaa-90bd-ec438f28f96f"
        },
        "item": {
          "_": {},
          "id": "5e399d49-f6e6-422a-b63a-e35499f93f62",
          "name": "Delete Cookies",
          "request": {
            "description": {
              "content": "One or more cookies that has been set for this domain can be deleted by providing the cookie names as part of the URL parameter. The response of this request is a JSON containing the list of currently set cookies.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "cookies",
                "delete"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "foo1",
                  "value": ""
                },
                {
                  "key": "foo2",
                  "value": ""
                }
              ],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript",
                "postman_previewtype": "html"
              },
              "id": "c6070d15-1428-4057-9262-2de0d779eb5e",
              "name": "Cookies Response",
              "originalRequest": {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "url": {
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "46"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 29 Oct 2015 06:16:00 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                }
              ],
              "body": "{\"cookies\":{\"foo2\":\"bar\"}}",
              "cookie": [],
              "responseTime": "1417"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ebcbc96b-619b-47ef-a2f3-a4b26781fcba",
                "type": "text/javascript",
                "exec": [
                  "pm.test('response should be 200 or 302', function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 302]);",
                  "});",
                  "",
                  "pm.test('the \"foo1\" cookie should not be present', function () {",
                  "    pm.expect(pm.cookies.toObject()).to.not.have.property('foo1');",
                  "});",
                  "",
                  "pm.test('the \"foo2\" cookie should not be present', function () {",
                  "    pm.expect(pm.cookies.toObject()).to.not.have.property('foo2');",
                  "});",
                  "",
                  "// response code could be either a 200 or a redirection based on the settings of ",
                  "// the http client. hence we need to handle both cases",
                  "pm.test('response body should be valid', function () {",
                  "    if (pm.response.code === 200) {",
                  "        pm.response.to.not.have.jsonBody('cookies.foo1');",
                  "        pm.response.to.not.have.jsonBody('cookies.foo2');",
                  "    }",
                  "    else {",
                  "        pm.response.to.have.body('Found. Redirecting to /cookies');",
                  "    }",
                  "});"
                ],
                "_lastExecutionId": "94143fe6-1837-4ce4-b240-e787d227b097"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "One or more cookies that has been set for this domain can be deleted by providing the cookie names as part of the URL parameter. The response of this request is a JSON containing the list of currently set cookies.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "cookies",
              "delete"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "foo1",
                "value": ""
              },
              {
                "key": "foo2",
                "value": ""
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3AKaSIEqtCG3kl9v4GcOUsS0hk3fZQrvyS.Trl7W9QJ5XRDoF0SN41FcPjfMaxP5XTnmYiZtAz6n7M"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            },
            {
              "key": "referer",
              "value": "https://postman-echo.com/cookies/delete?foo1=&foo2="
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "response": {
          "id": "4198cc71-bf64-4010-9d66-466e212f5be3",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:22 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"e-+nChEuofCfdYj5n61iYQiw\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AQTnoFVfF5RyYyOoHJqMzubk8JHn5arpP.3yNy3SX2lE9SMo05i0GdwPU42rww6%2BBy8tsse5QiTck; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "14"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              115,
              34,
              58,
              123,
              125,
              125
            ]
          },
          "cookie": [],
          "responseTime": 380,
          "responseSize": 14
        },
        "id": "5e399d49-f6e6-422a-b63a-e35499f93f62",
        "assertions": [
          {
            "assertion": "response should be 200 or 302"
          },
          {
            "assertion": "the \"foo1\" cookie should not be present"
          },
          {
            "assertion": "the \"foo2\" cookie should not be present"
          },
          {
            "assertion": "response body should be valid"
          }
        ]
      },
      {
        "cursor": {
          "ref": "d2cc8521-98e5-48af-82cb-1aafd6ab4df0",
          "length": 37,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "ac945b06-e8c2-4d8d-a066-7da23b2aabe3"
        },
        "item": {
          "_": {},
          "id": "aa90e720-eaff-4bfa-be84-c1d547356972",
          "name": "Response Status Code",
          "request": {
            "description": {
              "content": "This endpoint allows one to instruct the server which status code to respond with.\n\nEvery response is accompanied by a status code. The status code provides a summary of the nature of response sent by the server. For example, a status code of `200` means everything is okay with the response and a code of `404` implies that the requested URL does not exist on server. \nA list of all valid HTTP status code can be found at the [List of Status Codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) wikipedia article. When using Postman, the response status code is described for easy reference.\n\nNote that if an invalid status code is requested to be sent, the server returns a status code of `400 Bad Request`.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "status",
                "200"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript",
                "postman_previewtype": "html"
              },
              "id": "8b48d69c-e3fc-4252-83d6-e5ffc95540dc",
              "name": "200",
              "originalRequest": {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "status",
                    "200"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "14"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 31 Mar 2016 11:58:47 GMT"
                },
                {
                  "name": "ETag",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "ETag",
                  "value": "W/\"e-1056260003\""
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                }
              ],
              "body": "{\"status\":200}",
              "cookie": [
                {
                  "name": "getpostmanlogin",
                  "expires": null,
                  "domain": ".getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": false,
                  "hostOnly": false,
                  "session": false,
                  "value": "yes"
                },
                {
                  "name": "postman.sid",
                  "expires": null,
                  "domain": ".getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": false,
                  "hostOnly": false,
                  "session": false,
                  "value": "df0c0256028d7ec4d641f766104a9571a8e249685bbc667d7cee030bbf44d3209495c70c03248e31e678a93812591d5e12187a8e99bf6bc5e80c40903f6ff6226938f24e413c0ffa613a7372064ec44a8594e8d3ede6945e34394f369573feeebc4a73a3e24b8c9ac18a53704addb5fd3f71f1ede488ff551feb059e9c1fb208164814e45e0312c4df8ea6e83c26702f42ae634c6afbe82d57c857bbf5598b5527961c1c28688dc2580070a4389f0cf4ec0a179b5b9c11b2ecbaa5460d374065bf5c7a3add9505df0fa89acb9f227f05ed2d4c6b58c39d6d728bd49f6f323ae67d4a75882aa7682f5d6fc5b981ba411d94aa93970bfaefa1953a73e440d50d012b5f288975c888e2345ee7777e746fb5aed3a7b2dbc087c6456621aa78c24a3c17c5f96cf59844933249a352f631e2008cffac6faf06d0e253dcc01cf0067bf56c1fbc5ed61fec1861b60c5accf35ffc2e56154a113004fa1db9d7171c3af8fc063918554092f5"
                },
                {
                  "name": "_ga",
                  "expires": null,
                  "domain": ".echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": false,
                  "hostOnly": false,
                  "session": false,
                  "value": "GA1.3.1703443399.1459422978"
                },
                {
                  "name": "sails.sid",
                  "expires": null,
                  "domain": "echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "hostOnly": true,
                  "session": true,
                  "value": "s%3AvuHU0EKeDbyNjVrEc7U30dMPzVu8CRaD.GOV1H9olcVzXqrwqP%2BC%2B6MVj2UczXivcN00jgPoDYfs"
                }
              ],
              "responseTime": "251"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "4841543d-f0c1-4104-b7a3-84c3d16f1423",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has valid json body\", function () {",
                  "    pm.response.to.have.jsonBody('status');",
                  "});",
                  "",
                  "// additional sanity tests",
                  "pm.test(\"status in response body must match the one in request\", function () {",
                  "    pm.response.to.have.jsonBody('status', Number(_.get(pm.request, 'url.path[1]')));",
                  "});"
                ],
                "_lastExecutionId": "ad313147-393a-4238-a267-6c4bbc9106b2"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint allows one to instruct the server which status code to respond with.\n\nEvery response is accompanied by a status code. The status code provides a summary of the nature of response sent by the server. For example, a status code of `200` means everything is okay with the response and a code of `404` implies that the requested URL does not exist on server. \nA list of all valid HTTP status code can be found at the [List of Status Codes](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes) wikipedia article. When using Postman, the response status code is described for easy reference.\n\nNote that if an invalid status code is requested to be sent, the server returns a status code of `400 Bad Request`.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "status",
              "200"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3AQTnoFVfF5RyYyOoHJqMzubk8JHn5arpP.3yNy3SX2lE9SMo05i0GdwPU42rww6%2BBy8tsse5QiTck"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "response": {
          "id": "4d31f194-2051-42e7-9759-d2ae0aec52c8",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:22 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"e-+3Pmmp/QERKiJq3DueGVYg\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AFQBD_Wzjg4yKl4ZI0ic8Ib6OTJlxm4Jc.5L5yriUt9Cv24Z8RpyYP3nnr1qW0P%2FiFy3MMeXjVmpo; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "14"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              116,
              117,
              115,
              34,
              58,
              50,
              48,
              48,
              125
            ]
          },
          "cookie": [],
          "responseTime": 189,
          "responseSize": 14
        },
        "id": "aa90e720-eaff-4bfa-be84-c1d547356972",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "response has valid json body"
          },
          {
            "assertion": "status in response body must match the one in request"
          }
        ]
      },
      {
        "cursor": {
          "ref": "9955e025-2264-4551-87cc-fb260a1f04f5",
          "length": 37,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "ef6e0af9-2d03-48ff-91bd-d4156d02331c"
        },
        "item": {
          "_": {},
          "id": "e5d21805-d14b-4a19-b240-f314f876b367",
          "name": "Streamed Response",
          "request": {
            "description": {
              "content": "This endpoint allows one to recieve streaming http response using [chunked transfer encoding](https://en.wikipedia.org/wiki/Chunked_transfer_encoding) of a configurable length.\n\nA streaming response does not wait for the entire response to be generated on server before flushing it out. This implies that for a fairly large response, parts of it can be streamed to the requestee as and when it is generated on server. The client can then take actions of processing this partially received data.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "stream",
                "5"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d5f1e591-fc7d-4d64-a9b8-a77d03dfb27a",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has chunked transfer encoding header\", function () {",
                  "    pm.response.to.have.header('transfer-encoding', 'chunked');",
                  "});"
                ],
                "_lastExecutionId": "fab81f0b-839a-46e6-8f79-c8e72581b937"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint allows one to recieve streaming http response using [chunked transfer encoding](https://en.wikipedia.org/wiki/Chunked_transfer_encoding) of a configurable length.\n\nA streaming response does not wait for the entire response to be generated on server before flushing it out. This implies that for a fairly large response, parts of it can be streamed to the requestee as and when it is generated on server. The client can then take actions of processing this partially received data.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "stream",
              "5"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3AFQBD_Wzjg4yKl4ZI0ic8Ib6OTJlxm4Jc.5L5yriUt9Cv24Z8RpyYP3nnr1qW0P%2FiFy3MMeXjVmpo"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "response": {
          "id": "5aa3ea0b-129f-4b35-8716-ca32367bd1ee",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:22 GMT"
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AJ0VtlelQK3x0gOzaUcaAHIBJvjjlveQc.0sRbUiX%2Fi3jazSRFRTrX6%2FwPAUA3mi3kUZyC0jPog%2B4; Path=/; HttpOnly"
            },
            {
              "key": "transfer-encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              110,
              34,
              58,
              32,
              34,
              53,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              32,
              34,
              42,
              47,
              42,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              32,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              32,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              70,
              81,
              66,
              68,
              95,
              87,
              122,
              106,
              103,
              52,
              121,
              75,
              108,
              52,
              90,
              73,
              48,
              105,
              99,
              56,
              73,
              98,
              54,
              79,
              84,
              74,
              108,
              120,
              109,
              52,
              74,
              99,
              46,
              53,
              76,
              53,
              121,
              114,
              105,
              85,
              116,
              57,
              67,
              118,
              50,
              52,
              90,
              56,
              82,
              112,
              121,
              89,
              80,
              51,
              110,
              110,
              114,
              49,
              113,
              87,
              48,
              80,
              37,
              50,
              70,
              105,
              70,
              121,
              51,
              77,
              77,
              101,
              88,
              106,
              86,
              109,
              112,
              111,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              32,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              49,
              46,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              32,
              34,
              52,
              52,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              117,
              114,
              108,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              115,
              116,
              114,
              101,
              97,
              109,
              47,
              53,
              34,
              10,
              125,
              123,
              10,
              32,
              32,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              110,
              34,
              58,
              32,
              34,
              53,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              32,
              34,
              42,
              47,
              42,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              32,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              32,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              70,
              81,
              66,
              68,
              95,
              87,
              122,
              106,
              103,
              52,
              121,
              75,
              108,
              52,
              90,
              73,
              48,
              105,
              99,
              56,
              73,
              98,
              54,
              79,
              84,
              74,
              108,
              120,
              109,
              52,
              74,
              99,
              46,
              53,
              76,
              53,
              121,
              114,
              105,
              85,
              116,
              57,
              67,
              118,
              50,
              52,
              90,
              56,
              82,
              112,
              121,
              89,
              80,
              51,
              110,
              110,
              114,
              49,
              113,
              87,
              48,
              80,
              37,
              50,
              70,
              105,
              70,
              121,
              51,
              77,
              77,
              101,
              88,
              106,
              86,
              109,
              112,
              111,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              32,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              49,
              46,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              32,
              34,
              52,
              52,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              117,
              114,
              108,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              115,
              116,
              114,
              101,
              97,
              109,
              47,
              53,
              34,
              10,
              125,
              123,
              10,
              32,
              32,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              110,
              34,
              58,
              32,
              34,
              53,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              32,
              34,
              42,
              47,
              42,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              32,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              32,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              70,
              81,
              66,
              68,
              95,
              87,
              122,
              106,
              103,
              52,
              121,
              75,
              108,
              52,
              90,
              73,
              48,
              105,
              99,
              56,
              73,
              98,
              54,
              79,
              84,
              74,
              108,
              120,
              109,
              52,
              74,
              99,
              46,
              53,
              76,
              53,
              121,
              114,
              105,
              85,
              116,
              57,
              67,
              118,
              50,
              52,
              90,
              56,
              82,
              112,
              121,
              89,
              80,
              51,
              110,
              110,
              114,
              49,
              113,
              87,
              48,
              80,
              37,
              50,
              70,
              105,
              70,
              121,
              51,
              77,
              77,
              101,
              88,
              106,
              86,
              109,
              112,
              111,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              32,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              49,
              46,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              32,
              34,
              52,
              52,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              117,
              114,
              108,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              115,
              116,
              114,
              101,
              97,
              109,
              47,
              53,
              34,
              10,
              125,
              123,
              10,
              32,
              32,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              110,
              34,
              58,
              32,
              34,
              53,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              32,
              34,
              42,
              47,
              42,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              32,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              32,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              70,
              81,
              66,
              68,
              95,
              87,
              122,
              106,
              103,
              52,
              121,
              75,
              108,
              52,
              90,
              73,
              48,
              105,
              99,
              56,
              73,
              98,
              54,
              79,
              84,
              74,
              108,
              120,
              109,
              52,
              74,
              99,
              46,
              53,
              76,
              53,
              121,
              114,
              105,
              85,
              116,
              57,
              67,
              118,
              50,
              52,
              90,
              56,
              82,
              112,
              121,
              89,
              80,
              51,
              110,
              110,
              114,
              49,
              113,
              87,
              48,
              80,
              37,
              50,
              70,
              105,
              70,
              121,
              51,
              77,
              77,
              101,
              88,
              106,
              86,
              109,
              112,
              111,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              32,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              49,
              46,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              32,
              34,
              52,
              52,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              117,
              114,
              108,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              115,
              116,
              114,
              101,
              97,
              109,
              47,
              53,
              34,
              10,
              125,
              123,
              10,
              32,
              32,
              34,
              97,
              114,
              103,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              110,
              34,
              58,
              32,
              34,
              53,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              32,
              34,
              42,
              47,
              42,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              32,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              32,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              70,
              81,
              66,
              68,
              95,
              87,
              122,
              106,
              103,
              52,
              121,
              75,
              108,
              52,
              90,
              73,
              48,
              105,
              99,
              56,
              73,
              98,
              54,
              79,
              84,
              74,
              108,
              120,
              109,
              52,
              74,
              99,
              46,
              53,
              76,
              53,
              121,
              114,
              105,
              85,
              116,
              57,
              67,
              118,
              50,
              52,
              90,
              56,
              82,
              112,
              121,
              89,
              80,
              51,
              110,
              110,
              114,
              49,
              113,
              87,
              48,
              80,
              37,
              50,
              70,
              105,
              70,
              121,
              51,
              77,
              77,
              101,
              88,
              106,
              86,
              109,
              112,
              111,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              32,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              49,
              46,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              32,
              34,
              52,
              52,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              117,
              114,
              108,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              115,
              116,
              114,
              101,
              97,
              109,
              47,
              53,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 188,
          "responseSize": 2035
        },
        "id": "e5d21805-d14b-4a19-b240-f314f876b367",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "response has chunked transfer encoding header"
          }
        ]
      },
      {
        "cursor": {
          "ref": "04d019ea-d041-4543-b435-40c58ed78eb8",
          "length": 37,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "500a3244-2414-41aa-8bbb-237892f45ece"
        },
        "item": {
          "_": {},
          "id": "c2083a0a-4556-4837-aa59-0edc636d0312",
          "name": "Delay Response",
          "request": {
            "description": {
              "content": "Using this endpoint one can configure how long it takes for the server to come back with a response. Appending a number to the URL defines the time (in seconds) the server will wait before responding.\n\nNote that a maximum delay of 10 seconds is accepted by the server.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "delay",
                "2"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json",
                "postman_previewtype": "html"
              },
              "id": "3672e77f-014c-48ed-bd66-561c5758d0c0",
              "name": "success-response",
              "originalRequest": {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "delay",
                    "3"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Access-Control-Expose-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Expose-Headers",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "13"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Mon, 02 Jan 2017 09:19:03 GMT"
                },
                {
                  "name": "ETag",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "ETag",
                  "value": "W/\"d-t/L/D5c0SDl+MoXtKdSVOg\""
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.10.1"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                }
              ],
              "body": "{\"delay\":\"3\"}",
              "cookie": [
                {
                  "name": "sails.sid",
                  "expires": null,
                  "domain": "echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "hostOnly": false,
                  "session": false,
                  "value": "s%3AYjUiFBtGiJVL2a-qzZQZ1DFlAMhgXN9O.WaAjRUV0OteZxwmhbNibuB7VKse068JJIh6PwLQUKmQ"
                }
              ],
              "responseTime": "4769"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "1be4b50f-3c69-4fe8-a569-c001dbcc3bb0",
                "type": "text/javascript",
                "exec": [
                  "var _ = require('lodash');",
                  "",
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has valid json body\", function () {",
                  "    pm.response.to.have.jsonBody('delay');",
                  "});",
                  "",
                  "// additional sanity tests",
                  "pm.test(\"request must have a valid delay\", function () {",
                  "    pm.expect(Number(_.get(pm.request, 'url.path[1]'))).to.be.above(0).and.below(10);",
                  "});",
                  "pm.test(\"response should take more time than the delay specified\", function () {",
                  "    pm.expect(pm.response.responseTime).to.be.above(Number(_.get(pm.request, 'url.path[1]')));",
                  "});"
                ],
                "_lastExecutionId": "7d08abee-df90-4f84-9a2a-e11ea8e9c3b4"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "Using this endpoint one can configure how long it takes for the server to come back with a response. Appending a number to the URL defines the time (in seconds) the server will wait before responding.\n\nNote that a maximum delay of 10 seconds is accepted by the server.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "delay",
              "2"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3AJ0VtlelQK3x0gOzaUcaAHIBJvjjlveQc.0sRbUiX%2Fi3jazSRFRTrX6%2FwPAUA3mi3kUZyC0jPog%2B4"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "response": {
          "id": "c1cf68d0-9196-40f4-9ef2-6e38863f219c",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:25 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"d-nqTJnlXt/c8zt5h2kqF5WQ\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "13"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              101,
              108,
              97,
              121,
              34,
              58,
              34,
              50,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 2190,
          "responseSize": 13
        },
        "id": "c2083a0a-4556-4837-aa59-0edc636d0312",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "response has valid json body"
          },
          {
            "assertion": "request must have a valid delay"
          },
          {
            "assertion": "response should take more time than the delay specified"
          }
        ]
      },
      {
        "cursor": {
          "ref": "a516d298-3f73-417c-8e35-bc1e58124d46",
          "length": 37,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "fcb893fb-8170-498b-a134-ebc625778359"
        },
        "item": {
          "_": {},
          "id": "29d29021-46cb-4798-a8ab-38814993f9b7",
          "name": "Get UTF8 Encoded Response",
          "request": {
            "description": {
              "content": "If a response of an endpoint requires to send data beyond the basic English / ASCII character set, the `charset` parameter in the `Content-Type` response header defines the character encoding policy.\n\nThis endpoint returns an `UTF8` character encoded response body with text in various languages such as Greek, Latin, East Asian, etc. Postman can interpret the character encoding and use appropriate methods to display the character set in responses.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "encoding",
                "utf8"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e94a5265-9413-43dd-b583-14bc50c77aaa",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has charset in content-type header\", function () {",
                  "    pm.response.to.have.header('content-type', 'text/html; charset=utf-8');",
                  "});",
                  "",
                  "pm.test(\"response has chunked transfer encoding header\", function () {",
                  "    pm.response.to.have.header('transfer-encoding', 'chunked');",
                  "});"
                ],
                "_lastExecutionId": "1a0cb35e-73d8-4445-a99b-aa3ced321138"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "If a response of an endpoint requires to send data beyond the basic English / ASCII character set, the `charset` parameter in the `Content-Type` response header defines the character encoding policy.\n\nThis endpoint returns an `UTF8` character encoded response body with text in various languages such as Greek, Latin, East Asian, etc. Postman can interpret the character encoding and use appropriate methods to display the character set in responses.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "encoding",
              "utf8"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3AJ0VtlelQK3x0gOzaUcaAHIBJvjjlveQc.0sRbUiX%2Fi3jazSRFRTrX6%2FwPAUA3mi3kUZyC0jPog%2B4"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "response": {
          "id": "b645406b-fdde-43ac-9756-732e8cc62683",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "text/html; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:25 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"3d0e-7j4tc9lMiuZ991988Vh2mQ\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3ANsJBkhGnyCdpnyP82ejLAP0AY2RIbhhK.UzRufklTodfUNT5z9oUQTQNBCoqehq2zlmjtPMN%2BqeA; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "transfer-encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              10,
              32,
              32,
              32,
              32,
              60,
              104,
              116,
              109,
              108,
              62,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              60,
              98,
              111,
              100,
              121,
              62,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              60,
              104,
              49,
              62,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              32,
              68,
              101,
              109,
              111,
              60,
              47,
              104,
              49,
              62,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              60,
              112,
              62,
              84,
              97,
              107,
              101,
              110,
              32,
              102,
              114,
              111,
              109,
              32,
              60,
              97,
              32,
              104,
              114,
              101,
              102,
              61,
              34,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              119,
              119,
              119,
              46,
              99,
              108,
              46,
              99,
              97,
              109,
              46,
              97,
              99,
              46,
              117,
              107,
              47,
              126,
              109,
              103,
              107,
              50,
              53,
              47,
              117,
              99,
              115,
              47,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              115,
              47,
              85,
              84,
              70,
              45,
              56,
              45,
              100,
              101,
              109,
              111,
              46,
              116,
              120,
              116,
              34,
              62,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              119,
              119,
              119,
              46,
              99,
              108,
              46,
              99,
              97,
              109,
              46,
              97,
              99,
              46,
              117,
              107,
              47,
              126,
              109,
              103,
              107,
              50,
              53,
              47,
              117,
              99,
              115,
              47,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              115,
              47,
              85,
              84,
              70,
              45,
              56,
              45,
              100,
              101,
              109,
              111,
              46,
              116,
              120,
              116,
              60,
              47,
              97,
              62,
              60,
              47,
              112,
              62,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              60,
              112,
              114,
              101,
              62,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              85,
              84,
              70,
              45,
              56,
              32,
              101,
              110,
              99,
              111,
              100,
              101,
              100,
              32,
              115,
              97,
              109,
              112,
              108,
              101,
              32,
              112,
              108,
              97,
              105,
              110,
              45,
              116,
              101,
              120,
              116,
              32,
              102,
              105,
              108,
              101,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              226,
              128,
              190,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              77,
              97,
              114,
              107,
              117,
              115,
              32,
              75,
              117,
              104,
              110,
              32,
              91,
              203,
              136,
              109,
              97,
              202,
              179,
              107,
              202,
              138,
              115,
              32,
              107,
              117,
              203,
              144,
              110,
              93,
              32,
              60,
              104,
              116,
              116,
              112,
              58,
              47,
              47,
              119,
              119,
              119,
              46,
              99,
              108,
              46,
              99,
              97,
              109,
              46,
              97,
              99,
              46,
              117,
              107,
              47,
              126,
              109,
              103,
              107,
              50,
              53,
              47,
              62,
              32,
              226,
              128,
              148,
              32,
              50,
              48,
              48,
              50,
              45,
              48,
              55,
              45,
              50,
              53,
              10,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              84,
              104,
              101,
              32,
              65,
              83,
              67,
              73,
              73,
              32,
              99,
              111,
              109,
              112,
              97,
              116,
              105,
              98,
              108,
              101,
              32,
              85,
              84,
              70,
              45,
              56,
              32,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              32,
              117,
              115,
              101,
              100,
              32,
              105,
              110,
              32,
              116,
              104,
              105,
              115,
              32,
              112,
              108,
              97,
              105,
              110,
              45,
              116,
              101,
              120,
              116,
              32,
              102,
              105,
              108,
              101,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              105,
              115,
              32,
              100,
              101,
              102,
              105,
              110,
              101,
              100,
              32,
              105,
              110,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              44,
              32,
              73,
              83,
              79,
              32,
              49,
              48,
              54,
              52,
              54,
              45,
              49,
              44,
              32,
              97,
              110,
              100,
              32,
              82,
              70,
              67,
              32,
              50,
              50,
              55,
              57,
              46,
              10,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              85,
              115,
              105,
              110,
              103,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              47,
              85,
              84,
              70,
              45,
              56,
              44,
              32,
              121,
              111,
              117,
              32,
              99,
              97,
              110,
              32,
              119,
              114,
              105,
              116,
              101,
              32,
              105,
              110,
              32,
              101,
              109,
              97,
              105,
              108,
              115,
              32,
              97,
              110,
              100,
              32,
              115,
              111,
              117,
              114,
              99,
              101,
              32,
              99,
              111,
              100,
              101,
              32,
              116,
              104,
              105,
              110,
              103,
              115,
              32,
              115,
              117,
              99,
              104,
              32,
              97,
              115,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              77,
              97,
              116,
              104,
              101,
              109,
              97,
              116,
              105,
              99,
              115,
              32,
              97,
              110,
              100,
              32,
              115,
              99,
              105,
              101,
              110,
              99,
              101,
              115,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              136,
              174,
              32,
              69,
              226,
              139,
              133,
              100,
              97,
              32,
              61,
              32,
              81,
              44,
              32,
              32,
              110,
              32,
              226,
              134,
              146,
              32,
              226,
              136,
              158,
              44,
              32,
              226,
              136,
              145,
              32,
              102,
              40,
              105,
              41,
              32,
              61,
              32,
              226,
              136,
              143,
              32,
              103,
              40,
              105,
              41,
              44,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              167,
              226,
              142,
              161,
              226,
              142,
              155,
              226,
              148,
              140,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              144,
              226,
              142,
              158,
              226,
              142,
              164,
              226,
              142,
              171,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              170,
              226,
              142,
              162,
              226,
              142,
              156,
              226,
              148,
              130,
              97,
              194,
              178,
              43,
              98,
              194,
              179,
              32,
              226,
              142,
              159,
              226,
              142,
              165,
              226,
              142,
              170,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              136,
              128,
              120,
              226,
              136,
              136,
              226,
              132,
              157,
              58,
              32,
              226,
              140,
              136,
              120,
              226,
              140,
              137,
              32,
              61,
              32,
              226,
              136,
              146,
              226,
              140,
              138,
              226,
              136,
              146,
              120,
              226,
              140,
              139,
              44,
              32,
              206,
              177,
              32,
              226,
              136,
              167,
              32,
              194,
              172,
              206,
              178,
              32,
              61,
              32,
              194,
              172,
              40,
              194,
              172,
              206,
              177,
              32,
              226,
              136,
              168,
              32,
              206,
              178,
              41,
              44,
              32,
              32,
              32,
              32,
              226,
              142,
              170,
              226,
              142,
              162,
              226,
              142,
              156,
              226,
              148,
              130,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              32,
              226,
              142,
              159,
              226,
              142,
              165,
              226,
              142,
              170,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              170,
              226,
              142,
              162,
              226,
              142,
              156,
              226,
              142,
              183,
              32,
              99,
              226,
              130,
              136,
              32,
              32,
              32,
              226,
              142,
              159,
              226,
              142,
              165,
              226,
              142,
              170,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              132,
              149,
              32,
              226,
              138,
              134,
              32,
              226,
              132,
              149,
              226,
              130,
              128,
              32,
              226,
              138,
              130,
              32,
              226,
              132,
              164,
              32,
              226,
              138,
              130,
              32,
              226,
              132,
              154,
              32,
              226,
              138,
              130,
              32,
              226,
              132,
              157,
              32,
              226,
              138,
              130,
              32,
              226,
              132,
              130,
              44,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              168,
              226,
              142,
              162,
              226,
              142,
              156,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              159,
              226,
              142,
              165,
              226,
              142,
              172,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              170,
              226,
              142,
              162,
              226,
              142,
              156,
              32,
              226,
              136,
              158,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              159,
              226,
              142,
              165,
              226,
              142,
              170,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              138,
              165,
              32,
              60,
              32,
              97,
              32,
              226,
              137,
              160,
              32,
              98,
              32,
              226,
              137,
              161,
              32,
              99,
              32,
              226,
              137,
              164,
              32,
              100,
              32,
              226,
              137,
              170,
              32,
              226,
              138,
              164,
              32,
              226,
              135,
              146,
              32,
              40,
              226,
              159,
              166,
              65,
              226,
              159,
              167,
              32,
              226,
              135,
              148,
              32,
              226,
              159,
              170,
              66,
              226,
              159,
              171,
              41,
              44,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              170,
              226,
              142,
              162,
              226,
              142,
              156,
              32,
              226,
              142,
              178,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              159,
              226,
              142,
              165,
              226,
              142,
              170,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              170,
              226,
              142,
              162,
              226,
              142,
              156,
              32,
              226,
              142,
              179,
              97,
              226,
              129,
              177,
              45,
              98,
              226,
              129,
              177,
              226,
              142,
              159,
              226,
              142,
              165,
              226,
              142,
              170,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              50,
              72,
              226,
              130,
              130,
              32,
              43,
              32,
              79,
              226,
              130,
              130,
              32,
              226,
              135,
              140,
              32,
              50,
              72,
              226,
              130,
              130,
              79,
              44,
              32,
              82,
              32,
              61,
              32,
              52,
              46,
              55,
              32,
              107,
              206,
              169,
              44,
              32,
              226,
              140,
              128,
              32,
              50,
              48,
              48,
              32,
              109,
              109,
              32,
              32,
              32,
              32,
              32,
              226,
              142,
              169,
              226,
              142,
              163,
              226,
              142,
              157,
              105,
              61,
              49,
              32,
              32,
              32,
              32,
              226,
              142,
              160,
              226,
              142,
              166,
              226,
              142,
              173,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              76,
              105,
              110,
              103,
              117,
              105,
              115,
              116,
              105,
              99,
              115,
              32,
              97,
              110,
              100,
              32,
              100,
              105,
              99,
              116,
              105,
              111,
              110,
              97,
              114,
              105,
              101,
              115,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              195,
              176,
              105,
              32,
              196,
              177,
              110,
              116,
              201,
              153,
              203,
              136,
              110,
              195,
              166,
              202,
              131,
              201,
              153,
              110,
              201,
              153,
              108,
              32,
              102,
              201,
              153,
              203,
              136,
              110,
              201,
              155,
              116,
              196,
              177,
              107,
              32,
              201,
              153,
              115,
              111,
              202,
              138,
              115,
              105,
              203,
              136,
              101,
              196,
              177,
              202,
              131,
              110,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              89,
              32,
              91,
              203,
              136,
              202,
              143,
              112,
              115,
              105,
              108,
              201,
              148,
              110,
              93,
              44,
              32,
              89,
              101,
              110,
              32,
              91,
              106,
              201,
              155,
              110,
              93,
              44,
              32,
              89,
              111,
              103,
              97,
              32,
              91,
              203,
              136,
              106,
              111,
              203,
              144,
              103,
              201,
              145,
              93,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              65,
              80,
              76,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              40,
              40,
              86,
              226,
              141,
              179,
              86,
              41,
              61,
              226,
              141,
              179,
              226,
              141,
              180,
              86,
              41,
              47,
              86,
              226,
              134,
              144,
              44,
              86,
              32,
              32,
              32,
              32,
              226,
              140,
              183,
              226,
              134,
              144,
              226,
              141,
              179,
              226,
              134,
              146,
              226,
              141,
              180,
              226,
              136,
              134,
              226,
              136,
              135,
              226,
              138,
              131,
              226,
              128,
              190,
              226,
              141,
              142,
              226,
              141,
              149,
              226,
              140,
              136,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              78,
              105,
              99,
              101,
              114,
              32,
              116,
              121,
              112,
              111,
              103,
              114,
              97,
              112,
              104,
              121,
              32,
              105,
              110,
              32,
              112,
              108,
              97,
              105,
              110,
              32,
              116,
              101,
              120,
              116,
              32,
              102,
              105,
              108,
              101,
              115,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              148,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              151,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              128,
              162,
              32,
              226,
              128,
              152,
              115,
              105,
              110,
              103,
              108,
              101,
              226,
              128,
              153,
              32,
              97,
              110,
              100,
              32,
              226,
              128,
              156,
              100,
              111,
              117,
              98,
              108,
              101,
              226,
              128,
              157,
              32,
              113,
              117,
              111,
              116,
              101,
              115,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              128,
              162,
              32,
              67,
              117,
              114,
              108,
              121,
              32,
              97,
              112,
              111,
              115,
              116,
              114,
              111,
              112,
              104,
              101,
              115,
              58,
              32,
              226,
              128,
              156,
              87,
              101,
              226,
              128,
              153,
              118,
              101,
              32,
              98,
              101,
              101,
              110,
              32,
              104,
              101,
              114,
              101,
              226,
              128,
              157,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              128,
              162,
              32,
              76,
              97,
              116,
              105,
              110,
              45,
              49,
              32,
              97,
              112,
              111,
              115,
              116,
              114,
              111,
              112,
              104,
              101,
              32,
              97,
              110,
              100,
              32,
              97,
              99,
              99,
              101,
              110,
              116,
              115,
              58,
              32,
              39,
              194,
              180,
              96,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              128,
              162,
              32,
              226,
              128,
              154,
              100,
              101,
              117,
              116,
              115,
              99,
              104,
              101,
              226,
              128,
              152,
              32,
              226,
              128,
              158,
              65,
              110,
              102,
              195,
              188,
              104,
              114,
              117,
              110,
              103,
              115,
              122,
              101,
              105,
              99,
              104,
              101,
              110,
              226,
              128,
              156,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              128,
              162,
              32,
              226,
              128,
              160,
              44,
              32,
              226,
              128,
              161,
              44,
              32,
              226,
              128,
              176,
              44,
              32,
              226,
              128,
              162,
              44,
              32,
              51,
              226,
              128,
              147,
              52,
              44,
              32,
              226,
              128,
              148,
              44,
              32,
              226,
              136,
              146,
              53,
              47,
              43,
              53,
              44,
              32,
              226,
              132,
              162,
              44,
              32,
              226,
              128,
              166,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              128,
              162,
              32,
              65,
              83,
              67,
              73,
              73,
              32,
              115,
              97,
              102,
              101,
              116,
              121,
              32,
              116,
              101,
              115,
              116,
              58,
              32,
              49,
              108,
              73,
              124,
              44,
              32,
              48,
              79,
              68,
              44,
              32,
              56,
              66,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              173,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              149,
              174,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              128,
              162,
              32,
              116,
              104,
              101,
              32,
              101,
              117,
              114,
              111,
              32,
              115,
              121,
              109,
              98,
              111,
              108,
              58,
              32,
              226,
              148,
              130,
              32,
              49,
              52,
              46,
              57,
              53,
              32,
              226,
              130,
              172,
              32,
              226,
              148,
              130,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              176,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              149,
              175,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              154,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              157,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              67,
              111,
              109,
              98,
              105,
              110,
              105,
              110,
              103,
              32,
              99,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              115,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              83,
              84,
              65,
              82,
              71,
              206,
              155,
              204,
              138,
              84,
              69,
              32,
              83,
              71,
              45,
              49,
              44,
              32,
              97,
              32,
              61,
              32,
              118,
              204,
              135,
              32,
              61,
              32,
              114,
              204,
              136,
              44,
              32,
              97,
              226,
              131,
              145,
              32,
              226,
              138,
              165,
              32,
              98,
              226,
              131,
              145,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              71,
              114,
              101,
              101,
              107,
              32,
              40,
              105,
              110,
              32,
              80,
              111,
              108,
              121,
              116,
              111,
              110,
              105,
              99,
              41,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              84,
              104,
              101,
              32,
              71,
              114,
              101,
              101,
              107,
              32,
              97,
              110,
              116,
              104,
              101,
              109,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              163,
              225,
              189,
              178,
              32,
              206,
              179,
              206,
              189,
              207,
              137,
              207,
              129,
              225,
              189,
              183,
              206,
              182,
              207,
              137,
              32,
              225,
              188,
              128,
              207,
              128,
              225,
              189,
              184,
              32,
              207,
              132,
              225,
              189,
              180,
              206,
              189,
              32,
              206,
              186,
              225,
              189,
              185,
              207,
              136,
              206,
              183,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              132,
              206,
              191,
              225,
              191,
              166,
              32,
              207,
              131,
              207,
              128,
              206,
              177,
              206,
              184,
              206,
              185,
              206,
              191,
              225,
              191,
              166,
              32,
              207,
              132,
              225,
              189,
              180,
              206,
              189,
              32,
              207,
              132,
              207,
              129,
              206,
              191,
              206,
              188,
              206,
              181,
              207,
              129,
              225,
              189,
              181,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              131,
              225,
              189,
              178,
              32,
              206,
              179,
              206,
              189,
              207,
              137,
              207,
              129,
              225,
              189,
              183,
              206,
              182,
              207,
              137,
              32,
              225,
              188,
              128,
              207,
              128,
              225,
              189,
              184,
              32,
              207,
              132,
              225,
              189,
              180,
              206,
              189,
              32,
              225,
              189,
              132,
              207,
              136,
              206,
              183,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              128,
              206,
              191,
              225,
              189,
              186,
              32,
              206,
              188,
              225,
              189,
              178,
              32,
              206,
              178,
              225,
              189,
              183,
              206,
              177,
              32,
              206,
              188,
              206,
              181,
              207,
              132,
              207,
              129,
              225,
              189,
              177,
              206,
              181,
              206,
              185,
              32,
              207,
              132,
              225,
              189,
              180,
              32,
              206,
              179,
              225,
              191,
              134,
              46,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              190,
              191,
              206,
              145,
              207,
              128,
              225,
              190,
              191,
              32,
              207,
              132,
              225,
              189,
              176,
              32,
              206,
              186,
              225,
              189,
              185,
              206,
              186,
              206,
              186,
              206,
              177,
              206,
              187,
              206,
              177,
              32,
              206,
              178,
              206,
              179,
              206,
              177,
              206,
              187,
              206,
              188,
              225,
              189,
              179,
              206,
              189,
              206,
              183,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              132,
              225,
              191,
              182,
              206,
              189,
              32,
              225,
              191,
              190,
              206,
              149,
              206,
              187,
              206,
              187,
              225,
              189,
              181,
              206,
              189,
              207,
              137,
              206,
              189,
              32,
              207,
              132,
              225,
              189,
              176,
              32,
              225,
              188,
              177,
              206,
              181,
              207,
              129,
              225,
              189,
              177,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              186,
              206,
              177,
              225,
              189,
              182,
              32,
              207,
              131,
              225,
              189,
              176,
              206,
              189,
              32,
              207,
              128,
              207,
              129,
              225,
              191,
              182,
              207,
              132,
              206,
              177,
              32,
              225,
              188,
              128,
              206,
              189,
              206,
              180,
              207,
              129,
              206,
              181,
              206,
              185,
              207,
              137,
              206,
              188,
              225,
              189,
              179,
              206,
              189,
              206,
              183,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              135,
              206,
              177,
              225,
              191,
              150,
              207,
              129,
              206,
              181,
              44,
              32,
              225,
              189,
              166,
              32,
              207,
              135,
              206,
              177,
              225,
              191,
              150,
              207,
              129,
              206,
              181,
              44,
              32,
              225,
              190,
              191,
              206,
              149,
              206,
              187,
              206,
              181,
              207,
              133,
              206,
              184,
              206,
              181,
              207,
              129,
              206,
              185,
              225,
              189,
              177,
              33,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              70,
              114,
              111,
              109,
              32,
              97,
              32,
              115,
              112,
              101,
              101,
              99,
              104,
              32,
              111,
              102,
              32,
              68,
              101,
              109,
              111,
              115,
              116,
              104,
              101,
              110,
              101,
              115,
              32,
              105,
              110,
              32,
              116,
              104,
              101,
              32,
              52,
              116,
              104,
              32,
              99,
              101,
              110,
              116,
              117,
              114,
              121,
              32,
              66,
              67,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              159,
              225,
              189,
              144,
              207,
              135,
              225,
              189,
              182,
              32,
              207,
              132,
              206,
              177,
              225,
              189,
              144,
              207,
              132,
              225,
              189,
              176,
              32,
              207,
              128,
              206,
              177,
              207,
              129,
              225,
              189,
              183,
              207,
              131,
              207,
              132,
              206,
              177,
              207,
              132,
              206,
              177,
              225,
              189,
              183,
              32,
              206,
              188,
              206,
              191,
              206,
              185,
              32,
              206,
              179,
              206,
              185,
              206,
              179,
              206,
              189,
              225,
              189,
              189,
              207,
              131,
              206,
              186,
              206,
              181,
              206,
              185,
              206,
              189,
              44,
              32,
              225,
              189,
              166,
              32,
              225,
              188,
              132,
              206,
              189,
              206,
              180,
              207,
              129,
              206,
              181,
              207,
              130,
              32,
              225,
              190,
              191,
              206,
              145,
              206,
              184,
              206,
              183,
              206,
              189,
              206,
              177,
              225,
              191,
              150,
              206,
              191,
              206,
              185,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              189,
              133,
              207,
              132,
              206,
              177,
              206,
              189,
              32,
              207,
              132,
              225,
              190,
              191,
              32,
              206,
              181,
              225,
              188,
              176,
              207,
              130,
              32,
              207,
              132,
              225,
              189,
              176,
              32,
              207,
              128,
              207,
              129,
              225,
              189,
              177,
              206,
              179,
              206,
              188,
              206,
              177,
              207,
              132,
              206,
              177,
              32,
              225,
              188,
              128,
              207,
              128,
              206,
              191,
              206,
              178,
              206,
              187,
              225,
              189,
              179,
              207,
              136,
              207,
              137,
              32,
              206,
              186,
              206,
              177,
              225,
              189,
              182,
              32,
              225,
              189,
              133,
              207,
              132,
              206,
              177,
              206,
              189,
              32,
              207,
              128,
              207,
              129,
              225,
              189,
              184,
              207,
              130,
              32,
              207,
              132,
              206,
              191,
              225,
              189,
              186,
              207,
              130,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              187,
              225,
              189,
              185,
              206,
              179,
              206,
              191,
              207,
              133,
              207,
              130,
              32,
              206,
              191,
              225,
              189,
              147,
              207,
              130,
              32,
              225,
              188,
              128,
              206,
              186,
              206,
              191,
              225,
              189,
              187,
              207,
              137,
              206,
              135,
              32,
              207,
              132,
              206,
              191,
              225,
              189,
              186,
              207,
              130,
              32,
              206,
              188,
              225,
              189,
              178,
              206,
              189,
              32,
              206,
              179,
              225,
              189,
              176,
              207,
              129,
              32,
              206,
              187,
              225,
              189,
              185,
              206,
              179,
              206,
              191,
              207,
              133,
              207,
              130,
              32,
              207,
              128,
              206,
              181,
              207,
              129,
              225,
              189,
              182,
              32,
              207,
              132,
              206,
              191,
              225,
              191,
              166,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              132,
              206,
              185,
              206,
              188,
              207,
              137,
              207,
              129,
              225,
              189,
              181,
              207,
              131,
              206,
              177,
              207,
              131,
              206,
              184,
              206,
              177,
              206,
              185,
              32,
              206,
              166,
              225,
              189,
              183,
              206,
              187,
              206,
              185,
              207,
              128,
              207,
              128,
              206,
              191,
              206,
              189,
              32,
              225,
              189,
              129,
              207,
              129,
              225,
              191,
              182,
              32,
              206,
              179,
              206,
              185,
              206,
              179,
              206,
              189,
              206,
              191,
              206,
              188,
              225,
              189,
              179,
              206,
              189,
              206,
              191,
              207,
              133,
              207,
              130,
              44,
              32,
              207,
              132,
              225,
              189,
              176,
              32,
              206,
              180,
              225,
              189,
              178,
              32,
              207,
              128,
              207,
              129,
              225,
              189,
              177,
              206,
              179,
              206,
              188,
              206,
              177,
              207,
              132,
              225,
              190,
              191,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              181,
              225,
              188,
              176,
              207,
              130,
              32,
              207,
              132,
              206,
              191,
              225,
              191,
              166,
              207,
              132,
              206,
              191,
              32,
              207,
              128,
              207,
              129,
              206,
              191,
              225,
              189,
              181,
              206,
              186,
              206,
              191,
              206,
              189,
              207,
              132,
              206,
              177,
              44,
              32,
              32,
              225,
              189,
              165,
              207,
              131,
              206,
              184,
              225,
              190,
              191,
              32,
              225,
              189,
              133,
              207,
              128,
              207,
              137,
              207,
              130,
              32,
              206,
              188,
              225,
              189,
              180,
              32,
              207,
              128,
              206,
              181,
              206,
              185,
              207,
              131,
              225,
              189,
              185,
              206,
              188,
              206,
              181,
              206,
              184,
              225,
              190,
              191,
              32,
              206,
              177,
              225,
              189,
              144,
              207,
              132,
              206,
              191,
              225,
              189,
              182,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              128,
              207,
              129,
              225,
              189,
              185,
              207,
              132,
              206,
              181,
              207,
              129,
              206,
              191,
              206,
              189,
              32,
              206,
              186,
              206,
              177,
              206,
              186,
              225,
              191,
              182,
              207,
              130,
              32,
              207,
              131,
              206,
              186,
              225,
              189,
              179,
              207,
              136,
              206,
              177,
              207,
              131,
              206,
              184,
              206,
              177,
              206,
              185,
              32,
              206,
              180,
              225,
              189,
              179,
              206,
              191,
              206,
              189,
              46,
              32,
              206,
              191,
              225,
              189,
              144,
              206,
              180,
              225,
              189,
              179,
              206,
              189,
              32,
              206,
              191,
              225,
              189,
              150,
              206,
              189,
              32,
              225,
              188,
              132,
              206,
              187,
              206,
              187,
              206,
              191,
              32,
              206,
              188,
              206,
              191,
              206,
              185,
              32,
              206,
              180,
              206,
              191,
              206,
              186,
              206,
              191,
              225,
              191,
              166,
              207,
              131,
              206,
              185,
              206,
              189,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              191,
              225,
              188,
              177,
              32,
              207,
              132,
              225,
              189,
              176,
              32,
              207,
              132,
              206,
              191,
              206,
              185,
              206,
              177,
              225,
              191,
              166,
              207,
              132,
              206,
              177,
              32,
              206,
              187,
              225,
              189,
              179,
              206,
              179,
              206,
              191,
              206,
              189,
              207,
              132,
              206,
              181,
              207,
              130,
              32,
              225,
              188,
              162,
              32,
              207,
              132,
              225,
              189,
              180,
              206,
              189,
              32,
              225,
              189,
              145,
              207,
              128,
              225,
              189,
              185,
              206,
              184,
              206,
              181,
              207,
              131,
              206,
              185,
              206,
              189,
              44,
              32,
              207,
              128,
              206,
              181,
              207,
              129,
              225,
              189,
              182,
              32,
              225,
              188,
              167,
              207,
              130,
              32,
              206,
              178,
              206,
              191,
              207,
              133,
              206,
              187,
              206,
              181,
              225,
              189,
              187,
              206,
              181,
              207,
              131,
              206,
              184,
              206,
              177,
              206,
              185,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              191,
              225,
              189,
              144,
              207,
              135,
              225,
              189,
              182,
              32,
              207,
              132,
              225,
              189,
              180,
              206,
              189,
              32,
              206,
              191,
              225,
              189,
              150,
              207,
              131,
              206,
              177,
              206,
              189,
              32,
              207,
              128,
              206,
              177,
              207,
              129,
              206,
              185,
              207,
              131,
              207,
              132,
              225,
              189,
              177,
              206,
              189,
              207,
              132,
              206,
              181,
              207,
              130,
              32,
              225,
              189,
              145,
              206,
              188,
              225,
              191,
              150,
              206,
              189,
              32,
              225,
              188,
              129,
              206,
              188,
              206,
              177,
              207,
              129,
              207,
              132,
              225,
              189,
              177,
              206,
              189,
              206,
              181,
              206,
              185,
              206,
              189,
              46,
              32,
              225,
              188,
              144,
              206,
              179,
              225,
              189,
              188,
              32,
              206,
              180,
              225,
              189,
              179,
              44,
              32,
              225,
              189,
              133,
              207,
              132,
              206,
              185,
              32,
              206,
              188,
              225,
              189,
              179,
              206,
              189,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              128,
              206,
              191,
              207,
              132,
              225,
              190,
              191,
              32,
              225,
              188,
              144,
              206,
              190,
              225,
              191,
              134,
              206,
              189,
              32,
              207,
              132,
              225,
              191,
              135,
              32,
              207,
              128,
              225,
              189,
              185,
              206,
              187,
              206,
              181,
              206,
              185,
              32,
              206,
              186,
              206,
              177,
              225,
              189,
              182,
              32,
              207,
              132,
              225,
              189,
              176,
              32,
              206,
              177,
              225,
              189,
              145,
              207,
              132,
              225,
              191,
              134,
              207,
              130,
              32,
              225,
              188,
              148,
              207,
              135,
              206,
              181,
              206,
              185,
              206,
              189,
              32,
              225,
              188,
              128,
              207,
              131,
              207,
              134,
              206,
              177,
              206,
              187,
              225,
              191,
              182,
              207,
              130,
              32,
              206,
              186,
              206,
              177,
              225,
              189,
              182,
              32,
              206,
              166,
              225,
              189,
              183,
              206,
              187,
              206,
              185,
              207,
              128,
              207,
              128,
              206,
              191,
              206,
              189,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              132,
              206,
              185,
              206,
              188,
              207,
              137,
              207,
              129,
              225,
              189,
              181,
              207,
              131,
              206,
              177,
              207,
              131,
              206,
              184,
              206,
              177,
              206,
              185,
              44,
              32,
              206,
              186,
              206,
              177,
              225,
              189,
              182,
              32,
              206,
              188,
              225,
              189,
              177,
              206,
              187,
              225,
              190,
              191,
              32,
              225,
              188,
              128,
              206,
              186,
              207,
              129,
              206,
              185,
              206,
              178,
              225,
              191,
              182,
              207,
              130,
              32,
              206,
              191,
              225,
              188,
              182,
              206,
              180,
              206,
              177,
              206,
              135,
              32,
              225,
              188,
              144,
              207,
              128,
              225,
              190,
              191,
              32,
              225,
              188,
              144,
              206,
              188,
              206,
              191,
              225,
              191,
              166,
              32,
              206,
              179,
              225,
              189,
              177,
              207,
              129,
              44,
              32,
              206,
              191,
              225,
              189,
              144,
              32,
              207,
              128,
              225,
              189,
              177,
              206,
              187,
              206,
              177,
              206,
              185,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              179,
              225,
              189,
              179,
              206,
              179,
              206,
              191,
              206,
              189,
              206,
              181,
              206,
              189,
              32,
              207,
              132,
              206,
              177,
              225,
              191,
              166,
              207,
              132,
              225,
              190,
              191,
              32,
              225,
              188,
              128,
              206,
              188,
              207,
              134,
              225,
              189,
              185,
              207,
              132,
              206,
              181,
              207,
              129,
              206,
              177,
              206,
              135,
              32,
              206,
              189,
              225,
              191,
              166,
              206,
              189,
              32,
              206,
              188,
              225,
              189,
              179,
              206,
              189,
              207,
              132,
              206,
              191,
              206,
              185,
              32,
              207,
              128,
              225,
              189,
              179,
              207,
              128,
              206,
              181,
              206,
              185,
              207,
              131,
              206,
              188,
              206,
              177,
              206,
              185,
              32,
              207,
              132,
              206,
              191,
              225,
              191,
              166,
              206,
              184,
              225,
              190,
              191,
              32,
              225,
              188,
              177,
              206,
              186,
              206,
              177,
              206,
              189,
              225,
              189,
              184,
              206,
              189,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              128,
              207,
              129,
              206,
              191,
              206,
              187,
              206,
              177,
              206,
              178,
              206,
              181,
              225,
              191,
              150,
              206,
              189,
              32,
              225,
              188,
              161,
              206,
              188,
              225,
              191,
              150,
              206,
              189,
              32,
              206,
              181,
              225,
              188,
              182,
              206,
              189,
              206,
              177,
              206,
              185,
              32,
              207,
              132,
              225,
              189,
              180,
              206,
              189,
              32,
              207,
              128,
              207,
              129,
              225,
              189,
              189,
              207,
              132,
              206,
              183,
              206,
              189,
              44,
              32,
              225,
              189,
              133,
              207,
              128,
              207,
              137,
              207,
              130,
              32,
              207,
              132,
              206,
              191,
              225,
              189,
              186,
              207,
              130,
              32,
              207,
              131,
              207,
              133,
              206,
              188,
              206,
              188,
              225,
              189,
              177,
              207,
              135,
              206,
              191,
              207,
              133,
              207,
              130,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              131,
              225,
              189,
              189,
              207,
              131,
              206,
              191,
              206,
              188,
              206,
              181,
              206,
              189,
              46,
              32,
              225,
              188,
              144,
              225,
              189,
              176,
              206,
              189,
              32,
              206,
              179,
              225,
              189,
              176,
              207,
              129,
              32,
              207,
              132,
              206,
              191,
              225,
              191,
              166,
              207,
              132,
              206,
              191,
              32,
              206,
              178,
              206,
              181,
              206,
              178,
              206,
              177,
              225,
              189,
              183,
              207,
              137,
              207,
              130,
              32,
              225,
              189,
              145,
              207,
              128,
              225,
              189,
              177,
              207,
              129,
              206,
              190,
              225,
              191,
              131,
              44,
              32,
              207,
              132,
              225,
              189,
              185,
              207,
              132,
              206,
              181,
              32,
              206,
              186,
              206,
              177,
              225,
              189,
              182,
              32,
              207,
              128,
              206,
              181,
              207,
              129,
              225,
              189,
              182,
              32,
              207,
              132,
              206,
              191,
              225,
              191,
              166,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              132,
              225,
              189,
              183,
              206,
              189,
              206,
              177,
              32,
              207,
              132,
              206,
              185,
              206,
              188,
              207,
              137,
              207,
              129,
              225,
              189,
              181,
              207,
              131,
              206,
              181,
              207,
              132,
              206,
              177,
              225,
              189,
              183,
              32,
              207,
              132,
              206,
              185,
              207,
              130,
              32,
              206,
              186,
              206,
              177,
              225,
              189,
              182,
              32,
              225,
              189,
              131,
              206,
              189,
              32,
              207,
              132,
              207,
              129,
              225,
              189,
              185,
              207,
              128,
              206,
              191,
              206,
              189,
              32,
              225,
              188,
              144,
              206,
              190,
              225,
              189,
              179,
              207,
              131,
              207,
              132,
              206,
              177,
              206,
              185,
              32,
              207,
              131,
              206,
              186,
              206,
              191,
              207,
              128,
              206,
              181,
              225,
              191,
              150,
              206,
              189,
              206,
              135,
              32,
              207,
              128,
              207,
              129,
              225,
              189,
              182,
              206,
              189,
              32,
              206,
              180,
              225,
              189,
              178,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              132,
              225,
              189,
              180,
              206,
              189,
              32,
              225,
              188,
              128,
              207,
              129,
              207,
              135,
              225,
              189,
              180,
              206,
              189,
              32,
              225,
              189,
              128,
              207,
              129,
              206,
              184,
              225,
              191,
              182,
              207,
              130,
              32,
              225,
              189,
              145,
              207,
              128,
              206,
              191,
              206,
              184,
              225,
              189,
              179,
              207,
              131,
              206,
              184,
              206,
              177,
              206,
              185,
              44,
              32,
              206,
              188,
              225,
              189,
              177,
              207,
              132,
              206,
              177,
              206,
              185,
              206,
              191,
              206,
              189,
              32,
              225,
              188,
              161,
              206,
              179,
              206,
              191,
              225,
              191,
              166,
              206,
              188,
              206,
              177,
              206,
              185,
              32,
              207,
              128,
              206,
              181,
              207,
              129,
              225,
              189,
              182,
              32,
              207,
              132,
              225,
              191,
              134,
              207,
              130,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              207,
              132,
              206,
              181,
              206,
              187,
              206,
              181,
              207,
              133,
              207,
              132,
              225,
              191,
              134,
              207,
              130,
              32,
              225,
              189,
              129,
              206,
              189,
              207,
              132,
              206,
              185,
              206,
              189,
              206,
              191,
              225,
              191,
              166,
              206,
              189,
              32,
              207,
              128,
              206,
              191,
              206,
              185,
              206,
              181,
              225,
              191,
              150,
              207,
              131,
              206,
              184,
              206,
              177,
              206,
              185,
              32,
              206,
              187,
              225,
              189,
              185,
              206,
              179,
              206,
              191,
              206,
              189,
              46,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              206,
              148,
              206,
              183,
              206,
              188,
              206,
              191,
              207,
              131,
              206,
              184,
              225,
              189,
              179,
              206,
              189,
              206,
              191,
              207,
              133,
              207,
              130,
              44,
              32,
              206,
              147,
              225,
              191,
              189,
              32,
              225,
              190,
              191,
              206,
              159,
              206,
              187,
              207,
              133,
              206,
              189,
              206,
              184,
              206,
              185,
              206,
              177,
              206,
              186,
              225,
              189,
              184,
              207,
              130,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              71,
              101,
              111,
              114,
              103,
              105,
              97,
              110,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              70,
              114,
              111,
              109,
              32,
              97,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              32,
              99,
              111,
              110,
              102,
              101,
              114,
              101,
              110,
              99,
              101,
              32,
              105,
              110,
              118,
              105,
              116,
              97,
              116,
              105,
              111,
              110,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              131,
              146,
              225,
              131,
              151,
              225,
              131,
              174,
              225,
              131,
              157,
              225,
              131,
              149,
              225,
              131,
              151,
              32,
              225,
              131,
              144,
              225,
              131,
              174,
              225,
              131,
              154,
              225,
              131,
              144,
              225,
              131,
              149,
              225,
              131,
              148,
              32,
              225,
              131,
              146,
              225,
              131,
              144,
              225,
              131,
              152,
              225,
              131,
              144,
              225,
              131,
              160,
              225,
              131,
              157,
              225,
              131,
              151,
              32,
              225,
              131,
              160,
              225,
              131,
              148,
              225,
              131,
              146,
              225,
              131,
              152,
              225,
              131,
              161,
              225,
              131,
              162,
              225,
              131,
              160,
              225,
              131,
              144,
              225,
              131,
              170,
              225,
              131,
              152,
              225,
              131,
              144,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              45,
              225,
              131,
              152,
              225,
              131,
              161,
              32,
              225,
              131,
              155,
              225,
              131,
              148,
              225,
              131,
              144,
              225,
              131,
              151,
              225,
              131,
              148,
              32,
              225,
              131,
              161,
              225,
              131,
              144,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              151,
              225,
              131,
              144,
              225,
              131,
              168,
              225,
              131,
              157,
              225,
              131,
              160,
              225,
              131,
              152,
              225,
              131,
              161,
              225,
              131,
              157,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              131,
              153,
              225,
              131,
              157,
              225,
              131,
              156,
              225,
              131,
              164,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              148,
              225,
              131,
              156,
              225,
              131,
              170,
              225,
              131,
              152,
              225,
              131,
              144,
              225,
              131,
              150,
              225,
              131,
              148,
              32,
              225,
              131,
              147,
              225,
              131,
              144,
              225,
              131,
              161,
              225,
              131,
              144,
              225,
              131,
              161,
              225,
              131,
              172,
              225,
              131,
              160,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              144,
              225,
              131,
              147,
              44,
              32,
              225,
              131,
              160,
              225,
              131,
              157,
              225,
              131,
              155,
              225,
              131,
              148,
              225,
              131,
              154,
              225,
              131,
              152,
              225,
              131,
              170,
              32,
              225,
              131,
              146,
              225,
              131,
              144,
              225,
              131,
              152,
              225,
              131,
              155,
              225,
              131,
              144,
              225,
              131,
              160,
              225,
              131,
              151,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              144,
              32,
              49,
              48,
              45,
              49,
              50,
              32,
              225,
              131,
              155,
              225,
              131,
              144,
              225,
              131,
              160,
              225,
              131,
              162,
              225,
              131,
              161,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              131,
              165,
              46,
              32,
              225,
              131,
              155,
              225,
              131,
              144,
              225,
              131,
              152,
              225,
              131,
              156,
              225,
              131,
              170,
              225,
              131,
              168,
              225,
              131,
              152,
              44,
              32,
              225,
              131,
              146,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              155,
              225,
              131,
              144,
              225,
              131,
              156,
              225,
              131,
              152,
              225,
              131,
              144,
              225,
              131,
              168,
              225,
              131,
              152,
              46,
              32,
              225,
              131,
              153,
              225,
              131,
              157,
              225,
              131,
              156,
              225,
              131,
              164,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              148,
              225,
              131,
              156,
              225,
              131,
              170,
              225,
              131,
              152,
              225,
              131,
              144,
              32,
              225,
              131,
              168,
              225,
              131,
              148,
              225,
              131,
              176,
              225,
              131,
              153,
              225,
              131,
              160,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              161,
              32,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              151,
              225,
              131,
              144,
              225,
              131,
              147,
              32,
              225,
              131,
              155,
              225,
              131,
              161,
              225,
              131,
              157,
              225,
              131,
              164,
              225,
              131,
              154,
              225,
              131,
              152,
              225,
              131,
              157,
              225,
              131,
              161,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              131,
              148,
              225,
              131,
              165,
              225,
              131,
              161,
              225,
              131,
              158,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              161,
              32,
              225,
              131,
              152,
              225,
              131,
              161,
              225,
              131,
              148,
              225,
              131,
              151,
              32,
              225,
              131,
              147,
              225,
              131,
              144,
              225,
              131,
              160,
              225,
              131,
              146,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              168,
              225,
              131,
              152,
              32,
              225,
              131,
              160,
              225,
              131,
              157,
              225,
              131,
              146,
              225,
              131,
              157,
              225,
              131,
              160,
              225,
              131,
              152,
              225,
              131,
              170,
              225,
              131,
              144,
              225,
              131,
              144,
              32,
              225,
              131,
              152,
              225,
              131,
              156,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              156,
              225,
              131,
              148,
              225,
              131,
              162,
              225,
              131,
              152,
              32,
              225,
              131,
              147,
              225,
              131,
              144,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              45,
              225,
              131,
              152,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              131,
              152,
              225,
              131,
              156,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              156,
              225,
              131,
              144,
              225,
              131,
              170,
              225,
              131,
              152,
              225,
              131,
              157,
              225,
              131,
              156,
              225,
              131,
              144,
              225,
              131,
              154,
              225,
              131,
              152,
              225,
              131,
              150,
              225,
              131,
              144,
              225,
              131,
              170,
              225,
              131,
              152,
              225,
              131,
              144,
              32,
              225,
              131,
              147,
              225,
              131,
              144,
              32,
              225,
              131,
              154,
              225,
              131,
              157,
              225,
              131,
              153,
              225,
              131,
              144,
              225,
              131,
              154,
              225,
              131,
              152,
              225,
              131,
              150,
              225,
              131,
              144,
              225,
              131,
              170,
              225,
              131,
              152,
              225,
              131,
              144,
              44,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              45,
              225,
              131,
              152,
              225,
              131,
              161,
              32,
              225,
              131,
              146,
              225,
              131,
              144,
              225,
              131,
              155,
              225,
              131,
              157,
              225,
              131,
              167,
              225,
              131,
              148,
              225,
              131,
              156,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              144,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              131,
              157,
              225,
              131,
              158,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              144,
              225,
              131,
              170,
              225,
              131,
              152,
              225,
              131,
              163,
              225,
              131,
              154,
              32,
              225,
              131,
              161,
              225,
              131,
              152,
              225,
              131,
              161,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              155,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              161,
              225,
              131,
              144,
              44,
              32,
              225,
              131,
              147,
              225,
              131,
              144,
              32,
              225,
              131,
              146,
              225,
              131,
              144,
              225,
              131,
              155,
              225,
              131,
              157,
              225,
              131,
              167,
              225,
              131,
              148,
              225,
              131,
              156,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              152,
              225,
              131,
              151,
              32,
              225,
              131,
              158,
              225,
              131,
              160,
              225,
              131,
              157,
              225,
              131,
              146,
              225,
              131,
              160,
              225,
              131,
              144,
              225,
              131,
              155,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              168,
              225,
              131,
              152,
              44,
              32,
              225,
              131,
              168,
              225,
              131,
              160,
              225,
              131,
              152,
              225,
              131,
              164,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              168,
              225,
              131,
              152,
              44,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              165,
              225,
              131,
              161,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              152,
              225,
              131,
              161,
              32,
              225,
              131,
              147,
              225,
              131,
              144,
              225,
              131,
              155,
              225,
              131,
              163,
              225,
              131,
              168,
              225,
              131,
              144,
              225,
              131,
              149,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              144,
              225,
              131,
              161,
              225,
              131,
              144,
              32,
              225,
              131,
              147,
              225,
              131,
              144,
              32,
              225,
              131,
              155,
              225,
              131,
              160,
              225,
              131,
              144,
              225,
              131,
              149,
              225,
              131,
              144,
              225,
              131,
              154,
              225,
              131,
              148,
              225,
              131,
              156,
              225,
              131,
              157,
              225,
              131,
              149,
              225,
              131,
              144,
              225,
              131,
              156,
              32,
              225,
              131,
              153,
              225,
              131,
              157,
              225,
              131,
              155,
              225,
              131,
              158,
              225,
              131,
              152,
              225,
              131,
              163,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              160,
              225,
              131,
              163,
              225,
              131,
              154,
              32,
              225,
              131,
              161,
              225,
              131,
              152,
              225,
              131,
              161,
              225,
              131,
              162,
              225,
              131,
              148,
              225,
              131,
              155,
              225,
              131,
              148,
              225,
              131,
              145,
              225,
              131,
              168,
              225,
              131,
              152,
              46,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              82,
              117,
              115,
              115,
              105,
              97,
              110,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              70,
              114,
              111,
              109,
              32,
              97,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              32,
              99,
              111,
              110,
              102,
              101,
              114,
              101,
              110,
              99,
              101,
              32,
              105,
              110,
              118,
              105,
              116,
              97,
              116,
              105,
              111,
              110,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              208,
              151,
              208,
              176,
              209,
              128,
              208,
              181,
              208,
              179,
              208,
              184,
              209,
              129,
              209,
              130,
              209,
              128,
              208,
              184,
              209,
              128,
              209,
              131,
              208,
              185,
              209,
              130,
              208,
              181,
              209,
              129,
              209,
              140,
              32,
              209,
              129,
              208,
              181,
              208,
              185,
              209,
              135,
              208,
              176,
              209,
              129,
              32,
              208,
              189,
              208,
              176,
              32,
              208,
              148,
              208,
              181,
              209,
              129,
              209,
              143,
              209,
              130,
              209,
              131,
              209,
              142,
              32,
              208,
              156,
              208,
              181,
              208,
              182,
              208,
              180,
              209,
              131,
              208,
              189,
              208,
              176,
              209,
              128,
              208,
              190,
              208,
              180,
              208,
              189,
              209,
              131,
              209,
              142,
              32,
              208,
              154,
              208,
              190,
              208,
              189,
              209,
              132,
              208,
              181,
              209,
              128,
              208,
              181,
              208,
              189,
              209,
              134,
              208,
              184,
              209,
              142,
              32,
              208,
              191,
              208,
              190,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              44,
              32,
              208,
              186,
              208,
              190,
              209,
              130,
              208,
              190,
              209,
              128,
              208,
              176,
              209,
              143,
              32,
              209,
              129,
              208,
              190,
              209,
              129,
              209,
              130,
              208,
              190,
              208,
              184,
              209,
              130,
              209,
              129,
              209,
              143,
              32,
              49,
              48,
              45,
              49,
              50,
              32,
              208,
              188,
              208,
              176,
              209,
              128,
              209,
              130,
              208,
              176,
              32,
              49,
              57,
              57,
              55,
              32,
              208,
              179,
              208,
              190,
              208,
              180,
              208,
              176,
              32,
              208,
              178,
              32,
              208,
              156,
              208,
              176,
              208,
              185,
              208,
              189,
              209,
              134,
              208,
              181,
              32,
              208,
              178,
              32,
              208,
              147,
              208,
              181,
              209,
              128,
              208,
              188,
              208,
              176,
              208,
              189,
              208,
              184,
              208,
              184,
              46,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              208,
              154,
              208,
              190,
              208,
              189,
              209,
              132,
              208,
              181,
              209,
              128,
              208,
              181,
              208,
              189,
              209,
              134,
              208,
              184,
              209,
              143,
              32,
              209,
              129,
              208,
              190,
              208,
              177,
              208,
              181,
              209,
              128,
              208,
              181,
              209,
              130,
              32,
              209,
              136,
              208,
              184,
              209,
              128,
              208,
              190,
              208,
              186,
              208,
              184,
              208,
              185,
              32,
              208,
              186,
              209,
              128,
              209,
              131,
              208,
              179,
              32,
              209,
              141,
              208,
              186,
              209,
              129,
              208,
              191,
              208,
              181,
              209,
              128,
              209,
              130,
              208,
              190,
              208,
              178,
              32,
              208,
              191,
              208,
              190,
              32,
              32,
              208,
              178,
              208,
              190,
              208,
              191,
              209,
              128,
              208,
              190,
              209,
              129,
              208,
              176,
              208,
              188,
              32,
              208,
              179,
              208,
              187,
              208,
              190,
              208,
              177,
              208,
              176,
              208,
              187,
              209,
              140,
              208,
              189,
              208,
              190,
              208,
              179,
              208,
              190,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              208,
              152,
              208,
              189,
              209,
              130,
              208,
              181,
              209,
              128,
              208,
              189,
              208,
              181,
              209,
              130,
              208,
              176,
              32,
              208,
              184,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              44,
              32,
              208,
              187,
              208,
              190,
              208,
              186,
              208,
              176,
              208,
              187,
              208,
              184,
              208,
              183,
              208,
              176,
              209,
              134,
              208,
              184,
              208,
              184,
              32,
              208,
              184,
              32,
              208,
              184,
              208,
              189,
              209,
              130,
              208,
              181,
              209,
              128,
              208,
              189,
              208,
              176,
              209,
              134,
              208,
              184,
              208,
              190,
              208,
              189,
              208,
              176,
              208,
              187,
              208,
              184,
              208,
              183,
              208,
              176,
              209,
              134,
              208,
              184,
              208,
              184,
              44,
              32,
              208,
              178,
              208,
              190,
              208,
              191,
              208,
              187,
              208,
              190,
              209,
              137,
              208,
              181,
              208,
              189,
              208,
              184,
              209,
              142,
              32,
              208,
              184,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              208,
              191,
              209,
              128,
              208,
              184,
              208,
              188,
              208,
              181,
              208,
              189,
              208,
              181,
              208,
              189,
              208,
              184,
              209,
              142,
              32,
              85,
              110,
              105,
              99,
              111,
              100,
              101,
              32,
              208,
              178,
              32,
              209,
              128,
              208,
              176,
              208,
              183,
              208,
              187,
              208,
              184,
              209,
              135,
              208,
              189,
              209,
              139,
              209,
              133,
              32,
              208,
              190,
              208,
              191,
              208,
              181,
              209,
              128,
              208,
              176,
              209,
              134,
              208,
              184,
              208,
              190,
              208,
              189,
              208,
              189,
              209,
              139,
              209,
              133,
              32,
              209,
              129,
              208,
              184,
              209,
              129,
              209,
              130,
              208,
              181,
              208,
              188,
              208,
              176,
              209,
              133,
              32,
              208,
              184,
              32,
              208,
              191,
              209,
              128,
              208,
              190,
              208,
              179,
              209,
              128,
              208,
              176,
              208,
              188,
              208,
              188,
              208,
              189,
              209,
              139,
              209,
              133,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              208,
              191,
              209,
              128,
              208,
              184,
              208,
              187,
              208,
              190,
              208,
              182,
              208,
              181,
              208,
              189,
              208,
              184,
              209,
              143,
              209,
              133,
              44,
              32,
              209,
              136,
              209,
              128,
              208,
              184,
              209,
              132,
              209,
              130,
              208,
              176,
              209,
              133,
              44,
              32,
              208,
              178,
              208,
              181,
              209,
              128,
              209,
              129,
              209,
              130,
              208,
              186,
              208,
              181,
              32,
              208,
              184,
              32,
              208,
              188,
              208,
              189,
              208,
              190,
              208,
              179,
              208,
              190,
              209,
              143,
              208,
              183,
              209,
              139,
              209,
              135,
              208,
              189,
              209,
              139,
              209,
              133,
              32,
              208,
              186,
              208,
              190,
              208,
              188,
              208,
              191,
              209,
              140,
              209,
              142,
              209,
              130,
              208,
              181,
              209,
              128,
              208,
              189,
              209,
              139,
              209,
              133,
              32,
              209,
              129,
              208,
              184,
              209,
              129,
              209,
              130,
              208,
              181,
              208,
              188,
              208,
              176,
              209,
              133,
              46,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              84,
              104,
              97,
              105,
              32,
              40,
              85,
              67,
              83,
              32,
              76,
              101,
              118,
              101,
              108,
              32,
              50,
              41,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              69,
              120,
              99,
              101,
              114,
              112,
              116,
              32,
              102,
              114,
              111,
              109,
              32,
              97,
              32,
              112,
              111,
              101,
              116,
              114,
              121,
              32,
              111,
              110,
              32,
              84,
              104,
              101,
              32,
              82,
              111,
              109,
              97,
              110,
              99,
              101,
              32,
              111,
              102,
              32,
              84,
              104,
              101,
              32,
              84,
              104,
              114,
              101,
              101,
              32,
              75,
              105,
              110,
              103,
              100,
              111,
              109,
              115,
              32,
              40,
              97,
              32,
              67,
              104,
              105,
              110,
              101,
              115,
              101,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              99,
              108,
              97,
              115,
              115,
              105,
              99,
              32,
              39,
              83,
              97,
              110,
              32,
              71,
              117,
              97,
              39,
              41,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              91,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              124,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              45,
              93,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              185,
              143,
              32,
              224,
              185,
              129,
              224,
              184,
              156,
              224,
              185,
              136,
              224,
              184,
              153,
              224,
              184,
              148,
              224,
              184,
              180,
              224,
              184,
              153,
              224,
              184,
              174,
              224,
              184,
              177,
              224,
              185,
              136,
              224,
              184,
              153,
              224,
              185,
              128,
              224,
              184,
              170,
              224,
              184,
              183,
              224,
              185,
              136,
              224,
              184,
              173,
              224,
              184,
              161,
              224,
              185,
              130,
              224,
              184,
              151,
              224,
              184,
              163,
              224,
              184,
              161,
              224,
              185,
              129,
              224,
              184,
              170,
              224,
              184,
              153,
              224,
              184,
              170,
              224,
              184,
              177,
              224,
              184,
              135,
              224,
              185,
              128,
              224,
              184,
              167,
              224,
              184,
              138,
              32,
              32,
              224,
              184,
              158,
              224,
              184,
              163,
              224,
              184,
              176,
              224,
              184,
              155,
              224,
              184,
              129,
              224,
              185,
              128,
              224,
              184,
              129,
              224,
              184,
              168,
              224,
              184,
              129,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              184,
              154,
              224,
              184,
              185,
              224,
              185,
              138,
              224,
              184,
              129,
              224,
              184,
              185,
              224,
              185,
              137,
              224,
              184,
              130,
              224,
              184,
              182,
              224,
              185,
              137,
              224,
              184,
              153,
              224,
              185,
              131,
              224,
              184,
              171,
              224,
              184,
              161,
              224,
              185,
              136,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              170,
              224,
              184,
              180,
              224,
              184,
              154,
              224,
              184,
              170,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              184,
              129,
              224,
              184,
              169,
              224,
              184,
              177,
              224,
              184,
              149,
              224,
              184,
              163,
              224,
              184,
              180,
              224,
              184,
              162,
              224,
              185,
              140,
              224,
              184,
              129,
              224,
              185,
              136,
              224,
              184,
              173,
              224,
              184,
              153,
              224,
              184,
              171,
              224,
              184,
              153,
              224,
              185,
              137,
              224,
              184,
              178,
              224,
              185,
              129,
              224,
              184,
              165,
              224,
              184,
              150,
              224,
              184,
              177,
              224,
              184,
              148,
              224,
              185,
              132,
              224,
              184,
              155,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              170,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              184,
              132,
              224,
              185,
              140,
              224,
              185,
              132,
              224,
              184,
              139,
              224,
              184,
              163,
              224,
              185,
              137,
              224,
              185,
              130,
              224,
              184,
              135,
              224,
              185,
              136,
              224,
              185,
              128,
              224,
              184,
              130,
              224,
              184,
              165,
              224,
              184,
              178,
              224,
              185,
              128,
              224,
              184,
              154,
              224,
              184,
              178,
              224,
              184,
              155,
              224,
              184,
              177,
              224,
              184,
              141,
              224,
              184,
              141,
              224,
              184,
              178,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              151,
              224,
              184,
              163,
              224,
              184,
              135,
              224,
              184,
              153,
              224,
              184,
              177,
              224,
              184,
              154,
              224,
              184,
              150,
              224,
              184,
              183,
              224,
              184,
              173,
              224,
              184,
              130,
              224,
              184,
              177,
              224,
              184,
              153,
              224,
              184,
              151,
              224,
              184,
              181,
              224,
              185,
              128,
              224,
              184,
              155,
              224,
              185,
              135,
              224,
              184,
              153,
              224,
              184,
              151,
              224,
              184,
              181,
              224,
              185,
              136,
              224,
              184,
              158,
              224,
              184,
              182,
              224,
              185,
              136,
              224,
              184,
              135,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              154,
              224,
              185,
              137,
              224,
              184,
              178,
              224,
              184,
              153,
              224,
              185,
              128,
              224,
              184,
              161,
              224,
              184,
              183,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              184,
              136,
              224,
              184,
              182,
              224,
              184,
              135,
              224,
              184,
              167,
              224,
              184,
              180,
              224,
              184,
              155,
              224,
              184,
              163,
              224,
              184,
              180,
              224,
              184,
              149,
              224,
              185,
              128,
              224,
              184,
              155,
              224,
              185,
              135,
              224,
              184,
              153,
              224,
              184,
              153,
              224,
              184,
              177,
              224,
              184,
              129,
              224,
              184,
              171,
              224,
              184,
              153,
              224,
              184,
              178,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              185,
              130,
              224,
              184,
              174,
              224,
              184,
              136,
              224,
              184,
              180,
              224,
              185,
              139,
              224,
              184,
              153,
              224,
              185,
              128,
              224,
              184,
              163,
              224,
              184,
              181,
              224,
              184,
              162,
              224,
              184,
              129,
              224,
              184,
              151,
              224,
              184,
              177,
              224,
              184,
              158,
              224,
              184,
              151,
              224,
              184,
              177,
              224,
              185,
              136,
              224,
              184,
              167,
              224,
              184,
              171,
              224,
              184,
              177,
              224,
              184,
              167,
              224,
              185,
              128,
              224,
              184,
              161,
              224,
              184,
              183,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              184,
              161,
              224,
              184,
              178,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              171,
              224,
              184,
              161,
              224,
              184,
              178,
              224,
              184,
              162,
              224,
              184,
              136,
              224,
              184,
              176,
              224,
              184,
              134,
              224,
              185,
              136,
              224,
              184,
              178,
              224,
              184,
              161,
              224,
              184,
              148,
              224,
              184,
              138,
              224,
              184,
              177,
              224,
              185,
              136,
              224,
              184,
              167,
              224,
              184,
              149,
              224,
              184,
              177,
              224,
              184,
              167,
              224,
              184,
              170,
              224,
              184,
              179,
              224,
              184,
              132,
              224,
              184,
              177,
              224,
              184,
              141,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              185,
              128,
              224,
              184,
              171,
              224,
              184,
              161,
              224,
              184,
              183,
              224,
              184,
              173,
              224,
              184,
              153,
              224,
              184,
              130,
              224,
              184,
              177,
              224,
              184,
              154,
              224,
              185,
              132,
              224,
              184,
              170,
              224,
              185,
              132,
              224,
              184,
              165,
              224,
              185,
              136,
              224,
              185,
              128,
              224,
              184,
              170,
              224,
              184,
              183,
              224,
              184,
              173,
              224,
              184,
              136,
              224,
              184,
              178,
              224,
              184,
              129,
              224,
              185,
              128,
              224,
              184,
              132,
              224,
              184,
              171,
              224,
              184,
              178,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              163,
              224,
              184,
              177,
              224,
              184,
              154,
              224,
              184,
              171,
              224,
              184,
              161,
              224,
              184,
              178,
              224,
              184,
              155,
              224,
              185,
              136,
              224,
              184,
              178,
              224,
              185,
              128,
              224,
              184,
              130,
              224,
              185,
              137,
              224,
              184,
              178,
              224,
              184,
              161,
              224,
              184,
              178,
              224,
              185,
              128,
              224,
              184,
              165,
              224,
              184,
              162,
              224,
              184,
              173,
              224,
              184,
              178,
              224,
              184,
              170,
              224,
              184,
              177,
              224,
              184,
              141,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              157,
              224,
              185,
              136,
              224,
              184,
              178,
              224,
              184,
              162,
              224,
              184,
              173,
              224,
              185,
              137,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              184,
              173,
              224,
              184,
              184,
              224,
              185,
              137,
              224,
              184,
              153,
              224,
              184,
              162,
              224,
              184,
              184,
              224,
              185,
              129,
              224,
              184,
              162,
              224,
              184,
              129,
              224,
              185,
              131,
              224,
              184,
              171,
              224,
              185,
              137,
              224,
              185,
              129,
              224,
              184,
              149,
              224,
              184,
              129,
              224,
              184,
              129,
              224,
              184,
              177,
              224,
              184,
              153,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              185,
              131,
              224,
              184,
              138,
              224,
              185,
              137,
              224,
              184,
              170,
              224,
              184,
              178,
              224,
              184,
              167,
              224,
              184,
              153,
              224,
              184,
              177,
              224,
              185,
              137,
              224,
              184,
              153,
              224,
              185,
              128,
              224,
              184,
              155,
              224,
              185,
              135,
              224,
              184,
              153,
              224,
              184,
              138,
              224,
              184,
              153,
              224,
              184,
              167,
              224,
              184,
              153,
              224,
              184,
              138,
              224,
              184,
              183,
              224,
              185,
              136,
              224,
              184,
              153,
              224,
              184,
              138,
              224,
              184,
              167,
              224,
              184,
              153,
              224,
              185,
              131,
              224,
              184,
              136,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              158,
              224,
              184,
              165,
              224,
              184,
              177,
              224,
              184,
              153,
              224,
              184,
              165,
              224,
              184,
              180,
              224,
              184,
              137,
              224,
              184,
              184,
              224,
              184,
              162,
              224,
              184,
              129,
              224,
              184,
              184,
              224,
              184,
              162,
              224,
              184,
              129,
              224,
              184,
              181,
              224,
              184,
              129,
              224,
              184,
              165,
              224,
              184,
              177,
              224,
              184,
              154,
              224,
              184,
              129,
              224,
              185,
              136,
              224,
              184,
              173,
              224,
              185,
              128,
              224,
              184,
              171,
              224,
              184,
              149,
              224,
              184,
              184,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              138,
              224,
              185,
              136,
              224,
              184,
              178,
              224,
              184,
              135,
              224,
              184,
              173,
              224,
              184,
              178,
              224,
              185,
              128,
              224,
              184,
              158,
              224,
              184,
              168,
              224,
              184,
              136,
              224,
              184,
              163,
              224,
              184,
              180,
              224,
              184,
              135,
              224,
              184,
              171,
              224,
              184,
              153,
              224,
              184,
              178,
              224,
              184,
              159,
              224,
              185,
              137,
              224,
              184,
              178,
              224,
              184,
              163,
              224,
              185,
              137,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              185,
              132,
              224,
              184,
              171,
              224,
              185,
              137,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              149,
              224,
              185,
              137,
              224,
              184,
              173,
              224,
              184,
              135,
              224,
              184,
              163,
              224,
              184,
              154,
              224,
              184,
              163,
              224,
              184,
              178,
              224,
              184,
              134,
              224,
              185,
              136,
              224,
              184,
              178,
              224,
              184,
              159,
              224,
              184,
              177,
              224,
              184,
              153,
              224,
              184,
              136,
              224,
              184,
              153,
              224,
              184,
              154,
              224,
              184,
              163,
              224,
              184,
              163,
              224,
              184,
              165,
              224,
              184,
              177,
              224,
              184,
              162,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              224,
              184,
              164,
              224,
              185,
              133,
              224,
              184,
              171,
              224,
              184,
              178,
              224,
              185,
              131,
              224,
              184,
              132,
              224,
              184,
              163,
              224,
              184,
              132,
              224,
              185,
              137,
              224,
              184,
              179,
              224,
              184,
              138,
              224,
              184,
              185,
              224,
              184,
              129,
              224,
              184,
              185,
              224,
              185,
              137,
              224,
              184,
              154,
              224,
              184,
              163,
              224,
              184,
              163,
              224,
              184,
              165,
              224,
              184,
              177,
              224,
              184,
              135,
              224,
              184,
              129,
              224,
              185,
              140,
              32,
              224,
              184,
              175,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              40,
              84,
              104,
              101,
              32,
              97,
              98,
              111,
              118,
              101,
              32,
              105,
              115,
              32,
              97,
              32,
              116,
              119,
              111,
              45,
              99,
              111,
              108,
              117,
              109,
              110,
              32,
              116,
              101,
              120,
              116,
              46,
              32,
              73,
              102,
              32,
              99,
              111,
              109,
              98,
              105,
              110,
              105,
              110,
              103,
              32,
              99,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              115,
              32,
              97,
              114,
              101,
              32,
              104,
              97,
              110,
              100,
              108,
              101,
              100,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              99,
              111,
              114,
              114,
              101,
              99,
              116,
              108,
              121,
              44,
              32,
              116,
              104,
              101,
              32,
              108,
              105,
              110,
              101,
              115,
              32,
              111,
              102,
              32,
              116,
              104,
              101,
              32,
              115,
              101,
              99,
              111,
              110,
              100,
              32,
              99,
              111,
              108,
              117,
              109,
              110,
              32,
              115,
              104,
              111,
              117,
              108,
              100,
              32,
              98,
              101,
              32,
              97,
              108,
              105,
              103,
              110,
              101,
              100,
              32,
              119,
              105,
              116,
              104,
              32,
              116,
              104,
              101,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              124,
              32,
              99,
              104,
              97,
              114,
              97,
              99,
              116,
              101,
              114,
              32,
              97,
              98,
              111,
              118,
              101,
              46,
              41,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              69,
              116,
              104,
              105,
              111,
              112,
              105,
              97,
              110,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              80,
              114,
              111,
              118,
              101,
              114,
              98,
              115,
              32,
              105,
              110,
              32,
              116,
              104,
              101,
              32,
              65,
              109,
              104,
              97,
              114,
              105,
              99,
              32,
              108,
              97,
              110,
              103,
              117,
              97,
              103,
              101,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              136,
              176,
              225,
              136,
              155,
              225,
              139,
              173,
              32,
              225,
              138,
              160,
              225,
              139,
              173,
              225,
              137,
              179,
              225,
              136,
              168,
              225,
              136,
              181,
              32,
              225,
              138,
              149,
              225,
              140,
              137,
              225,
              136,
              165,
              32,
              225,
              138,
              160,
              225,
              139,
              173,
              225,
              138,
              168,
              225,
              136,
              176,
              225,
              136,
              181,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              137,
              165,
              225,
              136,
              139,
              32,
              225,
              138,
              171,
              225,
              136,
              136,
              225,
              138,
              157,
              32,
              225,
              138,
              165,
              225,
              138,
              149,
              225,
              139,
              176,
              225,
              138,
              160,
              225,
              137,
              163,
              225,
              137,
              180,
              32,
              225,
              137,
              160,
              225,
              137,
              134,
              225,
              136,
              152,
              225,
              140,
              160,
              225,
              138,
              157,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              140,
              140,
              225,
              140,
              165,
              32,
              225,
              139,
              171,
              225,
              136,
              136,
              225,
              137,
              164,
              225,
              137,
              177,
              32,
              225,
              137,
              129,
              225,
              136,
              157,
              225,
              140,
              165,
              225,
              138,
              147,
              32,
              225,
              138,
              144,
              225,
              139,
              141,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              139,
              176,
              225,
              136,
              128,
              32,
              225,
              137,
              160,
              225,
              136,
              149,
              225,
              136,
              141,
              225,
              136,
              153,
              32,
              225,
              137,
              133,
              225,
              137,
              164,
              32,
              225,
              137,
              163,
              225,
              139,
              173,
              225,
              140,
              160,
              225,
              140,
              163,
              32,
              225,
              138,
              149,
              225,
              140,
              163,
              225,
              137,
              181,
              32,
              225,
              137,
              160,
              225,
              140,
              136,
              225,
              139,
              176,
              225,
              136,
              136,
              225,
              139,
              141,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              139,
              168,
              225,
              138,
              160,
              225,
              141,
              141,
              32,
              225,
              139,
              136,
              225,
              136,
              136,
              225,
              136,
              157,
              225,
              137,
              179,
              32,
              225,
              137,
              160,
              225,
              137,
              133,
              225,
              137,
              164,
              32,
              225,
              138,
              160,
              225,
              139,
              173,
              225,
              137,
              179,
              225,
              136,
              189,
              225,
              136,
              157,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              138,
              160,
              225,
              139,
              173,
              225,
              140,
              165,
              32,
              225,
              137,
              160,
              225,
              137,
              160,
              225,
              136,
              139,
              32,
              225,
              139,
              179,
              225,
              139,
              139,
              32,
              225,
              137,
              176,
              225,
              136,
              152,
              225,
              137,
              179,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              136,
              178,
              225,
              137,
              176,
              225,
              136,
              168,
              225,
              140,
              137,
              225,
              136,
              153,
              32,
              225,
              139,
              173,
              225,
              139,
              176,
              225,
              136,
              168,
              225,
              140,
              141,
              225,
              136,
              153,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              137,
              128,
              225,
              136,
              181,
              32,
              225,
              137,
              160,
              225,
              137,
              128,
              225,
              136,
              181,
              225,
              141,
              165,
              32,
              225,
              139,
              149,
              225,
              138,
              149,
              225,
              137,
              129,
              225,
              136,
              139,
              225,
              136,
              141,
              32,
              225,
              137,
              160,
              225,
              138,
              165,
              225,
              140,
              141,
              225,
              136,
              169,
              32,
              225,
              139,
              173,
              225,
              136,
              132,
              225,
              139,
              179,
              225,
              136,
              141,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              139,
              181,
              225,
              136,
              173,
              32,
              225,
              137,
              162,
              225,
              139,
              171,
              225,
              137,
              165,
              225,
              136,
              173,
              32,
              225,
              138,
              160,
              225,
              138,
              149,
              225,
              137,
              160,
              225,
              136,
              179,
              32,
              225,
              139,
              171,
              225,
              136,
              181,
              225,
              136,
              173,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              136,
              176,
              225,
              139,
              141,
              32,
              225,
              138,
              165,
              225,
              138,
              149,
              225,
              139,
              176,
              225,
              137,
              164,
              225,
              137,
              177,
              32,
              225,
              138,
              165,
              225,
              138,
              149,
              225,
              140,
              133,
              32,
              225,
              138,
              165,
              225,
              138,
              149,
              225,
              139,
              176,
              32,
              225,
              140,
              137,
              225,
              136,
              168,
              225,
              137,
              164,
              225,
              137,
              177,
              32,
              225,
              138,
              160,
              225,
              139,
              173,
              225,
              137,
              176,
              225,
              139,
              179,
              225,
              139,
              176,
              225,
              136,
              173,
              225,
              136,
              157,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              138,
              165,
              225,
              140,
              141,
              225,
              139,
              156,
              225,
              136,
              173,
              32,
              225,
              139,
              168,
              225,
              138,
              168,
              225,
              141,
              136,
              225,
              137,
              176,
              225,
              139,
              141,
              225,
              138,
              149,
              32,
              225,
              140,
              137,
              225,
              136,
              174,
              225,
              136,
              174,
              32,
              225,
              136,
              179,
              225,
              139,
              173,
              225,
              139,
              152,
              225,
              140,
              139,
              225,
              139,
              141,
              32,
              225,
              138,
              160,
              225,
              139,
              173,
              225,
              139,
              181,
              225,
              136,
              173,
              225,
              136,
              157,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              139,
              168,
              225,
              140,
              142,
              225,
              136,
              168,
              225,
              137,
              164,
              225,
              137,
              181,
              32,
              225,
              136,
              140,
              225,
              137,
              163,
              225,
              141,
              165,
              32,
              225,
              137,
              162,
              225,
              139,
              171,
              225,
              139,
              169,
              225,
              137,
              181,
              32,
              225,
              139,
              173,
              225,
              136,
              181,
              225,
              137,
              133,
              32,
              225,
              137,
              163,
              225,
              139,
              171,
              225,
              139,
              169,
              225,
              137,
              181,
              32,
              225,
              139,
              171,
              225,
              140,
              160,
              225,
              136,
              141,
              225,
              137,
              133,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              136,
              165,
              225,
              136,
              171,
              32,
              225,
              138,
              168,
              225,
              136,
              152,
              225,
              141,
              141,
              225,
              137,
              179,
              225,
              137,
              181,
              32,
              225,
              136,
              141,
              225,
              140,
              132,
              225,
              138,
              149,
              32,
              225,
              136,
              139,
              225,
              141,
              139,
              225,
              137,
              179,
              225,
              137,
              181,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              139,
              147,
              225,
              137,
              163,
              225,
              139,
              173,
              32,
              225,
              136,
              155,
              225,
              139,
              176,
              225,
              136,
              170,
              225,
              139,
              171,
              32,
              225,
              139,
              168,
              225,
              136,
              136,
              225,
              139,
              141,
              225,
              141,
              165,
              32,
              225,
              140,
              141,
              225,
              138,
              149,
              225,
              139,
              181,
              32,
              225,
              139,
              173,
              225,
              139,
              158,
              32,
              225,
              139,
              173,
              225,
              139,
              158,
              225,
              136,
              171,
              225,
              136,
              141,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              139,
              168,
              225,
              138,
              165,
              225,
              136,
              181,
              225,
              136,
              139,
              225,
              136,
              157,
              32,
              225,
              138,
              160,
              225,
              140,
              136,
              225,
              136,
              169,
              32,
              225,
              136,
              152,
              225,
              138,
              171,
              32,
              225,
              139,
              168,
              225,
              138,
              160,
              225,
              136,
              158,
              225,
              136,
              171,
              32,
              225,
              138,
              160,
              225,
              140,
              136,
              225,
              136,
              169,
              32,
              225,
              139,
              139,
              225,
              136,
              173,
              225,
              138,
              171,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              137,
              176,
              225,
              138,
              149,
              225,
              140,
              139,
              225,
              136,
              142,
              32,
              225,
              137,
              162,
              225,
              137,
              176,
              225,
              141,
              137,
              32,
              225,
              137,
              176,
              225,
              136,
              152,
              225,
              136,
              141,
              225,
              136,
              182,
              32,
              225,
              137,
              163,
              225,
              141,
              137,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              139,
              136,
              225,
              139,
              179,
              225,
              140,
              133,
              225,
              136,
              133,
              32,
              225,
              136,
              155,
              225,
              136,
              173,
              32,
              225,
              137,
              162,
              225,
              136,
              134,
              225,
              138,
              149,
              32,
              225,
              140,
              168,
              225,
              136,
              173,
              225,
              136,
              181,
              225,
              136,
              133,
              32,
              225,
              138,
              160,
              225,
              137,
              181,
              225,
              136,
              139,
              225,
              136,
              176,
              225,
              139,
              141,
              225,
              141,
              162,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              138,
              165,
              225,
              140,
              141,
              225,
              136,
              173,
              225,
              136,
              133,
              225,
              138,
              149,
              32,
              225,
              137,
              160,
              225,
              141,
              141,
              225,
              136,
              171,
              225,
              136,
              189,
              225,
              136,
              133,
              32,
              225,
              136,
              141,
              225,
              138,
              173,
              32,
              225,
              139,
              152,
              225,
              136,
              173,
              225,
              140,
              139,
              225,
              141,
              162,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              82,
              117,
              110,
              101,
              115,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              225,
              154,
              187,
              225,
              155,
              150,
              32,
              225,
              154,
              179,
              225,
              154,
              185,
              225,
              154,
              171,
              225,
              154,
              166,
              32,
              225,
              154,
              166,
              225,
              154,
              171,
              225,
              155,
              143,
              32,
              225,
              154,
              187,
              225,
              155,
              150,
              32,
              225,
              155,
              146,
              225,
              154,
              162,
              225,
              155,
              158,
              225,
              155,
              150,
              32,
              225,
              154,
              169,
              225,
              154,
              190,
              32,
              225,
              154,
              166,
              225,
              154,
              171,
              225,
              155,
              151,
              32,
              225,
              155,
              154,
              225,
              154,
              170,
              225,
              154,
              190,
              225,
              155,
              158,
              225,
              155,
              150,
              32,
              225,
              154,
              190,
              225,
              154,
              169,
              225,
              154,
              177,
              225,
              154,
              166,
              225,
              154,
              185,
              225,
              155,
              150,
              225,
              154,
              170,
              225,
              154,
              177,
              225,
              155,
              158,
              225,
              154,
              162,
              225,
              155,
              151,
              32,
              225,
              154,
              185,
              225,
              155,
              129,
              225,
              154,
              166,
              32,
              225,
              154,
              166,
              225,
              154,
              170,
              32,
              225,
              154,
              185,
              225,
              155,
              150,
              225,
              155,
              165,
              225,
              154,
              171,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              40,
              79,
              108,
              100,
              32,
              69,
              110,
              103,
              108,
              105,
              115,
              104,
              44,
              32,
              119,
              104,
              105,
              99,
              104,
              32,
              116,
              114,
              97,
              110,
              115,
              99,
              114,
              105,
              98,
              101,
              100,
              32,
              105,
              110,
              116,
              111,
              32,
              76,
              97,
              116,
              105,
              110,
              32,
              114,
              101,
              97,
              100,
              115,
              32,
              39,
              72,
              101,
              32,
              99,
              119,
              97,
              101,
              116,
              104,
              32,
              116,
              104,
              97,
              116,
              32,
              104,
              101,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              98,
              117,
              100,
              101,
              32,
              116,
              104,
              97,
              101,
              109,
              32,
              108,
              97,
              110,
              100,
              101,
              32,
              110,
              111,
              114,
              116,
              104,
              119,
              101,
              97,
              114,
              100,
              117,
              109,
              32,
              119,
              105,
              116,
              104,
              32,
              116,
              104,
              97,
              32,
              87,
              101,
              115,
              116,
              115,
              97,
              101,
              46,
              39,
              32,
              97,
              110,
              100,
              32,
              109,
              101,
              97,
              110,
              115,
              32,
              39,
              72,
              101,
              32,
              115,
              97,
              105,
              100,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              116,
              104,
              97,
              116,
              32,
              104,
              101,
              32,
              108,
              105,
              118,
              101,
              100,
              32,
              105,
              110,
              32,
              116,
              104,
              101,
              32,
              110,
              111,
              114,
              116,
              104,
              101,
              114,
              110,
              32,
              108,
              97,
              110,
              100,
              32,
              110,
              101,
              97,
              114,
              32,
              116,
              104,
              101,
              32,
              87,
              101,
              115,
              116,
              101,
              114,
              110,
              32,
              83,
              101,
              97,
              46,
              39,
              41,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              66,
              114,
              97,
              105,
              108,
              108,
              101,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              161,
              140,
              226,
              160,
              129,
              226,
              160,
              167,
              226,
              160,
              145,
              32,
              226,
              160,
              188,
              226,
              160,
              129,
              226,
              160,
              146,
              32,
              32,
              226,
              161,
              141,
              226,
              160,
              156,
              226,
              160,
              135,
              226,
              160,
              145,
              226,
              160,
              185,
              226,
              160,
              176,
              226,
              160,
              142,
              32,
              226,
              161,
              163,
              226,
              160,
              149,
              226,
              160,
              140,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              161,
              141,
              226,
              160,
              156,
              226,
              160,
              135,
              226,
              160,
              145,
              226,
              160,
              185,
              32,
              226,
              160,
              186,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              153,
              226,
              160,
              145,
              226,
              160,
              129,
              226,
              160,
              153,
              226,
              160,
              146,
              32,
              226,
              160,
              158,
              226,
              160,
              149,
              32,
              226,
              160,
              131,
              226,
              160,
              145,
              226,
              160,
              155,
              226,
              160,
              148,
              32,
              226,
              160,
              186,
              226,
              160,
              138,
              226,
              160,
              185,
              226,
              160,
              178,
              32,
              226,
              161,
              185,
              226,
              160,
              187,
              226,
              160,
              145,
              32,
              226,
              160,
              138,
              226,
              160,
              142,
              32,
              226,
              160,
              157,
              226,
              160,
              149,
              32,
              226,
              160,
              153,
              226,
              160,
              179,
              226,
              160,
              131,
              226,
              160,
              158,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              177,
              226,
              160,
              129,
              226,
              160,
              158,
              226,
              160,
              145,
              226,
              160,
              167,
              226,
              160,
              187,
              32,
              226,
              160,
              129,
              226,
              160,
              131,
              226,
              160,
              179,
              226,
              160,
              158,
              32,
              226,
              160,
              185,
              226,
              160,
              129,
              226,
              160,
              158,
              226,
              160,
              178,
              32,
              226,
              161,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              151,
              226,
              160,
              145,
              226,
              160,
              155,
              226,
              160,
              138,
              226,
              160,
              140,
              226,
              160,
              187,
              32,
              226,
              160,
              149,
              226,
              160,
              139,
              32,
              226,
              160,
              153,
              226,
              160,
              138,
              226,
              160,
              142,
              32,
              226,
              160,
              131,
              226,
              160,
              165,
              226,
              160,
              151,
              226,
              160,
              138,
              226,
              160,
              129,
              226,
              160,
              135,
              32,
              226,
              160,
              186,
              226,
              160,
              129,
              226,
              160,
              142,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              142,
              226,
              160,
              138,
              226,
              160,
              155,
              226,
              160,
              157,
              226,
              160,
              171,
              32,
              226,
              160,
              131,
              226,
              160,
              185,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              138,
              226,
              160,
              135,
              226,
              160,
              187,
              226,
              160,
              155,
              226,
              160,
              185,
              226,
              160,
              141,
              226,
              160,
              129,
              226,
              160,
              157,
              226,
              160,
              130,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              138,
              226,
              160,
              135,
              226,
              160,
              187,
              226,
              160,
              133,
              226,
              160,
              130,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              165,
              226,
              160,
              157,
              226,
              160,
              153,
              226,
              160,
              187,
              226,
              160,
              158,
              226,
              160,
              129,
              226,
              160,
              133,
              226,
              160,
              187,
              226,
              160,
              130,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              129,
              226,
              160,
              157,
              226,
              160,
              153,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              161,
              226,
              160,
              138,
              226,
              160,
              145,
              226,
              160,
              139,
              32,
              226,
              160,
              141,
              226,
              160,
              179,
              226,
              160,
              151,
              226,
              160,
              157,
              226,
              160,
              187,
              226,
              160,
              178,
              32,
              226,
              161,
              142,
              226,
              160,
              138,
              226,
              160,
              151,
              226,
              160,
              149,
              226,
              160,
              149,
              226,
              160,
              155,
              226,
              160,
              145,
              32,
              226,
              160,
              142,
              226,
              160,
              138,
              226,
              160,
              155,
              226,
              160,
              157,
              226,
              160,
              171,
              32,
              226,
              160,
              138,
              226,
              160,
              158,
              226,
              160,
              178,
              32,
              226,
              161,
              129,
              226,
              160,
              157,
              226,
              160,
              153,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              161,
              142,
              226,
              160,
              138,
              226,
              160,
              151,
              226,
              160,
              149,
              226,
              160,
              149,
              226,
              160,
              155,
              226,
              160,
              145,
              226,
              160,
              176,
              226,
              160,
              142,
              32,
              226,
              160,
              157,
              226,
              160,
              129,
              226,
              160,
              141,
              226,
              160,
              145,
              32,
              226,
              160,
              186,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              155,
              226,
              160,
              149,
              226,
              160,
              149,
              226,
              160,
              153,
              32,
              226,
              160,
              165,
              226,
              160,
              143,
              226,
              160,
              149,
              226,
              160,
              157,
              32,
              226,
              160,
              176,
              226,
              161,
              161,
              226,
              160,
              129,
              226,
              160,
              157,
              226,
              160,
              155,
              226,
              160,
              145,
              226,
              160,
              130,
              32,
              226,
              160,
              139,
              226,
              160,
              149,
              226,
              160,
              151,
              32,
              226,
              160,
              129,
              226,
              160,
              157,
              226,
              160,
              185,
              226,
              160,
              185,
              226,
              160,
              148,
              226,
              160,
              155,
              32,
              226,
              160,
              153,
              226,
              160,
              145,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              161,
              226,
              160,
              149,
              226,
              160,
              142,
              226,
              160,
              145,
              32,
              226,
              160,
              158,
              226,
              160,
              149,
              32,
              226,
              160,
              143,
              226,
              160,
              165,
              226,
              160,
              158,
              32,
              226,
              160,
              153,
              226,
              160,
              138,
              226,
              160,
              142,
              32,
              226,
              160,
              153,
              226,
              160,
              129,
              226,
              160,
              157,
              226,
              160,
              153,
              32,
              226,
              160,
              158,
              226,
              160,
              149,
              226,
              160,
              178,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              161,
              149,
              226,
              160,
              135,
              226,
              160,
              153,
              32,
              226,
              161,
              141,
              226,
              160,
              156,
              226,
              160,
              135,
              226,
              160,
              145,
              226,
              160,
              185,
              32,
              226,
              160,
              186,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              153,
              226,
              160,
              145,
              226,
              160,
              129,
              226,
              160,
              153,
              32,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              129,
              32,
              226,
              160,
              153,
              226,
              160,
              149,
              226,
              160,
              149,
              226,
              160,
              151,
              226,
              160,
              164,
              226,
              160,
              157,
              226,
              160,
              129,
              226,
              160,
              138,
              226,
              160,
              135,
              226,
              160,
              178,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              161,
              141,
              226,
              160,
              148,
              226,
              160,
              153,
              226,
              160,
              150,
              32,
              226,
              161,
              138,
              32,
              226,
              160,
              153,
              226,
              160,
              149,
              226,
              160,
              157,
              226,
              160,
              176,
              226,
              160,
              158,
              32,
              226,
              160,
              141,
              226,
              160,
              145,
              226,
              160,
              129,
              226,
              160,
              157,
              32,
              226,
              160,
              158,
              226,
              160,
              149,
              32,
              226,
              160,
              142,
              226,
              160,
              129,
              226,
              160,
              185,
              32,
              226,
              160,
              185,
              226,
              160,
              129,
              226,
              160,
              158,
              32,
              226,
              161,
              138,
              32,
              226,
              160,
              133,
              226,
              160,
              157,
              226,
              160,
              170,
              226,
              160,
              130,
              32,
              226,
              160,
              149,
              226,
              160,
              139,
              32,
              226,
              160,
              141,
              226,
              160,
              185,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              170,
              226,
              160,
              157,
              32,
              226,
              160,
              133,
              226,
              160,
              157,
              226,
              160,
              170,
              226,
              160,
              135,
              226,
              160,
              171,
              226,
              160,
              155,
              226,
              160,
              145,
              226,
              160,
              130,
              32,
              226,
              160,
              177,
              226,
              160,
              129,
              226,
              160,
              158,
              32,
              226,
              160,
              185,
              226,
              160,
              187,
              226,
              160,
              145,
              32,
              226,
              160,
              138,
              226,
              160,
              142,
              32,
              226,
              160,
              143,
              226,
              160,
              156,
              226,
              160,
              158,
              226,
              160,
              138,
              226,
              160,
              138,
              226,
              160,
              165,
              226,
              160,
              135,
              226,
              160,
              156,
              226,
              160,
              135,
              226,
              160,
              185,
              32,
              226,
              160,
              153,
              226,
              160,
              145,
              226,
              160,
              129,
              226,
              160,
              153,
              32,
              226,
              160,
              129,
              226,
              160,
              131,
              226,
              160,
              179,
              226,
              160,
              158,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              129,
              32,
              226,
              160,
              153,
              226,
              160,
              149,
              226,
              160,
              149,
              226,
              160,
              151,
              226,
              160,
              164,
              226,
              160,
              157,
              226,
              160,
              129,
              226,
              160,
              138,
              226,
              160,
              135,
              226,
              160,
              178,
              32,
              226,
              161,
              138,
              32,
              226,
              160,
              141,
              226,
              160,
              138,
              226,
              160,
              163,
              226,
              160,
              158,
              32,
              226,
              160,
              153,
              226,
              160,
              129,
              226,
              160,
              167,
              226,
              160,
              145,
              32,
              226,
              160,
              131,
              226,
              160,
              145,
              226,
              160,
              178,
              32,
              226,
              160,
              148,
              226,
              160,
              138,
              226,
              160,
              135,
              226,
              160,
              148,
              226,
              160,
              171,
              226,
              160,
              130,
              32,
              226,
              160,
              141,
              226,
              160,
              185,
              226,
              160,
              142,
              226,
              160,
              145,
              226,
              160,
              135,
              226,
              160,
              139,
              226,
              160,
              130,
              32,
              226,
              160,
              158,
              226,
              160,
              149,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              151,
              226,
              160,
              145,
              226,
              160,
              155,
              226,
              160,
              156,
              226,
              160,
              153,
              32,
              226,
              160,
              129,
              32,
              226,
              160,
              138,
              226,
              160,
              149,
              226,
              160,
              139,
              226,
              160,
              139,
              226,
              160,
              148,
              226,
              160,
              164,
              226,
              160,
              157,
              226,
              160,
              129,
              226,
              160,
              138,
              226,
              160,
              135,
              32,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              153,
              226,
              160,
              145,
              226,
              160,
              129,
              226,
              160,
              153,
              226,
              160,
              145,
              226,
              160,
              140,
              32,
              226,
              160,
              143,
              226,
              160,
              138,
              226,
              160,
              145,
              226,
              160,
              138,
              226,
              160,
              145,
              32,
              226,
              160,
              149,
              226,
              160,
              139,
              32,
              226,
              160,
              138,
              226,
              160,
              151,
              226,
              160,
              149,
              226,
              160,
              157,
              226,
              160,
              141,
              226,
              160,
              149,
              226,
              160,
              157,
              226,
              160,
              155,
              226,
              160,
              187,
              226,
              160,
              185,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              148,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              158,
              226,
              160,
              151,
              226,
              160,
              129,
              226,
              160,
              153,
              226,
              160,
              145,
              226,
              160,
              178,
              32,
              226,
              161,
              131,
              226,
              160,
              165,
              226,
              160,
              158,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              186,
              226,
              160,
              138,
              226,
              160,
              142,
              226,
              160,
              153,
              226,
              160,
              149,
              226,
              160,
              141,
              32,
              226,
              160,
              149,
              226,
              160,
              139,
              32,
              226,
              160,
              179,
              226,
              160,
              151,
              32,
              226,
              160,
              129,
              226,
              160,
              157,
              226,
              160,
              138,
              226,
              160,
              145,
              226,
              160,
              140,
              226,
              160,
              149,
              226,
              160,
              151,
              226,
              160,
              142,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              138,
              226,
              160,
              142,
              32,
              226,
              160,
              148,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              160,
              142,
              226,
              160,
              138,
              226,
              160,
              141,
              226,
              160,
              138,
              226,
              160,
              135,
              226,
              160,
              145,
              226,
              160,
              134,
              32,
              226,
              160,
              129,
              226,
              160,
              157,
              226,
              160,
              153,
              32,
              226,
              160,
              141,
              226,
              160,
              185,
              32,
              226,
              160,
              165,
              226,
              160,
              157,
              226,
              160,
              153,
              226,
              160,
              129,
              226,
              160,
              135,
              226,
              160,
              135,
              226,
              160,
              170,
              226,
              160,
              171,
              32,
              226,
              160,
              153,
              226,
              160,
              129,
              226,
              160,
              157,
              226,
              160,
              153,
              226,
              160,
              142,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              169,
              226,
              160,
              129,
              226,
              160,
              135,
              226,
              160,
              135,
              32,
              226,
              160,
              157,
              226,
              160,
              149,
              226,
              160,
              158,
              32,
              226,
              160,
              153,
              226,
              160,
              138,
              226,
              160,
              140,
              226,
              160,
              165,
              226,
              160,
              151,
              226,
              160,
              131,
              32,
              226,
              160,
              138,
              226,
              160,
              158,
              226,
              160,
              130,
              32,
              226,
              160,
              149,
              226,
              160,
              151,
              32,
              226,
              160,
              185,
              226,
              160,
              145,
              32,
              226,
              161,
              138,
              226,
              160,
              179,
              226,
              160,
              157,
              226,
              160,
              158,
              226,
              160,
              151,
              226,
              160,
              185,
              226,
              160,
              176,
              226,
              160,
              142,
              32,
              226,
              160,
              153,
              226,
              160,
              149,
              226,
              160,
              157,
              226,
              160,
              145,
              32,
              226,
              160,
              139,
              226,
              160,
              149,
              226,
              160,
              151,
              226,
              160,
              178,
              32,
              226,
              161,
              185,
              226,
              160,
              179,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              160,
              186,
              226,
              160,
              138,
              226,
              160,
              135,
              226,
              160,
              135,
              32,
              226,
              160,
              185,
              226,
              160,
              187,
              226,
              160,
              145,
              226,
              160,
              139,
              226,
              160,
              149,
              226,
              160,
              151,
              226,
              160,
              145,
              32,
              226,
              160,
              143,
              226,
              160,
              187,
              226,
              160,
              141,
              226,
              160,
              138,
              226,
              160,
              158,
              32,
              226,
              160,
              141,
              226,
              160,
              145,
              32,
              226,
              160,
              158,
              226,
              160,
              149,
              32,
              226,
              160,
              151,
              226,
              160,
              145,
              226,
              160,
              143,
              226,
              160,
              145,
              226,
              160,
              129,
              226,
              160,
              158,
              226,
              160,
              130,
              32,
              226,
              160,
              145,
              226,
              160,
              141,
              226,
              160,
              143,
              226,
              160,
              153,
              226,
              160,
              129,
              226,
              160,
              158,
              226,
              160,
              138,
              226,
              160,
              138,
              226,
              160,
              129,
              226,
              160,
              135,
              226,
              160,
              135,
              226,
              160,
              185,
              226,
              160,
              130,
              32,
              226,
              160,
              185,
              226,
              160,
              129,
              226,
              160,
              158,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              161,
              141,
              226,
              160,
              156,
              226,
              160,
              135,
              226,
              160,
              145,
              226,
              160,
              185,
              32,
              226,
              160,
              186,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              153,
              226,
              160,
              145,
              226,
              160,
              129,
              226,
              160,
              153,
              32,
              226,
              160,
              129,
              226,
              160,
              142,
              32,
              226,
              160,
              129,
              32,
              226,
              160,
              153,
              226,
              160,
              149,
              226,
              160,
              149,
              226,
              160,
              151,
              226,
              160,
              164,
              226,
              160,
              157,
              226,
              160,
              129,
              226,
              160,
              138,
              226,
              160,
              135,
              226,
              160,
              178,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              40,
              84,
              104,
              101,
              32,
              102,
              105,
              114,
              115,
              116,
              32,
              99,
              111,
              117,
              112,
              108,
              101,
              32,
              111,
              102,
              32,
              112,
              97,
              114,
              97,
              103,
              114,
              97,
              112,
              104,
              115,
              32,
              111,
              102,
              32,
              34,
              65,
              32,
              67,
              104,
              114,
              105,
              115,
              116,
              109,
              97,
              115,
              32,
              67,
              97,
              114,
              111,
              108,
              34,
              32,
              98,
              121,
              32,
              68,
              105,
              99,
              107,
              101,
              110,
              115,
              41,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              67,
              111,
              109,
              112,
              97,
              99,
              116,
              32,
              102,
              111,
              110,
              116,
              32,
              115,
              101,
              108,
              101,
              99,
              116,
              105,
              111,
              110,
              32,
              101,
              120,
              97,
              109,
              112,
              108,
              101,
              32,
              116,
              101,
              120,
              116,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              65,
              66,
              67,
              68,
              69,
              70,
              71,
              72,
              73,
              74,
              75,
              76,
              77,
              78,
              79,
              80,
              81,
              82,
              83,
              84,
              85,
              86,
              87,
              88,
              89,
              90,
              32,
              47,
              48,
              49,
              50,
              51,
              52,
              53,
              54,
              55,
              56,
              57,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              97,
              98,
              99,
              100,
              101,
              102,
              103,
              104,
              105,
              106,
              107,
              108,
              109,
              110,
              111,
              112,
              113,
              114,
              115,
              116,
              117,
              118,
              119,
              120,
              121,
              122,
              32,
              194,
              163,
              194,
              169,
              194,
              181,
              195,
              128,
              195,
              134,
              195,
              150,
              195,
              158,
              195,
              159,
              195,
              169,
              195,
              182,
              195,
              191,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              128,
              147,
              226,
              128,
              148,
              226,
              128,
              152,
              226,
              128,
              156,
              226,
              128,
              157,
              226,
              128,
              158,
              226,
              128,
              160,
              226,
              128,
              162,
              226,
              128,
              166,
              226,
              128,
              176,
              226,
              132,
              162,
              197,
              147,
              197,
              160,
              197,
              184,
              197,
              190,
              226,
              130,
              172,
              32,
              206,
              145,
              206,
              146,
              206,
              147,
              206,
              148,
              206,
              169,
              206,
              177,
              206,
              178,
              206,
              179,
              206,
              180,
              207,
              137,
              32,
              208,
              144,
              208,
              145,
              208,
              146,
              208,
              147,
              208,
              148,
              208,
              176,
              208,
              177,
              208,
              178,
              208,
              179,
              208,
              180,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              136,
              128,
              226,
              136,
              130,
              226,
              136,
              136,
              226,
              132,
              157,
              226,
              136,
              167,
              226,
              136,
              170,
              226,
              137,
              161,
              226,
              136,
              158,
              32,
              226,
              134,
              145,
              226,
              134,
              151,
              226,
              134,
              168,
              226,
              134,
              187,
              226,
              135,
              163,
              32,
              226,
              148,
              144,
              226,
              148,
              188,
              226,
              149,
              148,
              226,
              149,
              152,
              226,
              150,
              145,
              226,
              150,
              186,
              226,
              152,
              186,
              226,
              153,
              128,
              32,
              239,
              172,
              129,
              239,
              191,
              189,
              226,
              145,
              128,
              226,
              130,
              130,
              225,
              188,
              160,
              225,
              184,
              130,
              211,
              165,
              225,
              186,
              132,
              201,
              144,
              203,
              144,
              226,
              141,
              142,
              215,
              144,
              212,
              177,
              225,
              131,
              144,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              71,
              114,
              101,
              101,
              116,
              105,
              110,
              103,
              115,
              32,
              105,
              110,
              32,
              118,
              97,
              114,
              105,
              111,
              117,
              115,
              32,
              108,
              97,
              110,
              103,
              117,
              97,
              103,
              101,
              115,
              58,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              72,
              101,
              108,
              108,
              111,
              32,
              119,
              111,
              114,
              108,
              100,
              44,
              32,
              206,
              154,
              206,
              177,
              206,
              187,
              206,
              183,
              206,
              188,
              225,
              189,
              179,
              207,
              129,
              206,
              177,
              32,
              206,
              186,
              225,
              189,
              185,
              207,
              131,
              206,
              188,
              206,
              181,
              44,
              32,
              227,
              130,
              179,
              227,
              131,
              179,
              227,
              131,
              139,
              227,
              131,
              129,
              227,
              131,
              143,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              66,
              111,
              120,
              32,
              100,
              114,
              97,
              119,
              105,
              110,
              103,
              32,
              97,
              108,
              105,
              103,
              110,
              109,
              101,
              110,
              116,
              32,
              116,
              101,
              115,
              116,
              115,
              58,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              150,
              136,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              150,
              137,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              148,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              166,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              151,
              32,
              32,
              226,
              148,
              140,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              172,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              144,
              32,
              32,
              226,
              149,
              173,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              172,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              149,
              174,
              32,
              32,
              226,
              149,
              173,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              172,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              149,
              174,
              32,
              32,
              226,
              148,
              143,
              226,
              148,
              129,
              226,
              148,
              129,
              226,
              148,
              179,
              226,
              148,
              129,
              226,
              148,
              129,
              226,
              148,
              147,
              32,
              32,
              226,
              148,
              142,
              226,
              148,
              146,
              226,
              148,
              143,
              226,
              148,
              145,
              32,
              32,
              32,
              226,
              149,
              183,
              32,
              32,
              226,
              149,
              187,
              32,
              226,
              148,
              143,
              226,
              148,
              175,
              226,
              148,
              147,
              32,
              226,
              148,
              140,
              226,
              148,
              176,
              226,
              148,
              144,
              32,
              32,
              32,
              32,
              226,
              150,
              138,
              32,
              226,
              149,
              177,
              226,
              149,
              178,
              226,
              149,
              177,
              226,
              149,
              178,
              226,
              149,
              179,
              226,
              149,
              179,
              226,
              149,
              179,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              226,
              148,
              140,
              226,
              148,
              128,
              226,
              149,
              168,
              226,
              148,
              128,
              226,
              148,
              144,
              226,
              149,
              145,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              148,
              226,
              149,
              144,
              226,
              149,
              167,
              226,
              149,
              144,
              226,
              149,
              151,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              146,
              226,
              149,
              144,
              226,
              149,
              170,
              226,
              149,
              144,
              226,
              149,
              149,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              147,
              226,
              148,
              128,
              226,
              149,
              129,
              226,
              148,
              128,
              226,
              149,
              150,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              131,
              226,
              148,
              140,
              226,
              148,
              128,
              226,
              149,
              130,
              226,
              148,
              128,
              226,
              148,
              144,
              226,
              148,
              131,
              32,
              32,
              226,
              148,
              151,
              226,
              149,
              131,
              226,
              149,
              132,
              226,
              148,
              153,
              32,
              32,
              226,
              149,
              182,
              226,
              148,
              188,
              226,
              149,
              180,
              226,
              149,
              186,
              226,
              149,
              139,
              226,
              149,
              184,
              226,
              148,
              160,
              226,
              148,
              188,
              226,
              148,
              168,
              32,
              226,
              148,
              157,
              226,
              149,
              139,
              226,
              148,
              165,
              32,
              32,
              32,
              32,
              226,
              150,
              139,
              32,
              226,
              149,
              178,
              226,
              149,
              177,
              226,
              149,
              178,
              226,
              149,
              177,
              226,
              149,
              179,
              226,
              149,
              179,
              226,
              149,
              179,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              226,
              148,
              130,
              226,
              149,
              178,
              32,
              226,
              149,
              177,
              226,
              148,
              130,
              226,
              149,
              145,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              149,
              145,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              130,
              226,
              148,
              130,
              32,
              226,
              148,
              130,
              32,
              226,
              148,
              130,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              145,
              32,
              226,
              148,
              131,
              32,
              226,
              149,
              145,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              131,
              226,
              148,
              130,
              32,
              226,
              149,
              191,
              32,
              226,
              148,
              130,
              226,
              148,
              131,
              32,
              32,
              226,
              148,
              141,
              226,
              149,
              133,
              226,
              149,
              134,
              226,
              148,
              147,
              32,
              32,
              32,
              226,
              149,
              181,
              32,
              32,
              226,
              149,
              185,
              32,
              226,
              148,
              151,
              226,
              148,
              183,
              226,
              148,
              155,
              32,
              226,
              148,
              148,
              226,
              148,
              184,
              226,
              148,
              152,
              32,
              32,
              32,
              32,
              226,
              150,
              140,
              32,
              226,
              149,
              177,
              226,
              149,
              178,
              226,
              149,
              177,
              226,
              149,
              178,
              226,
              149,
              179,
              226,
              149,
              179,
              226,
              149,
              179,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              160,
              226,
              149,
              161,
              32,
              226,
              149,
              179,
              32,
              226,
              149,
              158,
              226,
              149,
              163,
              32,
              32,
              226,
              148,
              156,
              226,
              149,
              162,
              32,
              32,
              32,
              226,
              149,
              159,
              226,
              148,
              164,
              32,
              32,
              226,
              148,
              156,
              226,
              148,
              188,
              226,
              148,
              128,
              226,
              148,
              188,
              226,
              148,
              128,
              226,
              148,
              188,
              226,
              148,
              164,
              32,
              32,
              226,
              148,
              156,
              226,
              149,
              171,
              226,
              148,
              128,
              226,
              149,
              130,
              226,
              148,
              128,
              226,
              149,
              171,
              226,
              148,
              164,
              32,
              32,
              226,
              148,
              163,
              226,
              148,
              191,
              226,
              149,
              190,
              226,
              148,
              188,
              226,
              149,
              188,
              226,
              148,
              191,
              226,
              148,
              171,
              32,
              32,
              226,
              148,
              149,
              226,
              148,
              155,
              226,
              148,
              150,
              226,
              148,
              154,
              32,
              32,
              32,
              32,
              32,
              226,
              148,
              140,
              226,
              148,
              132,
              226,
              148,
              132,
              226,
              148,
              144,
              32,
              226,
              149,
              142,
              32,
              226,
              148,
              143,
              226,
              148,
              133,
              226,
              148,
              133,
              226,
              148,
              147,
              32,
              226,
              148,
              139,
              32,
              226,
              150,
              141,
              32,
              226,
              149,
              178,
              226,
              149,
              177,
              226,
              149,
              178,
              226,
              149,
              177,
              226,
              149,
              179,
              226,
              149,
              179,
              226,
              149,
              179,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              226,
              148,
              130,
              226,
              149,
              177,
              32,
              226,
              149,
              178,
              226,
              148,
              130,
              226,
              149,
              145,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              145,
              32,
              32,
              32,
              226,
              149,
              145,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              130,
              226,
              148,
              130,
              32,
              226,
              148,
              130,
              32,
              226,
              148,
              130,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              145,
              32,
              226,
              148,
              131,
              32,
              226,
              149,
              145,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              131,
              226,
              148,
              130,
              32,
              226,
              149,
              189,
              32,
              226,
              148,
              130,
              226,
              148,
              131,
              32,
              32,
              226,
              150,
              145,
              226,
              150,
              145,
              226,
              150,
              146,
              226,
              150,
              146,
              226,
              150,
              147,
              226,
              150,
              147,
              226,
              150,
              136,
              226,
              150,
              136,
              32,
              226,
              148,
              138,
              32,
              32,
              226,
              148,
              134,
              32,
              226,
              149,
              142,
              32,
              226,
              149,
              143,
              32,
              32,
              226,
              148,
              135,
              32,
              226,
              148,
              139,
              32,
              226,
              150,
              142,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              145,
              226,
              148,
              148,
              226,
              148,
              128,
              226,
              149,
              165,
              226,
              148,
              128,
              226,
              148,
              152,
              226,
              149,
              145,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              154,
              226,
              149,
              144,
              226,
              149,
              164,
              226,
              149,
              144,
              226,
              149,
              157,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              152,
              226,
              149,
              144,
              226,
              149,
              170,
              226,
              149,
              144,
              226,
              149,
              155,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              130,
              226,
              149,
              153,
              226,
              148,
              128,
              226,
              149,
              128,
              226,
              148,
              128,
              226,
              149,
              156,
              226,
              148,
              130,
              32,
              32,
              226,
              148,
              131,
              226,
              148,
              148,
              226,
              148,
              128,
              226,
              149,
              130,
              226,
              148,
              128,
              226,
              148,
              152,
              226,
              148,
              131,
              32,
              32,
              226,
              150,
              145,
              226,
              150,
              145,
              226,
              150,
              146,
              226,
              150,
              146,
              226,
              150,
              147,
              226,
              150,
              147,
              226,
              150,
              136,
              226,
              150,
              136,
              32,
              226,
              148,
              138,
              32,
              32,
              226,
              148,
              134,
              32,
              226,
              149,
              142,
              32,
              226,
              149,
              143,
              32,
              32,
              226,
              148,
              135,
              32,
              226,
              148,
              139,
              32,
              226,
              150,
              143,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              149,
              154,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              169,
              226,
              149,
              144,
              226,
              149,
              144,
              226,
              149,
              157,
              32,
              32,
              226,
              148,
              148,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              180,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              152,
              32,
              32,
              226,
              149,
              176,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              180,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              149,
              175,
              32,
              32,
              226,
              149,
              176,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              148,
              180,
              226,
              148,
              128,
              226,
              148,
              128,
              226,
              149,
              175,
              32,
              32,
              226,
              148,
              151,
              226,
              148,
              129,
              226,
              148,
              129,
              226,
              148,
              187,
              226,
              148,
              129,
              226,
              148,
              129,
              226,
              148,
              155,
              32,
              32,
              226,
              150,
              151,
              226,
              150,
              132,
              226,
              150,
              150,
              226,
              150,
              155,
              226,
              150,
              128,
              226,
              150,
              156,
              32,
              32,
              32,
              226,
              148,
              148,
              226,
              149,
              140,
              226,
              149,
              140,
              226,
              148,
              152,
              32,
              226,
              149,
              142,
              32,
              226,
              148,
              151,
              226,
              149,
              141,
              226,
              149,
              141,
              226,
              148,
              155,
              32,
              226,
              148,
              139,
              32,
              32,
              226,
              150,
              129,
              226,
              150,
              130,
              226,
              150,
              131,
              226,
              150,
              132,
              226,
              150,
              133,
              226,
              150,
              134,
              226,
              150,
              135,
              226,
              150,
              136,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              226,
              150,
              157,
              226,
              150,
              128,
              226,
              150,
              152,
              226,
              150,
              153,
              226,
              150,
              132,
              226,
              150,
              159,
              10,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              32,
              60,
              47,
              112,
              114,
              101,
              62,
              10,
              32,
              32,
              32,
              32,
              32,
              32,
              60,
              47,
              98,
              111,
              100,
              121,
              62,
              10,
              32,
              32,
              32,
              32,
              60,
              47,
              104,
              116,
              109,
              108,
              62,
              10,
              32,
              32
            ]
          },
          "cookie": [],
          "responseTime": 193,
          "responseSize": 15630
        },
        "id": "29d29021-46cb-4798-a8ab-38814993f9b7",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "response has charset in content-type header"
          },
          {
            "assertion": "response has chunked transfer encoding header"
          }
        ]
      },
      {
        "cursor": {
          "ref": "53fb160f-8c70-408c-b87d-ef5c437a5606",
          "length": 37,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "3acda9d3-38b4-4610-81d8-a413f90b39b5"
        },
        "item": {
          "_": {},
          "id": "e3d3aae6-6e77-4781-9a3f-d3d87f7ecbd0",
          "name": "GZip Compressed Response",
          "request": {
            "description": {
              "content": "This endpoint returns the response using [gzip compression algoritm](https://en.wikipedia.org/wiki/Gzip).\nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `gzip` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "gzip"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "de2a52b5-db42-42b2-ad93-0dc0e1c5a6b5",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has valid json body\", function () {",
                  "    pm.response.to.have.jsonBody('gzipped', true);",
                  "});",
                  "",
                  "pm.test('response headers should indicate valid content encoding', function  () {",
                  "    pm.response.to.have.header('content-encoding', 'gzip')",
                  "        .and.have.header('content-type', 'application/json');",
                  "});",
                  "",
                  "pm.test('requesting http client should accept compressed response', function () {",
                  "    pm.expect(pm.response.json()).to.have.nested.property('headers.accept-encoding')",
                  "        .and.to.match(/.*gzip.*/);",
                  "});"
                ],
                "_lastExecutionId": "b61ed17a-2536-4a14-ae83-28b935232556"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint returns the response using [gzip compression algoritm](https://en.wikipedia.org/wiki/Gzip).\nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `gzip` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "gzip"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3ANsJBkhGnyCdpnyP82ejLAP0AY2RIbhhK.UzRufklTodfUNT5z9oUQTQNBCoqehq2zlmjtPMN%2BqeA"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "response": {
          "id": "013320c6-c66d-4e4f-9f1f-3f6b4839e4a1",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:25 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"115-Gttnz6Tc6sjy6nCJcYPKrQ\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3ALKlPCPmlG8OvwXYzThoE9Pg6im3vknie.2%2F25nceW8Jh5lsURqQLMA3kJ%2BjJ%2Fah0UxazsfCUxO90; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "277"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              34,
              103,
              122,
              105,
              112,
              112,
              101,
              100,
              34,
              58,
              32,
              116,
              114,
              117,
              101,
              44,
              10,
              32,
              32,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              32,
              34,
              42,
              47,
              42,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              32,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              32,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              78,
              115,
              74,
              66,
              107,
              104,
              71,
              110,
              121,
              67,
              100,
              112,
              110,
              121,
              80,
              56,
              50,
              101,
              106,
              76,
              65,
              80,
              48,
              65,
              89,
              50,
              82,
              73,
              98,
              104,
              104,
              75,
              46,
              85,
              122,
              82,
              117,
              102,
              107,
              108,
              84,
              111,
              100,
              102,
              85,
              78,
              84,
              53,
              122,
              57,
              111,
              85,
              81,
              84,
              81,
              78,
              66,
              67,
              111,
              113,
              101,
              104,
              113,
              50,
              122,
              108,
              109,
              106,
              116,
              80,
              77,
              78,
              37,
              50,
              66,
              113,
              101,
              65,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              32,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              49,
              46,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              32,
              34,
              52,
              52,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              32,
              34,
              71,
              69,
              84,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 190,
          "responseSize": 369
        },
        "id": "e3d3aae6-6e77-4781-9a3f-d3d87f7ecbd0",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "response has valid json body"
          },
          {
            "assertion": "response headers should indicate valid content encoding"
          },
          {
            "assertion": "requesting http client should accept compressed response"
          }
        ]
      },
      {
        "cursor": {
          "ref": "7f8419ed-03b7-403e-8cf8-6b09b46d991b",
          "length": 37,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "75c9c075-80a8-4bf8-8e65-f3f37b3ca314"
        },
        "item": {
          "_": {},
          "id": "d1358fb9-3dd7-47e1-8568-ea8a39f7bd4f",
          "name": "Deflate Compressed Response",
          "request": {
            "description": {
              "content": "This endpoint returns the response using [deflate compression algoritm](https://en.wikipedia.org/wiki/DEFLATE). \nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `deflate` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "deflate"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7cbafd17-5af9-4f92-a63a-f8f47a55a538",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has valid json body\", function () {",
                  "    pm.response.to.have.jsonBody('deflated', true);",
                  "});",
                  "",
                  "pm.test('response headers should indicate valid content encoding', function  () {",
                  "    pm.response.to.have.header('content-encoding', 'deflate')",
                  "        .and.have.header('content-type', 'application/json');",
                  "});",
                  "",
                  "pm.test('requesting http client should accept compressed response', function () {",
                  "    pm.expect(pm.response.json()).to.have.nested.property('headers.accept-encoding')",
                  "        .and.to.match(/.*deflate.*/);",
                  "});"
                ],
                "_lastExecutionId": "f427ec03-6166-49eb-b72d-293a92cdf473"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "This endpoint returns the response using [deflate compression algoritm](https://en.wikipedia.org/wiki/DEFLATE). \nThe uncompressed response is a JSON string containing the details of the request sent by the client. For this endpoint to work, one should request with `Accept-encoding` header containing `deflate` as part of its value. Postman supports gzip, deflate and SDCH decoding and automatically sends them as part of the request.\n\nHTTP Compression allows the server to send responses in a compressed format, which is uncompressed by the client before processing. This reduces network bandwidth consumption at the cost of increase in CPU usage.\nTo know more about this, refer the [HTTP Compression](https://en.wikipedia.org/wiki/HTTP_compression) wikipedia article.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "deflate"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3ALKlPCPmlG8OvwXYzThoE9Pg6im3vknie.2%2F25nceW8Jh5lsURqQLMA3kJ%2BjJ%2Fah0UxazsfCUxO90"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "response": {
          "id": "d12395da-2e62-4ed3-8a5f-ba847f9f46fa",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Encoding",
              "value": "deflate"
            },
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:25 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"10d-0aT9iq8tn2ufRoNGAIfCSw\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AK-uMeA2EkEk-leVHgHGy6p06CykhChgN.2EX%2Fr78WlQ74wIkFNkYkXagW61IKfb40gEgGf3hrEQk; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "269"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              10,
              32,
              32,
              34,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              100,
              34,
              58,
              32,
              116,
              114,
              117,
              101,
              44,
              10,
              32,
              32,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              32,
              123,
              10,
              32,
              32,
              32,
              32,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              32,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              34,
              58,
              32,
              34,
              42,
              47,
              42,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              97,
              99,
              99,
              101,
              112,
              116,
              45,
              101,
              110,
              99,
              111,
              100,
              105,
              110,
              103,
              34,
              58,
              32,
              34,
              103,
              122,
              105,
              112,
              44,
              32,
              100,
              101,
              102,
              108,
              97,
              116,
              101,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              99,
              111,
              111,
              107,
              105,
              101,
              34,
              58,
              32,
              34,
              115,
              97,
              105,
              108,
              115,
              46,
              115,
              105,
              100,
              61,
              115,
              37,
              51,
              65,
              76,
              75,
              108,
              80,
              67,
              80,
              109,
              108,
              71,
              56,
              79,
              118,
              119,
              88,
              89,
              122,
              84,
              104,
              111,
              69,
              57,
              80,
              103,
              54,
              105,
              109,
              51,
              118,
              107,
              110,
              105,
              101,
              46,
              50,
              37,
              50,
              70,
              50,
              53,
              110,
              99,
              101,
              87,
              56,
              74,
              104,
              53,
              108,
              115,
              85,
              82,
              113,
              81,
              76,
              77,
              65,
              51,
              107,
              74,
              37,
              50,
              66,
              106,
              74,
              37,
              50,
              70,
              97,
              104,
              48,
              85,
              120,
              97,
              122,
              115,
              102,
              67,
              85,
              120,
              79,
              57,
              48,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              117,
              115,
              101,
              114,
              45,
              97,
              103,
              101,
              110,
              116,
              34,
              58,
              32,
              34,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              82,
              117,
              110,
              116,
              105,
              109,
              101,
              47,
              55,
              46,
              49,
              46,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              111,
              114,
              116,
              34,
              58,
              32,
              34,
              52,
              52,
              51,
              34,
              44,
              10,
              32,
              32,
              32,
              32,
              34,
              120,
              45,
              102,
              111,
              114,
              119,
              97,
              114,
              100,
              101,
              100,
              45,
              112,
              114,
              111,
              116,
              111,
              34,
              58,
              32,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              10,
              32,
              32,
              125,
              44,
              10,
              32,
              32,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              32,
              34,
              71,
              69,
              84,
              34,
              10,
              125
            ]
          },
          "cookie": [],
          "responseTime": 192,
          "responseSize": 374
        },
        "id": "d1358fb9-3dd7-47e1-8568-ea8a39f7bd4f",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "response has valid json body"
          },
          {
            "assertion": "response headers should indicate valid content encoding"
          },
          {
            "assertion": "requesting http client should accept compressed response"
          }
        ]
      },
      {
        "cursor": {
          "ref": "40728c05-a5ce-477e-8295-2a14687cf82b",
          "length": 37,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "09a76d0d-b8d8-4ddc-9335-ba757d577bb7"
        },
        "item": {
          "_": {},
          "id": "ad44d10d-15b5-4f61-b5ab-129295580178",
          "name": "IP address in JSON format",
          "request": {
            "description": {
              "content": "A simple `GET` request to return the IP address of the source request in the following `JSON` format:\n\n```json\n{\n  ip: \"request-ip-address\"\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "ip"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "632f05ef-b98b-4b4f-be9f-84bd87cb8da2",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has valid json body\", function () {",
                  "    pm.response.to.have.jsonBody('ip');",
                  "});",
                  "",
                  "pm.test(\"response must return a valid ip address\", function () {",
                  "    pm.expect(pm.response.json().ip).to",
                  "        // a really gnarly regular expression to ensure that ip address is in correct format",
                  "        .match(/^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/);",
                  "});"
                ],
                "_lastExecutionId": "dd8936cc-ca77-423c-9b89-2890a7f17abd"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to return the IP address of the source request in the following `JSON` format:\n\n```json\n{\n  ip: \"request-ip-address\"\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "ip"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3AK-uMeA2EkEk-leVHgHGy6p06CykhChgN.2EX%2Fr78WlQ74wIkFNkYkXagW61IKfb40gEgGf3hrEQk"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "response": {
          "id": "29695ae2-4a6d-487c-b64e-ac57c2b1f843",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:26 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"17-1c8XmUAP4LKJDad9hIX0Mw\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AjUMIFvv_0K-K6EdGcHWZxBGuOMZQCdjk.gypzWsWL3E1fqVSMYyuc%2BkfKmyJZbvVimHa9FgHaCTI; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "43"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              112,
              34,
              58,
              34,
              49,
              56,
              48,
              46,
              53,
              55,
              46,
              49,
              53,
              51,
              46,
              50,
              48,
              55,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 188,
          "responseSize": 23
        },
        "id": "ad44d10d-15b5-4f61-b5ab-129295580178",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "response has valid json body"
          },
          {
            "assertion": "response must return a valid ip address"
          }
        ]
      },
      {
        "cursor": {
          "ref": "9db2b7fc-0177-4307-8540-08c5551cd82a",
          "length": 37,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "162daadd-18a1-4623-99ed-44f73065dc8e"
        },
        "item": {
          "_": {},
          "id": "2e4ebc06-1325-4f35-8488-61c7c7f41690",
          "name": "Current UTC time",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/now` to return the current timestamp as a UTC string.\n\n```\nFri, 04 Nov 2016 09:00:46 GMT\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "now"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "html",
                "postman_previewtype": "html"
              },
              "id": "e58e73dc-52d2-4f0a-b1c6-8b644c90113d",
              "name": "time as text",
              "originalRequest": {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "time",
                    "now"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Access-Control-Expose-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Expose-Headers",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "49"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "text/html; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Wed, 11 Jan 2017 10:27:12 GMT"
                },
                {
                  "name": "ETag",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "ETag",
                  "value": "W/\"1d-2jJhkzratfVX9VZ0+raHbw\""
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.10.1"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "set-cookie",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "set-cookie",
                  "value": "sails.sid=s%3A2lT3TO7qS1tadeSAp4axl-NcXG9CV6Rf.HGqLY%2FlKEKY4fgCLePaAZs3tCHp%2Bglf7ZOJYlonGeig; Path=/; HttpOnly"
                }
              ],
              "body": "Wed, 11 Jan 2017 10:27:12 GMT",
              "cookie": [
                {
                  "name": "sails.sid",
                  "expires": null,
                  "domain": "postman-echo.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "hostOnly": false,
                  "session": false,
                  "value": "s%3A2lT3TO7qS1tadeSAp4axl-NcXG9CV6Rf.HGqLY%2FlKEKY4fgCLePaAZs3tCHp%2Bglf7ZOJYlonGeig"
                }
              ],
              "responseTime": "749"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "05154cf3-4a39-4bb7-87a6-6c4c7ec58677",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response time matches server response 'date' header\", function () {",
                  "    pm.expect(pm.response.text()).to.eql(pm.response.headers.get('date'))",
                  "});"
                ],
                "_lastExecutionId": "6f8731e0-df4e-4b24-9257-910804c98c83"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/now` to return the current timestamp as a UTC string.\n\n```\nFri, 04 Nov 2016 09:00:46 GMT\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "now"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3AjUMIFvv_0K-K6EdGcHWZxBGuOMZQCdjk.gypzWsWL3E1fqVSMYyuc%2BkfKmyJZbvVimHa9FgHaCTI"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "response": {
          "id": "9a2b40cf-1202-474c-8819-e0ed810ba90e",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "text/html; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:26 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"1d-rMR7JGs88IcY1MYPnb7Zjw\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3A-spZJp_p7PTzVxYeKMYL0-ONGSMVgs5F.M86uglkpZlPlvZtdKPvN73%2BU%2FgxuYxrkBekmpoNpjsE; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "49"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              83,
              97,
              116,
              44,
              32,
              51,
              49,
              32,
              77,
              97,
              114,
              32,
              50,
              48,
              49,
              56,
              32,
              49,
              52,
              58,
              49,
              51,
              58,
              50,
              54,
              32,
              71,
              77,
              84
            ]
          },
          "cookie": [],
          "responseTime": 189,
          "responseSize": 29
        },
        "id": "2e4ebc06-1325-4f35-8488-61c7c7f41690",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "response time matches server response 'date' header"
          }
        ]
      },
      {
        "cursor": {
          "ref": "81172eb9-6eeb-4198-b3ef-1271322165b3",
          "length": 37,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "6c809591-ebdf-484a-a330-4b6b12327460"
        },
        "item": {
          "_": {},
          "id": "d1a431dd-9cc1-4715-9fd9-4d11b17d6267",
          "name": "Timestamp validity",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/valid` to determine the validity of the timestamp, (current by default).\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a valid key to indicate the result. The response code is `200`.\n\n```\n{\n  valid: true/false\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "valid"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json",
                "postman_previewtype": "html"
              },
              "id": "35ad49c5-fedf-4036-89ce-746b98ae6899",
              "name": "Valid Timestamp",
              "originalRequest": {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "time",
                    "valid"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "timestamp",
                      "value": "2016-10-10"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Access-Control-Expose-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Expose-Headers",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "14"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Wed, 11 Jan 2017 10:27:33 GMT"
                },
                {
                  "name": "ETag",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "ETag",
                  "value": "W/\"e-OYN7L87J1Ba9oy5mJE2kcA\""
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.10.1"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "set-cookie",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "set-cookie",
                  "value": "sails.sid=s%3AdDGZPe1CZw4mAxGVCHr6RfCADCAwquXa.F5MEm5LJad30JHrSwGGoyWLn2OAAGdvUM7kDtzNfdFI; Path=/; HttpOnly"
                }
              ],
              "body": "{\"valid\":true}",
              "cookie": [
                {
                  "name": "sails.sid",
                  "expires": null,
                  "domain": "postman-echo.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "hostOnly": false,
                  "session": false,
                  "value": "s%3AdDGZPe1CZw4mAxGVCHr6RfCADCAwquXa.F5MEm5LJad30JHrSwGGoyWLn2OAAGdvUM7kDtzNfdFI"
                }
              ],
              "responseTime": "493"
            },
            {
              "_": {
                "postman_previewlanguage": "json",
                "postman_previewtype": "html"
              },
              "id": "dd98ab03-0de1-407a-8c19-f794f109b7f2",
              "name": "Invalid Timestamp",
              "originalRequest": {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "time",
                    "valid"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "timestamp",
                      "value": "2016-10-10"
                    }
                  ],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Access-Control-Expose-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Expose-Headers",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Length",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Length",
                  "value": "15"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Wed, 11 Jan 2017 10:27:53 GMT"
                },
                {
                  "name": "ETag",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "ETag",
                  "value": "W/\"f-/i9mO/upK91ZtL0BkKFGtw\""
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.10.1"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "set-cookie",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "set-cookie",
                  "value": "sails.sid=s%3ATNJaNxi2QCv4RPBb64sIZxQGN1h6IP3g.9sQVAijlsLsh0r7LgffxXa9k2we6UumPEVv%2Bsk4woLI; Path=/; HttpOnly"
                }
              ],
              "body": "{\"valid\":false}",
              "cookie": [
                {
                  "name": "sails.sid",
                  "expires": null,
                  "domain": "postman-echo.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "hostOnly": false,
                  "session": false,
                  "value": "s%3ATNJaNxi2QCv4RPBb64sIZxQGN1h6IP3g.9sQVAijlsLsh0r7LgffxXa9k2we6UumPEVv%2Bsk4woLI"
                }
              ],
              "responseTime": "264"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "ec6a2755-6d18-4c7d-8920-6f8e36aa9bd6",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should say whether request query time is valid\", function () {",
                  "    pm.response.to.have.jsonBody('valid', true);",
                  "});"
                ],
                "_lastExecutionId": "5401b78e-0024-4b44-b870-6f91cafcfebe"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/valid` to determine the validity of the timestamp, (current by default).\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a valid key to indicate the result. The response code is `200`.\n\n```\n{\n  valid: true/false\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "valid"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3A-spZJp_p7PTzVxYeKMYL0-ONGSMVgs5F.M86uglkpZlPlvZtdKPvN73%2BU%2FgxuYxrkBekmpoNpjsE"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "response": {
          "id": "d5d7b650-bbb1-4088-b5d4-943a5bbf505b",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:26 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"e-OYN7L87J1Ba9oy5mJE2kcA\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AErqfG8gademfldwD2QKFb7V3ZpWEtvy1.4ZcJaohNp1nymG2Mj9IAQzadM9G8A5F5xqHK8E9l1II; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "14"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              118,
              97,
              108,
              105,
              100,
              34,
              58,
              116,
              114,
              117,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 188,
          "responseSize": 14
        },
        "id": "d1a431dd-9cc1-4715-9fd9-4d11b17d6267",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "response json should say whether request query time is valid"
          }
        ]
      },
      {
        "cursor": {
          "ref": "b9af9333-009e-4254-80d3-6f223c07ad1c",
          "length": 37,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "40c9ad8d-8256-457a-a07d-c6156af897c6"
        },
        "item": {
          "_": {},
          "id": "4173b670-84c4-4f00-8067-8ef4d28b6e1a",
          "name": "Format timestamp",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/format` to convert the timestamp to any desired valid format.\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `format` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  format: \"formatted-timestamp\"\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "format"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                },
                {
                  "key": "format",
                  "value": "mm"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "79b21dc8-f122-4991-8802-8d169df86616",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should say whether request query time is valid\", function () {",
                  "    pm.response.to.have.jsonBody('format', '20');",
                  "});"
                ],
                "_lastExecutionId": "2f641dd1-e942-4bcf-adc4-3d139ae07a6a"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/format` to convert the timestamp to any desired valid format.\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `format` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  format: \"formatted-timestamp\"\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "format"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              },
              {
                "key": "format",
                "value": "mm"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3AErqfG8gademfldwD2QKFb7V3ZpWEtvy1.4ZcJaohNp1nymG2Mj9IAQzadM9G8A5F5xqHK8E9l1II"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "response": {
          "id": "aa820674-e28f-40a7-9135-549b544340a1",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:26 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"f-9Oi8vU6t97D6rBOSr9eofQ\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AoM_EBeTtjvFTqGkOidZwBwI1wyp9BakX.%2FdI%2FdEi9ysEnCFHMNJxOoIvwwMzzgIPYhGB8tqru51M; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "15"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              102,
              111,
              114,
              109,
              97,
              116,
              34,
              58,
              34,
              50,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 191,
          "responseSize": 15
        },
        "id": "4173b670-84c4-4f00-8067-8ef4d28b6e1a",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "response json should say whether request query time is valid"
          }
        ]
      },
      {
        "cursor": {
          "ref": "7bafe4f0-febf-419d-b883-af5e6988854d",
          "length": 37,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "13b69319-93bb-48fe-9577-d769db755923"
        },
        "item": {
          "_": {},
          "id": "60657c72-8eab-4441-9e18-779d8776598f",
          "name": "Extract timestamp unit",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/unit` to extract the specified timestamp unit (as provided in the `unit` query parameter). The default unit returned is the `year`.\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `unit` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  unit: \"extracted-timestamp-unit\"\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "unit"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                },
                {
                  "key": "unit",
                  "value": "day"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "da4a3a2d-ca27-41af-845a-a7a1c801c73f",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should say whether request query unit is valid\", function () {",
                  "    pm.response.to.have.jsonBody('unit', 1);",
                  "});"
                ],
                "_lastExecutionId": "374285cf-f61b-4e97-8d27-295c596b3624"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/unit` to extract the specified timestamp unit (as provided in the `unit` query parameter). The default unit returned is the `year`.\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `unit` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  unit: \"extracted-timestamp-unit\"\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "unit"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              },
              {
                "key": "unit",
                "value": "day"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3AoM_EBeTtjvFTqGkOidZwBwI1wyp9BakX.%2FdI%2FdEi9ysEnCFHMNJxOoIvwwMzzgIPYhGB8tqru51M"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "response": {
          "id": "ebfdf1f4-8e72-4adf-9b70-bcf8359b0263",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:26 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"a-1zIbTFP7lmXf/aJeC04MZw\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3A-0flO0kKqYCIX2wXyI9Du0ordVOxBFJf.2iBL6Te%2FGqJAwyAX2dseboj4XxrDD0%2FJTmpnOJdS2PA; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "10"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              117,
              110,
              105,
              116,
              34,
              58,
              49,
              125
            ]
          },
          "cookie": [],
          "responseTime": 192,
          "responseSize": 10
        },
        "id": "60657c72-8eab-4441-9e18-779d8776598f",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "response json should say whether request query unit is valid"
          }
        ]
      },
      {
        "cursor": {
          "ref": "115b26c9-c6e6-455d-bde5-ca39d3c76e2b",
          "length": 37,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "af9c7703-a8c9-4fce-a455-bb45771ae80c"
        },
        "item": {
          "_": {},
          "id": "c3275b4d-060c-4861-965b-24b3cced477a",
          "name": "Time addition",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/add` to add units of time to the specified / current timestamp (as provided in the `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds` query parameters).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `sum` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  sum: \"sum of (provided / current) and provided timestamps\"\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "add"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                },
                {
                  "key": "years",
                  "value": "100"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "f9dbdc5d-fd4a-499e-8a6e-f267b86037b7",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should return the added years\", function () {",
                  "    pm.response.to.have.jsonBody('sum', 'Sat Oct 10 2116 00:00:00 GMT+0000');",
                  "});"
                ],
                "_lastExecutionId": "5f283370-f6e7-41b5-a29e-8fc82cff541c"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/add` to add units of time to the specified / current timestamp (as provided in the `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds` query parameters).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `sum` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  sum: \"sum of (provided / current) and provided timestamps\"\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "add"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              },
              {
                "key": "years",
                "value": "100"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3A-0flO0kKqYCIX2wXyI9Du0ordVOxBFJf.2iBL6Te%2FGqJAwyAX2dseboj4XxrDD0%2FJTmpnOJdS2PA"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "response": {
          "id": "77b5dfa0-210d-4933-9061-20d85466515c",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:27 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"2b-DS2wFX5Gu353a+y6MEmmUw\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AwO1V9TIkuxokxogpIpklRg3BQAiR6Xvw.6pQDk4%2Fykk3EypQU5NVw6rZjigb70haNSdgiNY2zT0Q; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "58"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              117,
              109,
              34,
              58,
              34,
              83,
              97,
              116,
              32,
              79,
              99,
              116,
              32,
              49,
              48,
              32,
              50,
              49,
              49,
              54,
              32,
              48,
              48,
              58,
              48,
              48,
              58,
              48,
              48,
              32,
              71,
              77,
              84,
              43,
              48,
              48,
              48,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 203,
          "responseSize": 43
        },
        "id": "c3275b4d-060c-4861-965b-24b3cced477a",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "response json should return the added years"
          }
        ]
      },
      {
        "cursor": {
          "ref": "ae388764-01df-4b8d-bfec-a5b9728f2327",
          "length": 37,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "db9fd619-fcef-4b0d-b8a0-38a1452caa34"
        },
        "item": {
          "_": {},
          "id": "676cd5d9-9c00-4dd3-984a-aef190f41153",
          "name": "Time subtraction",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/subtract` to subtract units of time from the specified / current timestamp (as provided in the `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds` query parameters).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `difference` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  difference: \"difference between (provided / current) and provided timestamps\"\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "subtract"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                },
                {
                  "key": "years",
                  "value": "50"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b4221f15-c784-4850-8a23-3d25aa07bc54",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should return the subtracted years\", function () {",
                  "    pm.response.to.have.jsonBody('difference', 'Mon Oct 10 1966 00:00:00 GMT+0000');",
                  "});"
                ],
                "_lastExecutionId": "10728d7d-3584-4600-a50e-5467a164893b"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/subtract` to subtract units of time from the specified / current timestamp (as provided in the `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds` query parameters).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `difference` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  difference: \"difference between (provided / current) and provided timestamps\"\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "subtract"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              },
              {
                "key": "years",
                "value": "50"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3AwO1V9TIkuxokxogpIpklRg3BQAiR6Xvw.6pQDk4%2Fykk3EypQU5NVw6rZjigb70haNSdgiNY2zT0Q"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "response": {
          "id": "6085ca02-ab49-4521-bc50-f4e1c04a7c9b",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:27 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"32-uGZkZn9w6FRL7wVbcI9wJA\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AlJle_jbZqDF8pH-sFWi257zMGw0Lawsc.FlIYscw5HjnX7ef669yuUKXo00IWCBfNBvXWBhlK7Mw; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "65"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              100,
              105,
              102,
              102,
              101,
              114,
              101,
              110,
              99,
              101,
              34,
              58,
              34,
              77,
              111,
              110,
              32,
              79,
              99,
              116,
              32,
              49,
              48,
              32,
              49,
              57,
              54,
              54,
              32,
              48,
              48,
              58,
              48,
              48,
              58,
              48,
              48,
              32,
              71,
              77,
              84,
              43,
              48,
              48,
              48,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 188,
          "responseSize": 50
        },
        "id": "676cd5d9-9c00-4dd3-984a-aef190f41153",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "response json should return the subtracted years"
          }
        ]
      },
      {
        "cursor": {
          "ref": "c80b3339-be8f-4035-a372-ce1ad1cd57e4",
          "length": 37,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "4c55bd36-7818-4532-8318-af93da12ab50"
        },
        "item": {
          "_": {},
          "id": "214704a6-f6b5-4fa9-ad22-5a70ce8a2e8e",
          "name": "Start of time",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/start` to return a relative timstamp in the past from the specified / current timestamp (as provided in the `unit` query parameter).\n\nFor instance, if the `unit` has been specified as `month`, the returned timestamp would indicate the beginning of the current month. Similar results are returned for other units of time, like: `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds`\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `start` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  start: \"A timestamp from the past, depending on the `unit` specified\"\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "start"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                },
                {
                  "key": "unit",
                  "value": "month"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "413eeac1-7795-478e-96dd-734dc6422564",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should return the beginning of month\", function () {",
                  "    pm.response.to.have.jsonBody('start', 'Sat Oct 01 2016 00:00:00 GMT+0000');",
                  "});"
                ],
                "_lastExecutionId": "4093eca8-e85a-4f7f-93c0-e984bab52ee2"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/start` to return a relative timstamp in the past from the specified / current timestamp (as provided in the `unit` query parameter).\n\nFor instance, if the `unit` has been specified as `month`, the returned timestamp would indicate the beginning of the current month. Similar results are returned for other units of time, like: `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds`\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `start` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  start: \"A timestamp from the past, depending on the `unit` specified\"\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "start"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              },
              {
                "key": "unit",
                "value": "month"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3AlJle_jbZqDF8pH-sFWi257zMGw0Lawsc.FlIYscw5HjnX7ef669yuUKXo00IWCBfNBvXWBhlK7Mw"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "response": {
          "id": "1c20fc08-bdbb-4a90-8489-085a63da28f8",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:27 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"2d-VRw0j/EVO+wC1viISmestA\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3A1CiUlLryrYQjP6HwZ_wGqLdzFFRq-NC8.F58AGK58uJGfNsdc%2FHU9Sd2lXC%2BlfEIpedMrQBbOOtk; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "60"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              115,
              116,
              97,
              114,
              116,
              34,
              58,
              34,
              83,
              97,
              116,
              32,
              79,
              99,
              116,
              32,
              48,
              49,
              32,
              50,
              48,
              49,
              54,
              32,
              48,
              48,
              58,
              48,
              48,
              58,
              48,
              48,
              32,
              71,
              77,
              84,
              43,
              48,
              48,
              48,
              48,
              34,
              125
            ]
          },
          "cookie": [],
          "responseTime": 188,
          "responseSize": 45
        },
        "id": "214704a6-f6b5-4fa9-ad22-5a70ce8a2e8e",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "response json should return the beginning of month"
          }
        ]
      },
      {
        "cursor": {
          "ref": "378d72f8-a106-4fc4-9f56-9d985d823624",
          "length": 37,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "56684ab2-ce6d-47bc-a354-5058c85fb311"
        },
        "item": {
          "_": {},
          "id": "022981ca-c06f-4c3e-9e74-b21a0c5fce40",
          "name": "Object representation",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/object` to return the current / provided timestamp as a JSON object.\n\nFor instance, if the `unit` has been specified as `month`, the returned timestamp would indicate the beginning of the current month. Similar results are returned for other units of time, like: `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds`\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  years: 2016,\n  months: 10,\n  days: 10,\n  hours: 23,\n  minutes: 34,\n  seconds: 20,\n  milliseconds: 980\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "object"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "141679e3-259b-42e8-a7fd-9f372920e515",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should return the date components\", function () {",
                  "    pm.expect(pm.response.json()).to.eql({",
                  "        \"years\": 2016,",
                  "        \"months\": 9,",
                  "        \"date\": 10,",
                  "        ",
                  "        \"hours\": 0,",
                  "        \"minutes\": 0,",
                  "        \"seconds\": 0,",
                  "        \"milliseconds\": 0",
                  "    });",
                  "});"
                ],
                "_lastExecutionId": "f1e82ec7-2360-4abf-9ca8-ffa53bc0a740"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/object` to return the current / provided timestamp as a JSON object.\n\nFor instance, if the `unit` has been specified as `month`, the returned timestamp would indicate the beginning of the current month. Similar results are returned for other units of time, like: `years`, `months`, `days`, `hours`, `minutes`, `seconds`, and `milliseconds`\n\nThis endpoint accepts `timestamp`, `locale`, `format`, and `strict` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  years: 2016,\n  months: 10,\n  days: 10,\n  hours: 23,\n  minutes: 34,\n  seconds: 20,\n  milliseconds: 980\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "object"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3A1CiUlLryrYQjP6HwZ_wGqLdzFFRq-NC8.F58AGK58uJGfNsdc%2FHU9Sd2lXC%2BlfEIpedMrQBbOOtk"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "response": {
          "id": "87c93395-e990-422a-86d0-11345e487d30",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:27 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"56-rvjj7SIKyuQOZAdXsOpJsw\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3A6onbKKZ3aJo-GU8IfeGf556D5YmI6erm.gAvRWFtJT%2BSRvuOERVo%2FxY2oeFb10t2Czy2Qb4SLzkE; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "83"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              121,
              101,
              97,
              114,
              115,
              34,
              58,
              50,
              48,
              49,
              54,
              44,
              34,
              109,
              111,
              110,
              116,
              104,
              115,
              34,
              58,
              57,
              44,
              34,
              100,
              97,
              116,
              101,
              34,
              58,
              49,
              48,
              44,
              34,
              104,
              111,
              117,
              114,
              115,
              34,
              58,
              48,
              44,
              34,
              109,
              105,
              110,
              117,
              116,
              101,
              115,
              34,
              58,
              48,
              44,
              34,
              115,
              101,
              99,
              111,
              110,
              100,
              115,
              34,
              58,
              48,
              44,
              34,
              109,
              105,
              108,
              108,
              105,
              115,
              101,
              99,
              111,
              110,
              100,
              115,
              34,
              58,
              48,
              125
            ]
          },
          "cookie": [],
          "responseTime": 189,
          "responseSize": 86
        },
        "id": "022981ca-c06f-4c3e-9e74-b21a0c5fce40",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "response json should return the date components"
          }
        ]
      },
      {
        "cursor": {
          "ref": "1825767d-0ee3-4dc0-bec4-579223729b14",
          "length": 37,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "8fa27840-1f30-463a-b5a5-4a5615076ce7"
        },
        "item": {
          "_": {},
          "id": "945644e7-e0c0-4def-8ccd-19381d70fa56",
          "name": "Before comparisons",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/before` to check if the provided timestamps is before a comparison `target` (query parameter).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `before` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  before: true/false\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "before"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                },
                {
                  "key": "target",
                  "value": "2017-10-10"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e8a4b849-3d0d-4db3-96b4-f61a24b950d4",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should say timestamp is before target\", function () {",
                  "    pm.response.to.have.jsonBody('before', true);",
                  "});"
                ],
                "_lastExecutionId": "a71a5448-71d7-4f52-b039-116a6695b47c"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/before` to check if the provided timestamps is before a comparison `target` (query parameter).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `before` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  before: true/false\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "before"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              },
              {
                "key": "target",
                "value": "2017-10-10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3A6onbKKZ3aJo-GU8IfeGf556D5YmI6erm.gAvRWFtJT%2BSRvuOERVo%2FxY2oeFb10t2Czy2Qb4SLzkE"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "response": {
          "id": "bc325284-bd42-4ec8-aba1-272186f5e79c",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:28 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"f-W1+6TGOsajLnUseZF0uCVA\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3A-Jp32-5ZpK5yv5O9JLbcDqQw0V5937-W.AOYgMN0SaMJRTc0Vl3g2cUznAQ2NvgPezYKnASntcO0; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "15"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              98,
              101,
              102,
              111,
              114,
              101,
              34,
              58,
              116,
              114,
              117,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 193,
          "responseSize": 15
        },
        "id": "945644e7-e0c0-4def-8ccd-19381d70fa56",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "response json should say timestamp is before target"
          }
        ]
      },
      {
        "cursor": {
          "ref": "9845e90a-4288-4005-a85b-99b6edf0a580",
          "length": 37,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "1f9c0cc3-9ae9-45a9-8206-98c0f8b885ee"
        },
        "item": {
          "_": {},
          "id": "f0eb0ddc-2878-43d0-aa92-65a49f3fbcd7",
          "name": "After comparisons",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/after` to check if the provided timestamps is after a comparison `target` (query parameter).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `after` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  after: true/false\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "after"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                },
                {
                  "key": "target",
                  "value": "2017-10-10"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "744f2fd4-1c87-4645-ac59-4ba31825bb6e",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should say timestamp is not after target\", function () {",
                  "    pm.response.to.have.jsonBody('after', false);",
                  "});"
                ],
                "_lastExecutionId": "55bbc8b6-abc8-4dd2-b5cd-8db197a9d1c5"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/after` to check if the provided timestamps is after a comparison `target` (query parameter).\n\nThis endpoint accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `after` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  after: true/false\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "after"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              },
              {
                "key": "target",
                "value": "2017-10-10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3A-Jp32-5ZpK5yv5O9JLbcDqQw0V5937-W.AOYgMN0SaMJRTc0Vl3g2cUznAQ2NvgPezYKnASntcO0"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "response": {
          "id": "d844409b-2ee7-4fe8-931d-0bbaf44b33b9",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:28 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"f-kZYuuNdZryUElCGb6r+fbg\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AwfkhAl5O9JKd9LqigowFfgQHkf6WYEHK.TQD3Kp6dX9iEnLRbufvBk7eJpb3kgOSaUExlfHqcrhs; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "15"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              97,
              102,
              116,
              101,
              114,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 190,
          "responseSize": 15
        },
        "id": "f0eb0ddc-2878-43d0-aa92-65a49f3fbcd7",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "response json should say timestamp is not after target"
          }
        ]
      },
      {
        "cursor": {
          "ref": "626d203a-17a8-4494-9c7b-db43ed3e28dc",
          "length": 37,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "afe2c438-af31-4108-aee5-59e63c0750e3"
        },
        "item": {
          "_": {},
          "id": "a09078c9-47e2-4739-829c-361289865c0c",
          "name": "Between timestamps",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/between` to check if the provided timestamp is between a range specified by the `start` and `end` query parameters. A resolution limit can also be specified by the `unit` query parameter.\n\nFor instance, for a resolution `unit` of `month`,\n`2016-10-05` does lie between `2016-11-02` and `2016-09-01`.\n\nThis endpoint also accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `between` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  between: true/false\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "between"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                },
                {
                  "key": "start",
                  "value": "2017-10-10"
                },
                {
                  "key": "end",
                  "value": "2019-10-10"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "7308265c-515f-47ac-b54e-22c250857969",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should say timestamp is not between start and end\", function () {",
                  "    pm.response.to.have.jsonBody('between', false);",
                  "});"
                ],
                "_lastExecutionId": "883d9029-bfe9-49f0-ba59-6b24cacf954d"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/between` to check if the provided timestamp is between a range specified by the `start` and `end` query parameters. A resolution limit can also be specified by the `unit` query parameter.\n\nFor instance, for a resolution `unit` of `month`,\n`2016-10-05` does lie between `2016-11-02` and `2016-09-01`.\n\nThis endpoint also accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `between` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  between: true/false\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "between"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              },
              {
                "key": "start",
                "value": "2017-10-10"
              },
              {
                "key": "end",
                "value": "2019-10-10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3AwfkhAl5O9JKd9LqigowFfgQHkf6WYEHK.TQD3Kp6dX9iEnLRbufvBk7eJpb3kgOSaUExlfHqcrhs"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "response": {
          "id": "f6f3fa8a-3ce6-4405-ae93-e34fbc718e5f",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:28 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"11-Gn8hLUoVIlb58tYKFZo8mw\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3A8-AgImLpP_5StOsipPhe3bLsSSXX0LiC.yvfv3FncHB%2BpivmXXVA6eW21SA9wm7Rc9sXdROKtnI4; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "17"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              98,
              101,
              116,
              119,
              101,
              101,
              110,
              34,
              58,
              102,
              97,
              108,
              115,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 189,
          "responseSize": 17
        },
        "id": "a09078c9-47e2-4739-829c-361289865c0c",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "response json should say timestamp is not between start and end"
          }
        ]
      },
      {
        "cursor": {
          "ref": "62c06dc9-7155-47bf-a181-00e94ff56054",
          "length": 37,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "5dbb01b7-68cf-4ee9-b53b-e91b836148a1"
        },
        "item": {
          "_": {},
          "id": "c6cb4c34-68ce-45be-ae5e-d08027386bcd",
          "name": "Leap year check",
          "request": {
            "description": {
              "content": "A simple `GET` request to `/time/leap` to check if the provided/current timestamp belongs to a leap year.\n\nThis endpoint also accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `leap` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  leap: true/false\n}\n```",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "time",
                "leap"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "timestamp",
                  "value": "2016-10-10"
                }
              ],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "raw",
              "raw": ""
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b39e6293-02e6-43e6-8d9c-88626a1d262e",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response json should say timestamp is within leap year\", function () {",
                  "    pm.response.to.have.jsonBody('leap', true);",
                  "});"
                ],
                "_lastExecutionId": "5b48e35b-0fb1-44b8-b8c4-4d402d386522"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "A simple `GET` request to `/time/leap` to check if the provided/current timestamp belongs to a leap year.\n\nThis endpoint also accepts `timestamp`, `locale`, `format`, `strict`, and `target` query parameters to construct the date time instance to check against.\n\nResponses are provided in JSON format, with a `leap` key to indicate the result. The response code is `200` for valid query parameters, and `400` otherwise.\n\n```\n{\n  leap: true/false\n}\n```",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "time",
              "leap"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "timestamp",
                "value": "2016-10-10"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3A8-AgImLpP_5StOsipPhe3bLsSSXX0LiC.yvfv3FncHB%2BpivmXXVA6eW21SA9wm7Rc9sXdROKtnI4"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "method": "GET",
          "body": {
            "mode": "raw",
            "raw": ""
          }
        },
        "response": {
          "id": "6cab9842-740e-413b-bcb1-d95660f12c9b",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:28 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"d-7DXZdKSVJjZKYo6F73Fnsw\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3Axmr4h3TYyUuuQpLHRel6s0f-Makaj6Xk.PhytrB2RsGaHATq%2B2KlT8%2B8GYP4vDuCZSv2PVNrXqLo; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "13"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              108,
              101,
              97,
              112,
              34,
              58,
              116,
              114,
              117,
              101,
              125
            ]
          },
          "cookie": [],
          "responseTime": 189,
          "responseSize": 13
        },
        "id": "c6cb4c34-68ce-45be-ae5e-d08027386bcd",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "response json should say timestamp is within leap year"
          }
        ]
      },
      {
        "cursor": {
          "ref": "8d9db11e-3855-4b3d-bcb4-f62a4adf6ae2",
          "length": 37,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8930d329-eb8e-4352-8266-53c1bfc76b66"
        },
        "item": {
          "_": {},
          "id": "e3bd8adc-f13d-4e2b-91f2-4a07f7a9c52f",
          "name": "Transform collection from format v1 to v2",
          "request": {
            "description": {
              "content": "",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "transform",
                "collection"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "from",
                  "value": "1"
                },
                {
                  "key": "to",
                  "value": "2"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": \"7875be4b-917d-4aff-8cc4-5606c36bf418\",\n  \"name\": \"Sample Postman Collection\",\n  \"description\": \"A sample collection to demonstrate collections as a set of related requests\",\n  \"order\": [\n    \"4d9134be-e8bf-4693-9cd7-1c0fc66ae739\",\n    \"141ba274-cc50-4377-a59c-e080066f375e\"\n  ],\n  \"folders\": [],\n  \"requests\": [\n    {\n      \"id\": \"4d9134be-e8bf-4693-9cd7-1c0fc66ae739\",\n      \"name\": \"A simple GET request\",\n      \"collectionId\": \"877b9dae-a50e-4152-9b89-870c37216f78\",\n      \"method\": \"GET\",\n      \"headers\": \"\",\n      \"data\": [],\n      \"rawModeData\": \"\",\n      \"tests\": \"tests['response code is 200'] = (responseCode.code === 200);\",\n      \"preRequestScript\": \"\",\n      \"url\": \"https://postman-echo.com/get?source=newman-sample-github-collection\"\n    },\n    {\n      \"id\": \"141ba274-cc50-4377-a59c-e080066f375e\",\n      \"name\": \"A simple POST request\",\n      \"collectionId\": \"877b9dae-a50e-4152-9b89-870c37216f78\",\n      \"method\": \"POST\",\n      \"headers\": \"Content-Type: text/plain\",\n      \"dataMode\": \"raw\",\n      \"data\": [],\n      \"rawModeData\": \"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\",\n      \"url\": \"https://postman-echo.com/post\"\n    }\n  ]\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json",
                "postman_previewtype": "html"
              },
              "id": "d3feaf9b-818c-4b14-9693-e894a39c961f",
              "name": "Sample v2 Response",
              "originalRequest": {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "transform",
                    "collection"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "from",
                      "value": "1"
                    },
                    {
                      "key": "to",
                      "value": "2"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "The mime type of this content",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"id\": \"7875be4b-917d-4aff-8cc4-5606c36bf418\",\n  \"name\": \"Sample Postman Collection\",\n  \"description\": \"A sample collection to demonstrate collections as a set of related requests\",\n  \"order\": [\n    \"4d9134be-e8bf-4693-9cd7-1c0fc66ae739\",\n    \"141ba274-cc50-4377-a59c-e080066f375e\",\n    \"4511ca8b-0bc7-430f-b894-a7ec1036f322\"\n  ],\n  \"folders\": [],\n  \"requests\": [\n    {\n      \"id\": \"4d9134be-e8bf-4693-9cd7-1c0fc66ae739\",\n      \"name\": \"A simple GET request\",\n      \"collectionId\": \"877b9dae-a50e-4152-9b89-870c37216f78\",\n      \"method\": \"GET\",\n      \"headers\": \"\",\n      \"data\": [],\n      \"rawModeData\": \"\",\n      \"tests\": \"tests['response code is 200'] = (responseCode.code === 200);\",\n      \"preRequestScript\": \"\",\n      \"url\": \"https://postman-echo.com/get?source=newman-sample-github-collection\"\n    },\n    {\n      \"id\": \"141ba274-cc50-4377-a59c-e080066f375e\",\n      \"name\": \"A simple POST request\",\n      \"collectionId\": \"877b9dae-a50e-4152-9b89-870c37216f78\",\n      \"method\": \"POST\",\n      \"headers\": \"Content-Type: text/plain\",\n      \"dataMode\": \"raw\",\n      \"data\": [],\n      \"rawModeData\": \"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\",\n      \"url\": \"https://postman-echo.com/post\"\n    },\n    {\n      \"id\": \"4511ca8b-0bc7-430f-b894-a7ec1036f322\",\n      \"name\": \"A simple POST request with JSON body\",\n      \"collectionId\": \"877b9dae-a50e-4152-9b89-870c37216f78\",\n      \"method\": \"POST\",\n      \"headers\": \"Content-Type: application/json\",\n      \"dataMode\": \"raw\",\n      \"data\": [],\n      \"rawModeData\": \"{\\\"text\\\":\\\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\\\"}\",\n      \"url\": \"https://postman-echo.com/post\"\n    }\n  ]\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Access-Control-Expose-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Expose-Headers",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Wed, 11 Jan 2017 10:41:32 GMT"
                },
                {
                  "name": "ETag",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "ETag",
                  "value": "W/\"4cc-7P727Clhlrl9+b1/vneniw\""
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.10.1"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "X-HTTP-Method-Override, Accept-Encoding"
                },
                {
                  "name": "set-cookie",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "set-cookie",
                  "value": "sails.sid=s%3AHtnQ1hlPxoj7wZahoNkcjN-aw9nQL0fc.KSyfLbEKhv1Lt3LvH13Ogjv9ENZgsBBSM6V8Y7TqVOU; Path=/; HttpOnly"
                },
                {
                  "name": "transfer-encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "transfer-encoding",
                  "value": "chunked"
                }
              ],
              "body": "{\"variables\":[],\"info\":{\"name\":\"Sample Postman Collection\",\"_postman_id\":\"7875be4b-917d-4aff-8cc4-5606c36bf418\",\"description\":\"A sample collection to demonstrate collections as a set of related requests\",\"schema\":\"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\"},\"item\":[{\"name\":\"A simple GET request\",\"event\":[{\"listen\":\"test\",\"script\":{\"type\":\"text/javascript\",\"exec\":[\"tests['response code is 200'] = (responseCode.code === 200);\"]}}],\"request\":{\"url\":\"https://postman-echo.com/get?source=newman-sample-github-collection\",\"method\":\"GET\",\"header\":[],\"body\":{\"mode\":\"raw\",\"raw\":\"\"}},\"response\":[]},{\"name\":\"A simple POST request\",\"request\":{\"url\":\"https://postman-echo.com/post\",\"method\":\"POST\",\"header\":[{\"key\":\"Content-Type\",\"value\":\"text/plain\",\"description\":\"\"}],\"body\":{\"mode\":\"raw\",\"raw\":\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\"}},\"response\":[]},{\"name\":\"A simple POST request with JSON body\",\"request\":{\"url\":\"https://postman-echo.com/post\",\"method\":\"POST\",\"header\":[{\"key\":\"Content-Type\",\"value\":\"application/json\",\"description\":\"\"}],\"body\":{\"mode\":\"raw\",\"raw\":\"{\\\"text\\\":\\\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\\\"}\"}},\"response\":[]}]}",
              "cookie": [
                {
                  "name": "sails.sid",
                  "expires": null,
                  "domain": "postman-echo.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "hostOnly": false,
                  "session": false,
                  "value": "s%3AHtnQ1hlPxoj7wZahoNkcjN-aw9nQL0fc.KSyfLbEKhv1Lt3LvH13Ogjv9ENZgsBBSM6V8Y7TqVOU"
                }
              ],
              "responseTime": "920"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "e0e90eb5-a17f-4bdb-aab7-7aa8919ef646",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has almost valid items\", function () {",
                  "    pm.response.to.have.jsonBody('info.schema', 'https://schema.getpostman.com/json/collection/v2.0.0/collection.json')",
                  "        .and.to.have.jsonBody('item[0].name', 'A simple GET request')",
                  "        .and.to.have.jsonBody('item[1].name', 'A simple POST request');",
                  "});"
                ],
                "_lastExecutionId": "fb3ecdb5-4517-4fcf-aeb3-eb875069a508"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "transform",
              "collection"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "from",
                "value": "1"
              },
              {
                "key": "to",
                "value": "2"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3Axmr4h3TYyUuuQpLHRel6s0f-Makaj6Xk.PhytrB2RsGaHATq%2B2KlT8%2B8GYP4vDuCZSv2PVNrXqLo"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            },
            {
              "key": "content-length",
              "value": 1188
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"id\": \"7875be4b-917d-4aff-8cc4-5606c36bf418\",\n  \"name\": \"Sample Postman Collection\",\n  \"description\": \"A sample collection to demonstrate collections as a set of related requests\",\n  \"order\": [\n    \"4d9134be-e8bf-4693-9cd7-1c0fc66ae739\",\n    \"141ba274-cc50-4377-a59c-e080066f375e\"\n  ],\n  \"folders\": [],\n  \"requests\": [\n    {\n      \"id\": \"4d9134be-e8bf-4693-9cd7-1c0fc66ae739\",\n      \"name\": \"A simple GET request\",\n      \"collectionId\": \"877b9dae-a50e-4152-9b89-870c37216f78\",\n      \"method\": \"GET\",\n      \"headers\": \"\",\n      \"data\": [],\n      \"rawModeData\": \"\",\n      \"tests\": \"tests['response code is 200'] = (responseCode.code === 200);\",\n      \"preRequestScript\": \"\",\n      \"url\": \"https://postman-echo.com/get?source=newman-sample-github-collection\"\n    },\n    {\n      \"id\": \"141ba274-cc50-4377-a59c-e080066f375e\",\n      \"name\": \"A simple POST request\",\n      \"collectionId\": \"877b9dae-a50e-4152-9b89-870c37216f78\",\n      \"method\": \"POST\",\n      \"headers\": \"Content-Type: text/plain\",\n      \"dataMode\": \"raw\",\n      \"data\": [],\n      \"rawModeData\": \"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\",\n      \"url\": \"https://postman-echo.com/post\"\n    }\n  ]\n}"
          }
        },
        "response": {
          "id": "bff22388-8efa-4e1c-bd2a-db46e40037a5",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:28 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"3f8-Dhsf6GKUA7sqnJuwcj4RGA\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3ANDLpUxg1RwMd1SYPT-MgfdhIFQV2UDgH.NHcgD0s%2B%2BqBciMqOpo7P50tem23NeymO3dsuX%2Fpur78; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "X-HTTP-Method-Override, Accept-Encoding"
            },
            {
              "key": "Content-Length",
              "value": "535"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              110,
              102,
              111,
              34,
              58,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              97,
              109,
              112,
              108,
              101,
              32,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              32,
              67,
              111,
              108,
              108,
              101,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              95,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              95,
              105,
              100,
              34,
              58,
              34,
              55,
              56,
              55,
              53,
              98,
              101,
              52,
              98,
              45,
              57,
              49,
              55,
              100,
              45,
              52,
              97,
              102,
              102,
              45,
              56,
              99,
              99,
              52,
              45,
              53,
              54,
              48,
              54,
              99,
              51,
              54,
              98,
              102,
              52,
              49,
              56,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              65,
              32,
              115,
              97,
              109,
              112,
              108,
              101,
              32,
              99,
              111,
              108,
              108,
              101,
              99,
              116,
              105,
              111,
              110,
              32,
              116,
              111,
              32,
              100,
              101,
              109,
              111,
              110,
              115,
              116,
              114,
              97,
              116,
              101,
              32,
              99,
              111,
              108,
              108,
              101,
              99,
              116,
              105,
              111,
              110,
              115,
              32,
              97,
              115,
              32,
              97,
              32,
              115,
              101,
              116,
              32,
              111,
              102,
              32,
              114,
              101,
              108,
              97,
              116,
              101,
              100,
              32,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              115,
              34,
              44,
              34,
              115,
              99,
              104,
              101,
              109,
              97,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              115,
              99,
              104,
              101,
              109,
              97,
              46,
              103,
              101,
              116,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              46,
              99,
              111,
              109,
              47,
              106,
              115,
              111,
              110,
              47,
              99,
              111,
              108,
              108,
              101,
              99,
              116,
              105,
              111,
              110,
              47,
              118,
              50,
              46,
              48,
              46,
              48,
              47,
              99,
              111,
              108,
              108,
              101,
              99,
              116,
              105,
              111,
              110,
              46,
              106,
              115,
              111,
              110,
              34,
              125,
              44,
              34,
              105,
              116,
              101,
              109,
              34,
              58,
              91,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              65,
              32,
              115,
              105,
              109,
              112,
              108,
              101,
              32,
              71,
              69,
              84,
              32,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              34,
              44,
              34,
              101,
              118,
              101,
              110,
              116,
              34,
              58,
              91,
              123,
              34,
              108,
              105,
              115,
              116,
              101,
              110,
              34,
              58,
              34,
              116,
              101,
              115,
              116,
              34,
              44,
              34,
              115,
              99,
              114,
              105,
              112,
              116,
              34,
              58,
              123,
              34,
              116,
              121,
              112,
              101,
              34,
              58,
              34,
              116,
              101,
              120,
              116,
              47,
              106,
              97,
              118,
              97,
              115,
              99,
              114,
              105,
              112,
              116,
              34,
              44,
              34,
              101,
              120,
              101,
              99,
              34,
              58,
              91,
              34,
              116,
              101,
              115,
              116,
              115,
              91,
              39,
              114,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              32,
              99,
              111,
              100,
              101,
              32,
              105,
              115,
              32,
              50,
              48,
              48,
              39,
              93,
              32,
              61,
              32,
              40,
              114,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              67,
              111,
              100,
              101,
              46,
              99,
              111,
              100,
              101,
              32,
              61,
              61,
              61,
              32,
              50,
              48,
              48,
              41,
              59,
              34,
              93,
              125,
              125,
              93,
              44,
              34,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              34,
              58,
              123,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              34,
              71,
              69,
              84,
              34,
              44,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              34,
              58,
              91,
              93,
              44,
              34,
              98,
              111,
              100,
              121,
              34,
              58,
              123,
              34,
              109,
              111,
              100,
              101,
              34,
              58,
              34,
              114,
              97,
              119,
              34,
              44,
              34,
              114,
              97,
              119,
              34,
              58,
              34,
              34,
              125,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              123,
              34,
              114,
              97,
              119,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              103,
              101,
              116,
              63,
              115,
              111,
              117,
              114,
              99,
              101,
              61,
              110,
              101,
              119,
              109,
              97,
              110,
              45,
              115,
              97,
              109,
              112,
              108,
              101,
              45,
              103,
              105,
              116,
              104,
              117,
              98,
              45,
              99,
              111,
              108,
              108,
              101,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              112,
              114,
              111,
              116,
              111,
              99,
              111,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              34,
              44,
              34,
              104,
              111,
              115,
              116,
              34,
              58,
              91,
              34,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              34,
              44,
              34,
              99,
              111,
              109,
              34,
              93,
              44,
              34,
              112,
              97,
              116,
              104,
              34,
              58,
              91,
              34,
              103,
              101,
              116,
              34,
              93,
              44,
              34,
              113,
              117,
              101,
              114,
              121,
              34,
              58,
              91,
              123,
              34,
              107,
              101,
              121,
              34,
              58,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              34,
              44,
              34,
              118,
              97,
              108,
              117,
              101,
              34,
              58,
              34,
              110,
              101,
              119,
              109,
              97,
              110,
              45,
              115,
              97,
              109,
              112,
              108,
              101,
              45,
              103,
              105,
              116,
              104,
              117,
              98,
              45,
              99,
              111,
              108,
              108,
              101,
              99,
              116,
              105,
              111,
              110,
              34,
              125,
              93,
              125,
              125,
              44,
              34,
              114,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              34,
              58,
              91,
              93,
              125,
              44,
              123,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              65,
              32,
              115,
              105,
              109,
              112,
              108,
              101,
              32,
              80,
              79,
              83,
              84,
              32,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              34,
              44,
              34,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              34,
              58,
              123,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              34,
              80,
              79,
              83,
              84,
              34,
              44,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              34,
              58,
              91,
              123,
              34,
              107,
              101,
              121,
              34,
              58,
              34,
              67,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              84,
              121,
              112,
              101,
              34,
              44,
              34,
              118,
              97,
              108,
              117,
              101,
              34,
              58,
              34,
              116,
              101,
              120,
              116,
              47,
              112,
              108,
              97,
              105,
              110,
              34,
              125,
              93,
              44,
              34,
              98,
              111,
              100,
              121,
              34,
              58,
              123,
              34,
              109,
              111,
              100,
              101,
              34,
              58,
              34,
              114,
              97,
              119,
              34,
              44,
              34,
              114,
              97,
              119,
              34,
              58,
              34,
              68,
              117,
              105,
              115,
              32,
              112,
              111,
              115,
              117,
              101,
              114,
              101,
              32,
              97,
              117,
              103,
              117,
              101,
              32,
              118,
              101,
              108,
              32,
              99,
              117,
              114,
              115,
              117,
              115,
              32,
              112,
              104,
              97,
              114,
              101,
              116,
              114,
              97,
              46,
              32,
              73,
              110,
              32,
              108,
              117,
              99,
              116,
              117,
              115,
              32,
              97,
              32,
              101,
              120,
              32,
              110,
              101,
              99,
              32,
              112,
              114,
              101,
              116,
              105,
              117,
              109,
              46,
              46,
              46,
              34,
              125,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              112,
              111,
              115,
              116,
              34,
              125,
              44,
              34,
              114,
              101,
              115,
              112,
              111,
              110,
              115,
              101,
              34,
              58,
              91,
              93,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 195,
          "responseSize": 1016
        },
        "id": "e3bd8adc-f13d-4e2b-91f2-4a07f7a9c52f",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "response has almost valid items"
          }
        ]
      },
      {
        "cursor": {
          "ref": "95e51bc5-1620-47cd-8bc6-8f4cc7a41fc8",
          "length": 37,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "40c68541-48d9-47c1-a825-6fb2c2dfba08"
        },
        "item": {
          "_": {},
          "id": "a7d19fd9-70d0-4c8d-b192-f2c057001ebb",
          "name": "Transform collection from format v2 to v1",
          "request": {
            "description": {
              "content": "",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "transform",
                "collection"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [
                {
                  "key": "from",
                  "value": "2"
                },
                {
                  "key": "to",
                  "value": "1"
                }
              ],
              "variable": []
            },
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "method": "POST",
            "body": {
              "mode": "raw",
              "raw": "{\n  \"info\": {\n    \"name\": \"Sample Postman Collection\",\n    \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\",\n    \"description\": \"A sample collection to demonstrate collections as a set of related requests\"\n  },\n\n  \"item\": [{\n    \"name\": \"A simple GET request\",\n    \"request\": {\n      \"url\": \"https://postman-echo.com/get?source=newman-sample-github-collection\",\n      \"method\": \"GET\"\n    }\n  }, {\n    \"name\": \"A simple POST request\",\n    \"request\": {\n      \"url\": \"https://postman-echo.com/post\",\n      \"method\": \"POST\",\n      \"header\": [{\n        \"key\": \"Content-Type\",\n        \"value\": \"text/plain\"\n      }],\n      \"body\": {\n        \"mode\": \"raw\",\n        \"raw\": \"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\"\n      }\n    }\n  }]\n}"
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "json",
                "postman_previewtype": "html"
              },
              "id": "3d93b66f-920d-424a-93b5-2f2cb77ca0a5",
              "name": "Sample v1 Response",
              "originalRequest": {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "transform",
                    "collection"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [
                    {
                      "key": "from",
                      "value": "2"
                    },
                    {
                      "key": "to",
                      "value": "1"
                    }
                  ],
                  "variable": []
                },
                "header": [
                  {
                    "description": {
                      "content": "The mime type of this content",
                      "type": "text/plain"
                    },
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "method": "POST",
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"info\": {\n    \"name\": \"Sample Postman Collection\",\n    \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\",\n    \"description\": \"A sample collection to demonstrate collections as a set of related requests\"\n  },\n\n  \"item\": [{\n    \"name\": \"A simple GET request\",\n    \"event\": [{\n      \"listen\": \"test\",\n      \"script\": {\n        \"type\": \"text/javascript\",\n        \"exec\": [\"tests['response code is 200'] = (responseCode.code === 200);\"]\n      }\n    }],\n    \"request\": {\n      \"url\": \"https://postman-echo.com/get?source=newman-sample-github-collection\",\n      \"method\": \"GET\"\n    }\n  }, {\n    \"name\": \"A simple POST request\",\n    \"request\": {\n      \"url\": \"https://postman-echo.com/post\",\n      \"method\": \"POST\",\n      \"header\": [{\n        \"key\": \"Content-Type\",\n        \"value\": \"text/plain\"\n      }],\n      \"body\": {\n        \"mode\": \"raw\",\n        \"raw\": \"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\"\n      }\n    }\n  }, {\n    \"name\": \"A simple POST request with JSON body\",\n    \"request\": {\n      \"url\": \"https://postman-echo.com/post\",\n      \"method\": \"POST\",\n      \"header\": [{\n        \"key\": \"Content-Type\",\n        \"value\": \"application/json\"\n      }],\n      \"body\": {\n        \"mode\": \"raw\",\n        \"raw\": \"{\\\"text\\\":\\\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\\\"}\"\n      }\n    }\n  }]\n}"
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Access-Control-Expose-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Expose-Headers",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json; charset=utf-8"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Wed, 11 Jan 2017 10:38:42 GMT"
                },
                {
                  "name": "ETag",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "ETag",
                  "value": "W/\"569-P9uLZEIyoPfMmQ+U0mTO1A\""
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.10.1"
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "X-HTTP-Method-Override, Accept-Encoding"
                },
                {
                  "name": "set-cookie",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "set-cookie",
                  "value": "sails.sid=s%3A55y5Ll7HpTzt_hKuw6N54k4N04ilmMdn.uCPCHttP5DmI%2BdBw2I9NZL55lFFOzz4XxS4qAHv47gI; Path=/; HttpOnly"
                },
                {
                  "name": "transfer-encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "transfer-encoding",
                  "value": "chunked"
                }
              ],
              "body": "{\"id\":\"0c42230c-c8e4-4ca0-a4aa-d393971de8b8\",\"name\":\"Sample Postman Collection\",\"description\":\"A sample collection to demonstrate collections as a set of related requests\",\"order\":[\"3d04ed83-dc1e-40ec-923c-16aa92509e50\",\"e02f8160-fb41-4633-be80-cc7d701e85b4\",\"77bd6d4d-1060-4927-aa5c-dcdba7f750cf\"],\"folders\":[],\"requests\":[{\"id\":\"3d04ed83-dc1e-40ec-923c-16aa92509e50\",\"name\":\"A simple GET request\",\"collectionId\":\"1dd68aff-a3fa-4f52-904f-5b75053bc9d9\",\"method\":\"GET\",\"headers\":\"\",\"data\":[],\"rawModeData\":\"\",\"tests\":\"tests['response code is 200'] = (responseCode.code === 200);\",\"preRequestScript\":\"\",\"url\":\"https://postman-echo.com/get?source=newman-sample-github-collection\"},{\"id\":\"e02f8160-fb41-4633-be80-cc7d701e85b4\",\"name\":\"A simple POST request\",\"collectionId\":\"1dd68aff-a3fa-4f52-904f-5b75053bc9d9\",\"method\":\"POST\",\"headers\":\"Content-Type: text/plain\",\"dataMode\":\"raw\",\"data\":[],\"rawModeData\":\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\",\"url\":\"https://postman-echo.com/post\"},{\"id\":\"77bd6d4d-1060-4927-aa5c-dcdba7f750cf\",\"name\":\"A simple POST request with JSON body\",\"collectionId\":\"1dd68aff-a3fa-4f52-904f-5b75053bc9d9\",\"method\":\"POST\",\"headers\":\"Content-Type: application/json\",\"dataMode\":\"raw\",\"data\":[],\"rawModeData\":\"{\\\"text\\\":\\\"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\\\"}\",\"url\":\"https://postman-echo.com/post\"}]}",
              "cookie": [
                {
                  "name": "sails.sid",
                  "expires": null,
                  "domain": "postman-echo.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "hostOnly": false,
                  "session": false,
                  "value": "s%3A55y5Ll7HpTzt_hKuw6N54k4N04ilmMdn.uCPCHttP5DmI%2BdBw2I9NZL55lFFOzz4XxS4qAHv47gI"
                }
              ],
              "responseTime": "276"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b13f9116-f4b6-493c-986c-4ca3fff3dc50",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response has almost valid items\", function () {",
                  "    pm.response.to.have.jsonBody('folders', [])",
                  "        .and.to.have.jsonBody('order')",
                  "        .and.to.have.jsonBody('requests[0].name', 'A simple GET request')",
                  "        .and.to.have.jsonBody('requests[1].name', 'A simple POST request');",
                  "});"
                ],
                "_lastExecutionId": "22c66bad-a3f8-4fa8-bc58-1a0f6e82f7c7"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "transform",
              "collection"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [
              {
                "key": "from",
                "value": "2"
              },
              {
                "key": "to",
                "value": "1"
              }
            ],
            "variable": []
          },
          "header": [
            {
              "key": "Content-Type",
              "value": "application/json"
            },
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3ANDLpUxg1RwMd1SYPT-MgfdhIFQV2UDgH.NHcgD0s%2B%2BqBciMqOpo7P50tem23NeymO3dsuX%2Fpur78"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            },
            {
              "key": "content-length",
              "value": 789
            }
          ],
          "method": "POST",
          "body": {
            "mode": "raw",
            "raw": "{\n  \"info\": {\n    \"name\": \"Sample Postman Collection\",\n    \"schema\": \"https://schema.getpostman.com/json/collection/v2.0.0/collection.json\",\n    \"description\": \"A sample collection to demonstrate collections as a set of related requests\"\n  },\n\n  \"item\": [{\n    \"name\": \"A simple GET request\",\n    \"request\": {\n      \"url\": \"https://postman-echo.com/get?source=newman-sample-github-collection\",\n      \"method\": \"GET\"\n    }\n  }, {\n    \"name\": \"A simple POST request\",\n    \"request\": {\n      \"url\": \"https://postman-echo.com/post\",\n      \"method\": \"POST\",\n      \"header\": [{\n        \"key\": \"Content-Type\",\n        \"value\": \"text/plain\"\n      }],\n      \"body\": {\n        \"mode\": \"raw\",\n        \"raw\": \"Duis posuere augue vel cursus pharetra. In luctus a ex nec pretium...\"\n      }\n    }\n  }]\n}"
          }
        },
        "response": {
          "id": "63703bca-9666-4467-aded-86ea2b5c9e55",
          "status": "OK",
          "code": 200,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Content-Encoding",
              "value": "gzip"
            },
            {
              "key": "Content-Type",
              "value": "application/json; charset=utf-8"
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:29 GMT"
            },
            {
              "key": "ETag",
              "value": "W/\"458-vufcw4K4wZka+oVhI2n2zg\""
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AY1vJYiWarMZ7DWzzBA44j5twj8_GZqaj.r1ZVKdKEq3iPCIEB7gIB%2B7OGVzeKbLniJAvVpZNKG0c; Path=/; HttpOnly"
            },
            {
              "key": "Vary",
              "value": "X-HTTP-Method-Override, Accept-Encoding"
            },
            {
              "key": "transfer-encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              54,
              97,
              98,
              53,
              48,
              97,
              99,
              102,
              45,
              57,
              55,
              102,
              54,
              45,
              52,
              53,
              54,
              57,
              45,
              98,
              52,
              101,
              98,
              45,
              50,
              100,
              97,
              48,
              52,
              100,
              49,
              48,
              48,
              50,
              57,
              100,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              83,
              97,
              109,
              112,
              108,
              101,
              32,
              80,
              111,
              115,
              116,
              109,
              97,
              110,
              32,
              67,
              111,
              108,
              108,
              101,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              100,
              101,
              115,
              99,
              114,
              105,
              112,
              116,
              105,
              111,
              110,
              34,
              58,
              34,
              65,
              32,
              115,
              97,
              109,
              112,
              108,
              101,
              32,
              99,
              111,
              108,
              108,
              101,
              99,
              116,
              105,
              111,
              110,
              32,
              116,
              111,
              32,
              100,
              101,
              109,
              111,
              110,
              115,
              116,
              114,
              97,
              116,
              101,
              32,
              99,
              111,
              108,
              108,
              101,
              99,
              116,
              105,
              111,
              110,
              115,
              32,
              97,
              115,
              32,
              97,
              32,
              115,
              101,
              116,
              32,
              111,
              102,
              32,
              114,
              101,
              108,
              97,
              116,
              101,
              100,
              32,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              115,
              34,
              44,
              34,
              111,
              114,
              100,
              101,
              114,
              34,
              58,
              91,
              34,
              54,
              56,
              51,
              101,
              97,
              101,
              101,
              101,
              45,
              101,
              99,
              101,
              97,
              45,
              52,
              48,
              101,
              53,
              45,
              98,
              100,
              48,
              57,
              45,
              50,
              49,
              49,
              52,
              98,
              99,
              100,
              48,
              56,
              102,
              48,
              54,
              34,
              44,
              34,
              56,
              101,
              50,
              55,
              54,
              50,
              102,
              52,
              45,
              102,
              54,
              102,
              101,
              45,
              52,
              54,
              56,
              57,
              45,
              56,
              48,
              57,
              54,
              45,
              57,
              97,
              57,
              100,
              101,
              102,
              56,
              101,
              50,
              48,
              101,
              52,
              34,
              93,
              44,
              34,
              102,
              111,
              108,
              100,
              101,
              114,
              115,
              95,
              111,
              114,
              100,
              101,
              114,
              34,
              58,
              91,
              93,
              44,
              34,
              102,
              111,
              108,
              100,
              101,
              114,
              115,
              34,
              58,
              91,
              93,
              44,
              34,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              115,
              34,
              58,
              91,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              54,
              56,
              51,
              101,
              97,
              101,
              101,
              101,
              45,
              101,
              99,
              101,
              97,
              45,
              52,
              48,
              101,
              53,
              45,
              98,
              100,
              48,
              57,
              45,
              50,
              49,
              49,
              52,
              98,
              99,
              100,
              48,
              56,
              102,
              48,
              54,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              65,
              32,
              115,
              105,
              109,
              112,
              108,
              101,
              32,
              71,
              69,
              84,
              32,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              34,
              44,
              34,
              99,
              111,
              108,
              108,
              101,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              34,
              54,
              97,
              98,
              53,
              48,
              97,
              99,
              102,
              45,
              57,
              55,
              102,
              54,
              45,
              52,
              53,
              54,
              57,
              45,
              98,
              52,
              101,
              98,
              45,
              50,
              100,
              97,
              48,
              52,
              100,
              49,
              48,
              48,
              50,
              57,
              100,
              34,
              44,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              34,
              71,
              69,
              84,
              34,
              44,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              34,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              93,
              44,
              34,
              114,
              97,
              119,
              77,
              111,
              100,
              101,
              68,
              97,
              116,
              97,
              34,
              58,
              34,
              34,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              103,
              101,
              116,
              63,
              115,
              111,
              117,
              114,
              99,
              101,
              61,
              110,
              101,
              119,
              109,
              97,
              110,
              45,
              115,
              97,
              109,
              112,
              108,
              101,
              45,
              103,
              105,
              116,
              104,
              117,
              98,
              45,
              99,
              111,
              108,
              108,
              101,
              99,
              116,
              105,
              111,
              110,
              34,
              44,
              34,
              112,
              97,
              116,
              104,
              86,
              97,
              114,
              105,
              97,
              98,
              108,
              101,
              68,
              97,
              116,
              97,
              34,
              58,
              91,
              93,
              44,
              34,
              113,
              117,
              101,
              114,
              121,
              80,
              97,
              114,
              97,
              109,
              115,
              34,
              58,
              91,
              123,
              34,
              107,
              101,
              121,
              34,
              58,
              34,
              115,
              111,
              117,
              114,
              99,
              101,
              34,
              44,
              34,
              118,
              97,
              108,
              117,
              101,
              34,
              58,
              34,
              110,
              101,
              119,
              109,
              97,
              110,
              45,
              115,
              97,
              109,
              112,
              108,
              101,
              45,
              103,
              105,
              116,
              104,
              117,
              98,
              45,
              99,
              111,
              108,
              108,
              101,
              99,
              116,
              105,
              111,
              110,
              34,
              125,
              93,
              44,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              68,
              97,
              116,
              97,
              34,
              58,
              91,
              93,
              125,
              44,
              123,
              34,
              105,
              100,
              34,
              58,
              34,
              56,
              101,
              50,
              55,
              54,
              50,
              102,
              52,
              45,
              102,
              54,
              102,
              101,
              45,
              52,
              54,
              56,
              57,
              45,
              56,
              48,
              57,
              54,
              45,
              57,
              97,
              57,
              100,
              101,
              102,
              56,
              101,
              50,
              48,
              101,
              52,
              34,
              44,
              34,
              110,
              97,
              109,
              101,
              34,
              58,
              34,
              65,
              32,
              115,
              105,
              109,
              112,
              108,
              101,
              32,
              80,
              79,
              83,
              84,
              32,
              114,
              101,
              113,
              117,
              101,
              115,
              116,
              34,
              44,
              34,
              99,
              111,
              108,
              108,
              101,
              99,
              116,
              105,
              111,
              110,
              73,
              100,
              34,
              58,
              34,
              54,
              97,
              98,
              53,
              48,
              97,
              99,
              102,
              45,
              57,
              55,
              102,
              54,
              45,
              52,
              53,
              54,
              57,
              45,
              98,
              52,
              101,
              98,
              45,
              50,
              100,
              97,
              48,
              52,
              100,
              49,
              48,
              48,
              50,
              57,
              100,
              34,
              44,
              34,
              109,
              101,
              116,
              104,
              111,
              100,
              34,
              58,
              34,
              80,
              79,
              83,
              84,
              34,
              44,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              115,
              34,
              58,
              34,
              67,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              84,
              121,
              112,
              101,
              58,
              32,
              116,
              101,
              120,
              116,
              47,
              112,
              108,
              97,
              105,
              110,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              77,
              111,
              100,
              101,
              34,
              58,
              34,
              114,
              97,
              119,
              34,
              44,
              34,
              100,
              97,
              116,
              97,
              34,
              58,
              91,
              93,
              44,
              34,
              114,
              97,
              119,
              77,
              111,
              100,
              101,
              68,
              97,
              116,
              97,
              34,
              58,
              34,
              68,
              117,
              105,
              115,
              32,
              112,
              111,
              115,
              117,
              101,
              114,
              101,
              32,
              97,
              117,
              103,
              117,
              101,
              32,
              118,
              101,
              108,
              32,
              99,
              117,
              114,
              115,
              117,
              115,
              32,
              112,
              104,
              97,
              114,
              101,
              116,
              114,
              97,
              46,
              32,
              73,
              110,
              32,
              108,
              117,
              99,
              116,
              117,
              115,
              32,
              97,
              32,
              101,
              120,
              32,
              110,
              101,
              99,
              32,
              112,
              114,
              101,
              116,
              105,
              117,
              109,
              46,
              46,
              46,
              34,
              44,
              34,
              117,
              114,
              108,
              34,
              58,
              34,
              104,
              116,
              116,
              112,
              115,
              58,
              47,
              47,
              112,
              111,
              115,
              116,
              109,
              97,
              110,
              45,
              101,
              99,
              104,
              111,
              46,
              99,
              111,
              109,
              47,
              112,
              111,
              115,
              116,
              34,
              44,
              34,
              112,
              97,
              116,
              104,
              86,
              97,
              114,
              105,
              97,
              98,
              108,
              101,
              68,
              97,
              116,
              97,
              34,
              58,
              91,
              93,
              44,
              34,
              113,
              117,
              101,
              114,
              121,
              80,
              97,
              114,
              97,
              109,
              115,
              34,
              58,
              91,
              93,
              44,
              34,
              104,
              101,
              97,
              100,
              101,
              114,
              68,
              97,
              116,
              97,
              34,
              58,
              91,
              123,
              34,
              107,
              101,
              121,
              34,
              58,
              34,
              67,
              111,
              110,
              116,
              101,
              110,
              116,
              45,
              84,
              121,
              112,
              101,
              34,
              44,
              34,
              118,
              97,
              108,
              117,
              101,
              34,
              58,
              34,
              116,
              101,
              120,
              116,
              47,
              112,
              108,
              97,
              105,
              110,
              34,
              125,
              93,
              125,
              93,
              125
            ]
          },
          "cookie": [],
          "responseTime": 189,
          "responseSize": 1112
        },
        "id": "a7d19fd9-70d0-4c8d-b192-f2c057001ebb",
        "assertions": [
          {
            "assertion": "response is ok"
          },
          {
            "assertion": "response has almost valid items"
          }
        ]
      },
      {
        "cursor": {
          "ref": "5a69d248-f1b3-46fa-a6d8-f58b81332f69",
          "length": 37,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "472bbe9f-8944-43f3-9a0a-b136e56bc9ca"
        },
        "item": {
          "_": {},
          "id": "4611a861-728b-4d89-af1c-6b6e75753109",
          "name": "DigestAuth Request",
          "request": {
            "description": {
              "content": "Performing a simple `GET` request to this endpoint returns status code `401 Unauthorized` with `WWW-Authenticate` header containing information to successfully authenticate subsequent requests.\nThe `WWW-Authenticate` header must be processed to extract `realm` and `nonce` values to hash subsequent requests.\n\nWhen this request is executed within Postman, the script attached with this request does the hard work of extracting realm and nonce from the header and set it as [global variables](https://www.getpostman.com/docs/environments#global-variables?source=echo-collection-app-onboarding) named `echo_digest_nonce` and `echo_digest_realm`.\nThese variables are re-used in subsequent request for seamless integration of the two requests.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "digest-auth"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "code",
                  "value": "xWnkliVQJURqB2x1",
                  "type": "text"
                },
                {
                  "key": "grant_type",
                  "value": "authorization_code",
                  "type": "text"
                },
                {
                  "key": "redirect_uri",
                  "value": "https://www.getpostman.com/oauth2/callback",
                  "type": "text"
                },
                {
                  "key": "client_id",
                  "value": "abc123",
                  "type": "text"
                },
                {
                  "key": "client_secret",
                  "value": "ssh-secret",
                  "type": "text"
                }
              ]
            }
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "d87978b4-87ec-4efe-97a5-25a4247f5db7",
                "type": "text/javascript",
                "exec": [
                  "tests[\"response code is 401\"] = responseCode.code === 401;",
                  "tests[\"response has WWW-Authenticate header\"] = (postman.getResponseHeader('WWW-Authenticate'));",
                  "",
                  "var authenticateHeader = postman.getResponseHeader('WWW-Authenticate'),",
                  "    realmStart = authenticateHeader.indexOf('\"',authenticateHeader.indexOf(\"realm\")) + 1 ,",
                  "    realmEnd = authenticateHeader.indexOf('\"',realmStart),",
                  "    realm = authenticateHeader.slice(realmStart,realmEnd),",
                  "    nonceStart = authenticateHeader.indexOf('\"',authenticateHeader.indexOf(\"nonce\")) + 1,",
                  "    nonceEnd = authenticateHeader.indexOf('\"',nonceStart),",
                  "    nonce = authenticateHeader.slice(nonceStart,nonceEnd);",
                  "    ",
                  "postman.setGlobalVariable('echo_digest_realm', realm);",
                  "postman.setGlobalVariable('echo_digest_nonce', nonce);"
                ],
                "_lastExecutionId": "af06ace1-0159-41ff-823e-9c1f8b36fb9c"
              }
            }
          ]
        },
        "request": {
          "description": {
            "content": "Performing a simple `GET` request to this endpoint returns status code `401 Unauthorized` with `WWW-Authenticate` header containing information to successfully authenticate subsequent requests.\nThe `WWW-Authenticate` header must be processed to extract `realm` and `nonce` values to hash subsequent requests.\n\nWhen this request is executed within Postman, the script attached with this request does the hard work of extracting realm and nonce from the header and set it as [global variables](https://www.getpostman.com/docs/environments#global-variables?source=echo-collection-app-onboarding) named `echo_digest_nonce` and `echo_digest_realm`.\nThese variables are re-used in subsequent request for seamless integration of the two requests.",
            "type": "text/plain"
          },
          "url": {
            "protocol": "https",
            "path": [
              "digest-auth"
            ],
            "host": [
              "postman-echo",
              "com"
            ],
            "query": [],
            "variable": []
          },
          "header": [
            {
              "key": "User-Agent",
              "value": "PostmanRuntime/7.1.3"
            },
            {
              "key": "Accept",
              "value": "*/*"
            },
            {
              "key": "Host",
              "value": "postman-echo.com"
            },
            {
              "key": "cookie",
              "value": "sails.sid=s%3AY1vJYiWarMZ7DWzzBA44j5twj8_GZqaj.r1ZVKdKEq3iPCIEB7gIB%2B7OGVzeKbLniJAvVpZNKG0c"
            },
            {
              "key": "accept-encoding",
              "value": "gzip, deflate"
            }
          ],
          "method": "GET",
          "body": {
            "mode": "formdata",
            "formdata": [
              {
                "key": "code",
                "value": "xWnkliVQJURqB2x1",
                "type": "text"
              },
              {
                "key": "grant_type",
                "value": "authorization_code",
                "type": "text"
              },
              {
                "key": "redirect_uri",
                "value": "https://www.getpostman.com/oauth2/callback",
                "type": "text"
              },
              {
                "key": "client_id",
                "value": "abc123",
                "type": "text"
              },
              {
                "key": "client_secret",
                "value": "ssh-secret",
                "type": "text"
              }
            ]
          }
        },
        "response": {
          "id": "2ee70289-d345-448a-bb27-a6ae945f00ae",
          "status": "Unauthorized",
          "code": 401,
          "header": [
            {
              "key": "Access-Control-Allow-Credentials",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Headers",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Methods",
              "value": ""
            },
            {
              "key": "Access-Control-Allow-Origin",
              "value": ""
            },
            {
              "key": "Access-Control-Expose-Headers",
              "value": ""
            },
            {
              "key": "Date",
              "value": "Sat, 31 Mar 2018 14:13:29 GMT"
            },
            {
              "key": "Server",
              "value": "nginx"
            },
            {
              "key": "set-cookie",
              "value": "sails.sid=s%3AtWb7mVW2_xuNJcIOSqNcqHdfLW_5u8TR.6wCRYjilChrlFW0TW0u1DNBL%2FYGXiPjpafYxcNgx5iI; Path=/; HttpOnly"
            },
            {
              "key": "WWW-Authenticate",
              "value": "Digest realm=\"Users\", nonce=\"oFPY6D8AeQxs5M3LJKSGk6A2qnNu8CKj\", qop=\"auth\""
            },
            {
              "key": "transfer-encoding",
              "value": "chunked"
            },
            {
              "key": "Connection",
              "value": "keep-alive"
            }
          ],
          "stream": {
            "type": "Buffer",
            "data": [
              85,
              110,
              97,
              117,
              116,
              104,
              111,
              114,
              105,
              122,
              101,
              100
            ]
          },
          "cookie": [],
          "responseTime": 196,
          "responseSize": 12
        },
        "id": "4611a861-728b-4d89-af1c-6b6e75753109",
        "assertions": [
          {
            "assertion": "response code is 401"
          },
          {
            "assertion": "response has WWW-Authenticate header"
          }
        ]
      }
    ],
    "transfers": {
      "responseTotal": 22962
    },
    "failures": [
      {
        "error": {
          "name": "AssertionError",
          "index": 1,
          "message": "expected { Object (message) } in response to contain property 'status'",
          "stack": "AssertionError: expected { Object (message) } in response to contain property 'status'\n   at Object.eval sandbox-script.js:2:11)",
          "checksum": "3ad9e37bf90f9775d3f25d14fef48c17",
          "id": "5d36f4f0-684c-44aa-beb8-3e678da4cd7b",
          "timestamp": 1522505601194,
          "stacktrace": [
            {
              "fileName": "sandbox-script.js",
              "lineNumber": 2,
              "functionName": "Object.eval",
              "typeName": "Object",
              "methodName": "eval",
              "columnNumber": 11,
              "native": false
            }
          ]
        },
        "at": "assertion:1 in test-script",
        "source": {
          "_": {},
          "id": "3a9a1674-1574-4a72-914c-e4c137940dac",
          "name": "Hawk Auth",
          "request": {
            "description": {
              "content": "This endpoint is a Hawk Authentication protected endpoint. [Hawk authentication](https://github.com/hueniverse/hawk) is a widely used protocol for protecting API endpoints. One of Hawk's main goals is to enable HTTP authentication for services that do not use TLS (although it can be used in conjunction with TLS as well).\n\nIn order to use this endpoint, select the \"Hawk Auth\" helper inside Postman, and set the following values:\n\nHawk Auth ID: `dh37fgj492je`\n\nHawk Auth Key: `werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn`\n\nAlgorithm: `sha256`\n\nThe rest of the values are optional, and can be left blank. Hitting send should give you a response with a status code of 200 OK.",
              "type": "text/plain"
            },
            "url": {
              "protocol": "https",
              "path": [
                "auth",
                "hawk"
              ],
              "host": [
                "postman-echo",
                "com"
              ],
              "query": [],
              "variable": []
            },
            "method": "GET",
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "access_token",
                  "value": "xyz1",
                  "type": "text"
                },
                {
                  "key": "id",
                  "value": "U1",
                  "type": "text"
                },
                {
                  "key": "server_secret",
                  "value": "zeppelin",
                  "type": "text"
                },
                {
                  "key": "admin",
                  "value": "true",
                  "type": "text"
                }
              ]
            },
            "auth": {
              "type": "hawk",
              "hawk": [
                {
                  "type": "string",
                  "value": "dh37fgj492je",
                  "key": "authId"
                },
                {
                  "type": "string",
                  "value": "werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn",
                  "key": "authKey"
                },
                {
                  "type": "string",
                  "value": "sha256",
                  "key": "algorithm"
                },
                {
                  "type": "string",
                  "value": "",
                  "key": "user"
                },
                {
                  "type": "any",
                  "key": "saveHelperData"
                },
                {
                  "type": "string",
                  "value": "RZKGNz",
                  "key": "nonce"
                },
                {
                  "type": "any",
                  "key": "extraData"
                },
                {
                  "type": "any",
                  "key": "appId"
                },
                {
                  "type": "any",
                  "key": "delegation"
                },
                {
                  "type": "string",
                  "value": "1522505600",
                  "key": "timestamp",
                  "system": true
                }
              ]
            }
          },
          "response": [
            {
              "_": {
                "postman_previewlanguage": "javascript",
                "postman_previewtype": "html"
              },
              "id": "b0eb7710-1fdc-4565-ac68-65e1f57d5437",
              "name": "Success",
              "originalRequest": {
                "description": {
                  "content": "",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth",
                    "hawk"
                  ],
                  "host": [
                    "echo",
                    "getpostman",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "name": "Authorization",
                    "key": "Authorization",
                    "value": "Hawk id=\"dh37fgj492je\", ts=\"1459422734\", nonce=\"XiwiCU\", mac=\"KzMHk67BYCC9zZqRy5hRdWFEFLHX5bNlRWGdmOAWKp0=\""
                  }
                ],
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "access_token",
                      "value": "xyz1",
                      "type": "text"
                    },
                    {
                      "key": "id",
                      "value": "U1",
                      "type": "text"
                    },
                    {
                      "key": "server_secret",
                      "value": "zeppelin",
                      "type": "text"
                    },
                    {
                      "key": "admin",
                      "value": "true",
                      "type": "text"
                    }
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "header": [
                {
                  "name": "Access-Control-Allow-Credentials",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Credentials",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Headers",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Headers",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Methods",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Methods",
                  "value": ""
                },
                {
                  "name": "Access-Control-Allow-Origin",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Access-Control-Allow-Origin",
                  "value": ""
                },
                {
                  "name": "Connection",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Connection",
                  "value": "keep-alive"
                },
                {
                  "name": "Content-Encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Encoding",
                  "value": "gzip"
                },
                {
                  "name": "Content-Type",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Content-Type",
                  "value": "application/json"
                },
                {
                  "name": "Date",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Date",
                  "value": "Thu, 31 Mar 2016 11:12:16 GMT"
                },
                {
                  "name": "Server",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server",
                  "value": "nginx/1.6.2"
                },
                {
                  "name": "Server-Authorization",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Server-Authorization",
                  "value": "Hawk mac=\"vRrUzDdcHu2NaNts/r4zg2xmXMdX8wPiTGTM398BDRg=\", hash=\"qmtflETMybaZiOQ2dLT17yiRunFT5OCIxZRZ0boQaiE=\""
                },
                {
                  "name": "Vary",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "Vary",
                  "value": "Accept-Encoding"
                },
                {
                  "name": "X-Powered-By",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "X-Powered-By",
                  "value": "Sails <sailsjs.org>"
                },
                {
                  "name": "transfer-encoding",
                  "description": {
                    "content": "",
                    "type": "text/plain"
                  },
                  "key": "transfer-encoding",
                  "value": "chunked"
                }
              ],
              "body": "{\"status\":\"pass\",\"message\":\"Hawk Authentication successful\"}",
              "cookie": [
                {
                  "name": "getpostmanlogin",
                  "expires": null,
                  "domain": ".getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": false,
                  "hostOnly": false,
                  "session": false,
                  "value": "yes"
                },
                {
                  "name": "postman.sid",
                  "expires": null,
                  "domain": ".getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": false,
                  "hostOnly": false,
                  "session": false,
                  "value": "9f887f3b7f14b8c29ac4dc4109381b0b89a76e785c7b34251d6c8025b41b24013d2aa49f40e2deac19cbf0594dd984169455534d91ff98d4d1868d67ac857017629f137926e3a04a616bb83a2fb5ab9e6cbea9579ed5d5c1155d47545d72aad5be99f4abd0a7130805b3807d70cd507171dbe9d950d8e35a853f9ec075f5a767c95df4d57f7d521b66605b3bda3801700e26e651d1129c798b729ee3b91702d43ae64ab226c3f426893753def772c15442a7552dc84a3c773d6099a50b0a6af940b64c8176fedfcecd5fc31ccfc3bbc0124bfdaa0d62e4252d4aafb46a3c10963d12391e1fa97a1c0f19a636f57a3ac8cc35567d1cb6cb53b77f8adde3f6754a765596d7d00bdeb9acb5cc8d115e7c3f50ec3228e34d3e6c7464e9039b01868e03d10e9f87772397602453e9e91205de7b86021fad06eb26e69298e99ff1597a670faeb310f8c092041d544851de84f2bee89a92123da6eea286210524035c85361e2af42166a6"
                },
                {
                  "name": "sails.sid",
                  "expires": null,
                  "domain": "echo.getpostman.com",
                  "path": "/",
                  "secure": false,
                  "httpOnly": true,
                  "hostOnly": true,
                  "session": true,
                  "value": "s%3AryJV7v-PE4PuTjBK6nH5XOynQ4atuATV.n17KcaLhVmV8TBHNLwdwXgGR7lmqs3i478WPlTbRgZ4"
                }
              ],
              "responseTime": "1855"
            }
          ],
          "event": [
            {
              "listen": "test",
              "script": {
                "id": "b556a26e-ac34-4995-a65f-ca20a7db850e",
                "type": "text/javascript",
                "exec": [
                  "pm.test(\"response is ok\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"response body has json saying passed 'status'\", function () {",
                  "    pm.response.to.have.jsonBody('status', 'pass');",
                  "});"
                ],
                "_lastExecutionId": "1729e7ee-9080-4e4d-a208-8d1d23df9231"
              }
            }
          ]
        },
        "parent": {
          "_": {},
          "id": "4861f943-ef52-455d-8d87-c3ec260ef316",
          "name": "Authentication Methods",
          "description": {
            "content": "",
            "type": "text/plain"
          },
          "item": [
            {
              "_": {},
              "id": "fc566bc6-e11e-4b69-98e5-1c72431413b8",
              "name": "Basic Auth",
              "request": {
                "description": {
                  "content": "This endpoint simulates a **basic-auth** protected endpoint. \nThe endpoint accepts a default username and password and returns a status code of `200 ok` only if the same is provided. \nOtherwise it will return a status code `401 unauthorized`.\n\n> Username: `postman`\n> \n> Password: `password`\n\nTo use this endpoint, send a request with the header `Authorization: Basic cG9zdG1hbjpwYXNzd29yZA==`. \nThe cryptic latter half of the header value is a base64 encoded concatenation of the default username and password. \nUsing Postman, to send this request, you can simply fill in the username and password in the \"Authorization\" tab and Postman will do the rest for you.\n\nTo know more about basic authentication, refer to the [Basic Access Authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) wikipedia article.\nThe article on [authentication helpers](https://www.getpostman.com/docs/helpers#basic-auth?source=echo-collection-app-onboarding) elaborates how to use the same within the Postman app.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "basic-auth"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "auth": {
                  "type": "basic",
                  "basic": [
                    {
                      "type": "string",
                      "value": "postman",
                      "key": "username"
                    },
                    {
                      "type": "string",
                      "value": "password",
                      "key": "password"
                    },
                    {
                      "type": "any",
                      "key": "saveHelperData"
                    },
                    {
                      "type": "boolean",
                      "value": false,
                      "key": "showPassword"
                    }
                  ]
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "javascript",
                    "postman_previewtype": "html"
                  },
                  "id": "4fea3264-de59-442e-b1db-966938ff18d6",
                  "name": "200",
                  "originalRequest": {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "url": {
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Access-Control-Allow-Credentials",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Credentials",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": ""
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Encoding",
                      "value": "gzip"
                    },
                    {
                      "name": "Content-Length",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Length",
                      "value": "42"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Sat, 31 Oct 2015 06:38:25 GMT"
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "nginx/1.6.2"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    },
                    {
                      "name": "X-Powered-By",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Powered-By",
                      "value": "Sails <sailsjs.org>"
                    }
                  ],
                  "body": "{\"authenticated\":true}",
                  "cookie": [],
                  "responseTime": "377"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "24d697f8-659f-491b-acce-23b73d443933",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response body has json saying 'authenticated'\", function () {",
                      "    pm.response.to.have.jsonBody('authenticated', true);",
                      "});"
                    ],
                    "_lastExecutionId": "d8a48fe0-3b39-4c69-b98b-704b7005292f"
                  }
                }
              ]
            },
            {
              "_": {},
              "id": "384f5582-e681-4e35-9963-3a68742db11d",
              "name": "DigestAuth Success",
              "request": {
                "description": {
                  "content": "This endpoint sends a hashed Digest Authorization header to gain access to a valid `200 Ok` response code. In Postman, it uses the stored [global variables](https://www.getpostman.com/docs/environments#gloval-variables?source=echo-collection-app-onboarding), `echo_digest_realm` and `echo_digest_nonce`, to generate the hashed authorisation header.\n\nWithin Postman, for this request to successfully authenticate, running the previous request \"DigestAuth Request\" stores the relevant information within the global variables.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "digest-auth"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Digest username=\"postman\", realm=\"Users\", nonce=\"ni1LiL0O37PRRhofWdCLmwFsnEtH1lew\", uri=\"/digest-auth\", response=\"254679099562cf07df9b6f5d8d15db44\", opaque=\"\""
                  }
                ],
                "method": "GET",
                "body": {
                  "mode": "raw",
                  "raw": ""
                },
                "auth": {
                  "type": "digest",
                  "digest": [
                    {
                      "type": "string",
                      "value": "MD5",
                      "key": "algorithm"
                    },
                    {
                      "type": "string",
                      "value": "postman",
                      "key": "username"
                    },
                    {
                      "type": "string",
                      "value": "{{echo_digest_realm}}",
                      "key": "realm"
                    },
                    {
                      "type": "string",
                      "value": "password",
                      "key": "password"
                    },
                    {
                      "type": "string",
                      "value": "{{echo_digest_nonce}}",
                      "key": "nonce"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "nonceCount"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "clientNonce"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "opaque"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "qop"
                    },
                    {
                      "type": "any",
                      "key": "disableRetryRequest"
                    }
                  ]
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "javascript",
                    "postman_previewtype": "html"
                  },
                  "id": "a0ad657e-231a-478d-a4b4-0d8eaa114ea5",
                  "name": "200",
                  "originalRequest": {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "url": {
                      "query": [],
                      "variable": []
                    },
                    "method": "GET",
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Access-Control-Allow-Credentials",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Credentials",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": ""
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Encoding",
                      "value": "gzip"
                    },
                    {
                      "name": "Content-Length",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Length",
                      "value": "42"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Thu, 29 Oct 2015 06:17:51 GMT"
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "nginx/1.6.2"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    },
                    {
                      "name": "X-Powered-By",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Powered-By",
                      "value": "Sails <sailsjs.org>"
                    }
                  ],
                  "body": "{\"authenticated\":true}",
                  "cookie": [],
                  "responseTime": "9843"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "22c50cc6-ed53-4ea0-811c-ae5839b81491",
                    "type": "text/javascript",
                    "exec": [
                      "tests[\"response code is 200\"] = responseCode.code === 200;",
                      "tests[\"body contains authenticated\"] = responseBody.has(\"authenticated\");"
                    ],
                    "_lastExecutionId": "7e05dbee-93b8-4809-9a1a-88c07ea0b505"
                  }
                }
              ]
            },
            {
              "_": {},
              "id": "3a9a1674-1574-4a72-914c-e4c137940dac",
              "name": "Hawk Auth",
              "request": {
                "description": {
                  "content": "This endpoint is a Hawk Authentication protected endpoint. [Hawk authentication](https://github.com/hueniverse/hawk) is a widely used protocol for protecting API endpoints. One of Hawk's main goals is to enable HTTP authentication for services that do not use TLS (although it can be used in conjunction with TLS as well).\n\nIn order to use this endpoint, select the \"Hawk Auth\" helper inside Postman, and set the following values:\n\nHawk Auth ID: `dh37fgj492je`\n\nHawk Auth Key: `werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn`\n\nAlgorithm: `sha256`\n\nThe rest of the values are optional, and can be left blank. Hitting send should give you a response with a status code of 200 OK.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "auth",
                    "hawk"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "access_token",
                      "value": "xyz1",
                      "type": "text"
                    },
                    {
                      "key": "id",
                      "value": "U1",
                      "type": "text"
                    },
                    {
                      "key": "server_secret",
                      "value": "zeppelin",
                      "type": "text"
                    },
                    {
                      "key": "admin",
                      "value": "true",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "hawk",
                  "hawk": [
                    {
                      "type": "string",
                      "value": "dh37fgj492je",
                      "key": "authId"
                    },
                    {
                      "type": "string",
                      "value": "werxhqb98rpaxn39848xrunpaw3489ruxnpa98w4rxn",
                      "key": "authKey"
                    },
                    {
                      "type": "string",
                      "value": "sha256",
                      "key": "algorithm"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "user"
                    },
                    {
                      "type": "any",
                      "key": "saveHelperData"
                    },
                    {
                      "type": "string",
                      "value": "RZKGNz",
                      "key": "nonce"
                    },
                    {
                      "type": "any",
                      "key": "extraData"
                    },
                    {
                      "type": "any",
                      "key": "appId"
                    },
                    {
                      "type": "any",
                      "key": "delegation"
                    },
                    {
                      "type": "string",
                      "value": "1522505600",
                      "key": "timestamp",
                      "system": true
                    }
                  ]
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "javascript",
                    "postman_previewtype": "html"
                  },
                  "id": "b0eb7710-1fdc-4565-ac68-65e1f57d5437",
                  "name": "Success",
                  "originalRequest": {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "url": {
                      "protocol": "https",
                      "path": [
                        "auth",
                        "hawk"
                      ],
                      "host": [
                        "echo",
                        "getpostman",
                        "com"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "name": "Authorization",
                        "key": "Authorization",
                        "value": "Hawk id=\"dh37fgj492je\", ts=\"1459422734\", nonce=\"XiwiCU\", mac=\"KzMHk67BYCC9zZqRy5hRdWFEFLHX5bNlRWGdmOAWKp0=\""
                      }
                    ],
                    "method": "GET",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "access_token",
                          "value": "xyz1",
                          "type": "text"
                        },
                        {
                          "key": "id",
                          "value": "U1",
                          "type": "text"
                        },
                        {
                          "key": "server_secret",
                          "value": "zeppelin",
                          "type": "text"
                        },
                        {
                          "key": "admin",
                          "value": "true",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Access-Control-Allow-Credentials",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Credentials",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": ""
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Encoding",
                      "value": "gzip"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Thu, 31 Mar 2016 11:12:16 GMT"
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "nginx/1.6.2"
                    },
                    {
                      "name": "Server-Authorization",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server-Authorization",
                      "value": "Hawk mac=\"vRrUzDdcHu2NaNts/r4zg2xmXMdX8wPiTGTM398BDRg=\", hash=\"qmtflETMybaZiOQ2dLT17yiRunFT5OCIxZRZ0boQaiE=\""
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    },
                    {
                      "name": "X-Powered-By",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "X-Powered-By",
                      "value": "Sails <sailsjs.org>"
                    },
                    {
                      "name": "transfer-encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "transfer-encoding",
                      "value": "chunked"
                    }
                  ],
                  "body": "{\"status\":\"pass\",\"message\":\"Hawk Authentication successful\"}",
                  "cookie": [
                    {
                      "name": "getpostmanlogin",
                      "expires": null,
                      "domain": ".getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": false,
                      "hostOnly": false,
                      "session": false,
                      "value": "yes"
                    },
                    {
                      "name": "postman.sid",
                      "expires": null,
                      "domain": ".getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": false,
                      "hostOnly": false,
                      "session": false,
                      "value": "9f887f3b7f14b8c29ac4dc4109381b0b89a76e785c7b34251d6c8025b41b24013d2aa49f40e2deac19cbf0594dd984169455534d91ff98d4d1868d67ac857017629f137926e3a04a616bb83a2fb5ab9e6cbea9579ed5d5c1155d47545d72aad5be99f4abd0a7130805b3807d70cd507171dbe9d950d8e35a853f9ec075f5a767c95df4d57f7d521b66605b3bda3801700e26e651d1129c798b729ee3b91702d43ae64ab226c3f426893753def772c15442a7552dc84a3c773d6099a50b0a6af940b64c8176fedfcecd5fc31ccfc3bbc0124bfdaa0d62e4252d4aafb46a3c10963d12391e1fa97a1c0f19a636f57a3ac8cc35567d1cb6cb53b77f8adde3f6754a765596d7d00bdeb9acb5cc8d115e7c3f50ec3228e34d3e6c7464e9039b01868e03d10e9f87772397602453e9e91205de7b86021fad06eb26e69298e99ff1597a670faeb310f8c092041d544851de84f2bee89a92123da6eea286210524035c85361e2af42166a6"
                    },
                    {
                      "name": "sails.sid",
                      "expires": null,
                      "domain": "echo.getpostman.com",
                      "path": "/",
                      "secure": false,
                      "httpOnly": true,
                      "hostOnly": true,
                      "session": true,
                      "value": "s%3AryJV7v-PE4PuTjBK6nH5XOynQ4atuATV.n17KcaLhVmV8TBHNLwdwXgGR7lmqs3i478WPlTbRgZ4"
                    }
                  ],
                  "responseTime": "1855"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "b556a26e-ac34-4995-a65f-ca20a7db850e",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response body has json saying passed 'status'\", function () {",
                      "    pm.response.to.have.jsonBody('status', 'pass');",
                      "});"
                    ],
                    "_lastExecutionId": "1729e7ee-9080-4e4d-a208-8d1d23df9231"
                  }
                }
              ]
            },
            {
              "_": {},
              "id": "8baf8505-3767-4ee3-94a2-cee70cb981bc",
              "name": "OAuth1.0 (verify signature)",
              "request": {
                "description": {
                  "content": "OAuth1.0a is a specification that defines a protocol that can be used by one\nservice to access \"protected\" resources (endpoints) on another service. A\nmajor part of OAuth1.0 is HTTP Request Signing. This endpoint allows you to \ncheck whether the request calculation works properly in the client. \n\nThe endpoint supports the HTTP ``Authorization`` header. In case the signature\nverification fails, the endpoint provides the four debug values,\n\n* ``base_uri``\n* ``normalized_param_string``\n* ``base_string``\n* ``signing_key``\n\nFor more details about these parameters, check the [OAuth1.0a Specification](http://oauth.net/core/1.0a/)\n\nIn order to use this endpoint, you can set the following values:\n\n> Consumer Key: ``RKCGzna7bv9YD57c``\n>\n> Consumer Secret: ``D+EdQ-gs$-%@2Nu7``\n\nIf you are using Postman, also check the \"Add params to header\" and \n\"Auto add parameters\" boxes.",
                  "type": "text/plain"
                },
                "url": {
                  "protocol": "https",
                  "path": [
                    "oauth1"
                  ],
                  "host": [
                    "postman-echo",
                    "com"
                  ],
                  "query": [],
                  "variable": []
                },
                "method": "GET",
                "body": {
                  "mode": "formdata",
                  "formdata": [
                    {
                      "key": "code",
                      "value": "xWnkliVQJURqB2x1",
                      "type": "text"
                    },
                    {
                      "key": "grant_type",
                      "value": "authorization_code",
                      "type": "text"
                    },
                    {
                      "key": "redirect_uri",
                      "value": "https://www.getpostman.com/oauth2/callback",
                      "type": "text"
                    },
                    {
                      "key": "client_id",
                      "value": "abc123",
                      "type": "text"
                    },
                    {
                      "key": "client_secret",
                      "value": "ssh-secret",
                      "type": "text"
                    }
                  ]
                },
                "auth": {
                  "type": "oauth1",
                  "oauth1": [
                    {
                      "type": "string",
                      "value": "RKCGzna7bv9YD57c",
                      "key": "consumerKey"
                    },
                    {
                      "type": "string",
                      "value": "D+EdQ-gs$-%@2Nu7",
                      "key": "consumerSecret"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "token"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "tokenSecret"
                    },
                    {
                      "type": "string",
                      "value": "HMAC-SHA1",
                      "key": "signatureMethod"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "timestamp"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "nonce"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "version"
                    },
                    {
                      "type": "string",
                      "value": "",
                      "key": "realm"
                    },
                    {
                      "type": "boolean",
                      "value": true,
                      "key": "addParamsToHeader"
                    },
                    {
                      "type": "any",
                      "key": "autoAddParam"
                    },
                    {
                      "type": "boolean",
                      "value": false,
                      "key": "addEmptyParamsToSign"
                    }
                  ]
                }
              },
              "response": [
                {
                  "_": {
                    "postman_previewlanguage": "javascript",
                    "postman_previewtype": "html"
                  },
                  "id": "b2b6f08a-beb7-4f7d-978b-2ca809008591",
                  "name": "200",
                  "originalRequest": {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "url": {
                      "protocol": "https",
                      "path": [
                        "oauth1"
                      ],
                      "host": [
                        "echo",
                        "getpostman",
                        "com"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "name": "Authorization",
                        "key": "Authorization",
                        "value": "OAuth oauth_consumer_key=\"RKCGzna7bv9YD57c\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1472121261\",oauth_nonce=\"ki0RQW\",oauth_version=\"1.0\",oauth_signature=\"s0rK92Myxx7ceUBVzlMaxiiXU00%3D\""
                      }
                    ],
                    "method": "GET",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "code",
                          "value": "xWnkliVQJURqB2x1",
                          "type": "text"
                        },
                        {
                          "key": "grant_type",
                          "value": "authorization_code",
                          "type": "text"
                        },
                        {
                          "key": "redirect_uri",
                          "value": "https://www.getpostman.com/oauth2/callback",
                          "type": "text"
                        },
                        {
                          "key": "client_id",
                          "value": "abc123",
                          "type": "text"
                        },
                        {
                          "key": "client_secret",
                          "value": "ssh-secret",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "OK",
                  "code": 200,
                  "header": [
                    {
                      "name": "Access-Control-Allow-Credentials",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Credentials",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Expose-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Expose-Headers",
                      "value": ""
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Encoding",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Encoding",
                      "value": "gzip"
                    },
                    {
                      "name": "Content-Length",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Length",
                      "value": "95"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Thu, 25 Aug 2016 10:34:23 GMT"
                    },
                    {
                      "name": "ETag",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "ETag",
                      "value": "W/\"4e-Cq3UhvpVSyl6R6204lPVIA\""
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "nginx/1.8.1"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    }
                  ],
                  "body": "{\"status\":\"pass\",\"message\":\"OAuth-1.0a signature verification was successful\"}",
                  "cookie": [],
                  "responseTime": "2057"
                },
                {
                  "_": {
                    "postman_previewlanguage": "javascript",
                    "postman_previewtype": "html"
                  },
                  "id": "57815c2b-4d00-4a7f-aff0-7037a162774a",
                  "name": "401",
                  "originalRequest": {
                    "description": {
                      "content": "",
                      "type": "text/plain"
                    },
                    "url": {
                      "protocol": "https",
                      "path": [
                        "oauth1"
                      ],
                      "host": [
                        "echo",
                        "getpostman",
                        "com"
                      ],
                      "query": [],
                      "variable": []
                    },
                    "header": [
                      {
                        "name": "Authorization",
                        "key": "Authorization",
                        "value": "OAuth oauth_consumer_key=\"RKCGzna7bv9YD57c_wrong\",oauth_signature_method=\"HMAC-SHA1\",oauth_timestamp=\"1472121295\",oauth_nonce=\"8LTsU2\",oauth_version=\"1.0\",oauth_signature=\"tSUexpY%2B7EhSY7cFXiFN5EMx2zw%3D\""
                      }
                    ],
                    "method": "GET",
                    "body": {
                      "mode": "formdata",
                      "formdata": [
                        {
                          "key": "code",
                          "value": "xWnkliVQJURqB2x1",
                          "type": "text"
                        },
                        {
                          "key": "grant_type",
                          "value": "authorization_code",
                          "type": "text"
                        },
                        {
                          "key": "redirect_uri",
                          "value": "https://www.getpostman.com/oauth2/callback",
                          "type": "text"
                        },
                        {
                          "key": "client_id",
                          "value": "abc123",
                          "type": "text"
                        },
                        {
                          "key": "client_secret",
                          "value": "ssh-secret",
                          "type": "text"
                        }
                      ]
                    }
                  },
                  "status": "Unauthorized",
                  "code": 401,
                  "header": [
                    {
                      "name": "Access-Control-Allow-Credentials",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Credentials",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Headers",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Methods",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Methods",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Allow-Origin",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Allow-Origin",
                      "value": ""
                    },
                    {
                      "name": "Access-Control-Expose-Headers",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Access-Control-Expose-Headers",
                      "value": ""
                    },
                    {
                      "name": "Connection",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Connection",
                      "value": "keep-alive"
                    },
                    {
                      "name": "Content-Length",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Length",
                      "value": "536"
                    },
                    {
                      "name": "Content-Type",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Content-Type",
                      "value": "application/json; charset=utf-8"
                    },
                    {
                      "name": "Date",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Date",
                      "value": "Thu, 25 Aug 2016 10:34:55 GMT"
                    },
                    {
                      "name": "ETag",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "ETag",
                      "value": "W/\"218-SGnurnTsu5qV5cCYWxsJlg\""
                    },
                    {
                      "name": "Server",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Server",
                      "value": "nginx/1.8.1"
                    },
                    {
                      "name": "Vary",
                      "description": {
                        "content": "",
                        "type": "text/plain"
                      },
                      "key": "Vary",
                      "value": "Accept-Encoding"
                    }
                  ],
                  "body": "{\"status\":\"fail\",\"message\":\"HMAC-SHA1 verification failed\",\"base_uri\":\"https://echo.getpostman.com/oauth1\",\"normalized_param_string\":\"oauth_consumer_key=RKCGzna7bv9YD57c_wrong&oauth_nonce=8LTsU2&oauth_signature_method=HMAC-SHA1&oauth_timestamp=1472121295&oauth_version=1.0\",\"base_string\":\"GET&https%3A%2F%2Fecho.getpostman.com%2Foauth1&oauth_consumer_key%3DRKCGzna7bv9YD57c_wrong%26oauth_nonce%3D8LTsU2%26oauth_signature_method%3DHMAC-SHA1%26oauth_timestamp%3D1472121295%26oauth_version%3D1.0\",\"signing_key\":\"D%2BEdQ-gs%24-%25%402Nu7&\"}",
                  "cookie": [],
                  "responseTime": "322"
                }
              ],
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9c51ca8f-8d56-480e-a3aa-7de1f06f9f82",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"response is ok\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"response body has json saying passed 'status'\", function () {",
                      "    pm.response.to.have.jsonBody('status', 'pass');",
                      "});"
                    ],
                    "_lastExecutionId": "69cd2ab1-d920-4b04-8d86-a455d11cafd3"
                  }
                }
              ]
            }
          ],
          "event": []
        },
        "cursor": {
          "ref": "05f55531-c7c0-420f-8e2c-edd2a2145cce",
          "length": 37,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6d91527b-a3cf-4fd2-8c42-e6c410a05001",
          "scriptId": "b556a26e-ac34-4995-a65f-ca20a7db850e",
          "execution": "1729e7ee-9080-4e4d-a208-8d1d23df9231"
        }
      }
    ],
    "error": null
  }
}